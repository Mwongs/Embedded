

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 01 15:52:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	text44,global,reloc=2,class=CODE,delta=1
    55                           	psect	text45,global,reloc=2,class=CODE,delta=1
    56                           	psect	text46,global,reloc=2,class=CODE,delta=1
    57                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text58,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	text60,global,reloc=2,class=CODE,delta=1
    71                           	psect	text61,global,reloc=2,class=CODE,delta=1
    72                           	psect	text62,global,reloc=2,class=CODE,delta=1
    73                           	psect	text63,global,reloc=2,class=CODE,delta=1
    74                           	psect	text64,global,reloc=2,class=CODE,delta=1
    75                           	psect	text65,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	text66,global,reloc=2,class=CODE,delta=1
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 23/03/2023 GMT
    84                           ; 
    85                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F47Q10 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   119   000000                     
   120 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   121   000000                     
   122 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   123   000000                     
   124 ;; Function _TMR1_DefaultGateCallback is unused but had its address taken
   125   000000                     
   126 ;; Function _TMR1_Tasks is unused but had its address taken
   127   000000                     
   128 ;; Function _TMR2_PeriodCountSet is unused but had its address taken
   129   000000                     
   130 ;; Function _TMR2_Tasks is unused but had its address taken
   131   000000                     
   132 ;; Function _TMR0_Start is unused but had its address taken
   133   000000                     
   134 ;; Function _TMR0_Stop is unused but had its address taken
   135   000000                     
   136 ;; Function _TMR0_Reload is unused but had its address taken
   137   000000                     
   138 ;; Function _EUSART1_Deinitialize is unused but had its address taken
   139   000000                     
   140 ;; Function _EUSART1_TransmitEnable is unused but had its address taken
   141   000000                     
   142 ;; Function _EUSART1_TransmitDisable is unused but had its address taken
   143   000000                     
   144 ;; Function _EUSART1_AutoBaudSet is unused but had its address taken
   145   000000                     
   146 ;; Function _EUSART1_AutoBaudQuery is unused but had its address taken
   147   000000                     
   148 ;; Function _EUSART1_IsRxReady is unused but had its address taken
   149   000000                     
   150 ;; Function _EUSART1_IsTxReady is unused but had its address taken
   151   000000                     
   152 ;; Function _EUSART1_IsTxDone is unused but had its address taken
   153   000000                     
   154 ;; Function _EUSART1_ErrorGet is unused but had its address taken
   155   000000                     
   156 ;; Function _EUSART1_Read is unused but had its address taken
   157   000000                     
   158 ;; Function _EUSART1_Write is unused but had its address taken
   159   000000                     
   160 ;; Function _EUSART1_DefaultFramingErrorCallback is unused but had its address taken
   161   000000                     
   162 ;; Function _EUSART1_DefaultOverrunErrorCallback is unused but had its address taken
   163   000000                     
   164                           	psect	smallconst
   165   001000                     __psmallconst:
   166                           	callstack 0
   167   001000  00                 	db	0
   168   001001                     _EUSART1:
   169                           	callstack 0
   170   001001  76                 	db	low _EUSART1_Initialize
   171   001002  1E                 	db	high _EUSART1_Initialize
   172   001003  00                 	db	low (_EUSART1_Initialize shr (0+16))
   173   001004  00                 	db	0
   174   001005  00                 	db	0
   175   001006  00                 	db	0
   176   001007  00                 	db	0
   177   001008  00                 	db	0
   178   001009  00                 	db	0
   179   00100A  00                 	db	0
   180   00100B  00                 	db	0
   181   00100C  00                 	db	0
   182   00100D  00                 	db	0
   183   00100E  00                 	db	0
   184   00100F  00                 	db	0
   185   001010  00                 	db	0
   186   001011  00                 	db	0
   187   001012  00                 	db	0
   188   001013  00                 	db	0
   189   001014  00                 	db	0
   190   001015  00                 	db	0
   191   001016  00                 	db	0
   192   001017  00                 	db	0
   193   001018  00                 	db	0
   194   001019  00                 	db	0
   195   00101A  00                 	db	0
   196   00101B  00                 	db	0
   197   00101C  00                 	db	0
   198   00101D  00                 	db	0
   199   00101E  00                 	db	0
   200   00101F  00                 	db	0
   201   001020  00                 	db	0
   202   001021  00                 	db	0
   203   001022  00                 	db	0
   204   001023  00                 	db	0
   205   001024  00                 	db	0
   206   001025  00                 	db	0
   207   001026  00                 	db	0
   208   001027  00                 	db	0
   209   001028  00                 	db	0
   210   001029  00                 	db	0
   211   00102A  00                 	db	0
   212   00102B  00                 	db	0
   213   00102C  00                 	db	0
   214   00102D  00                 	db	0
   215   00102E  00                 	db	0
   216   00102F  00                 	db	0
   217   001030  00                 	db	0
   218   001031  00                 	db	0
   219   001032  00                 	db	0
   220   001033  00                 	db	0
   221   001034  00                 	db	0
   222   001035  00                 	db	0
   223   001036  00                 	db	0
   224   001037  00                 	db	0
   225   001038  00                 	db	0
   226   001039  00                 	db	0
   227   00103A  00                 	db	0
   228   00103B  00                 	db	0
   229   00103C  00                 	db	0
   230   00103D  0C                 	db	low _EUSART1_FramingErrorCallbackRegister
   231   00103E  21                 	db	high _EUSART1_FramingErrorCallbackRegister
   232   00103F  00                 	db	low (_EUSART1_FramingErrorCallbackRegister shr (0+16))
   233   001040  EA                 	db	low _EUSART1_OverrunErrorCallbackRegister
   234   001041  20                 	db	high _EUSART1_OverrunErrorCallbackRegister
   235   001042  00                 	db	low (_EUSART1_OverrunErrorCallbackRegister shr (0+16))
   236   001043  00                 	db	0
   237   001044  00                 	db	0
   238   001045  00                 	db	0
   239   001046  00                 	db	0
   240   001047  00                 	db	0
   241   001048  00                 	db	0
   242   001049                     __end_of_EUSART1:
   243                           	callstack 0
   244   001049                     _tmr0:
   245                           	callstack 0
   246   001049  52                 	db	low _TMR0_Initialize
   247   00104A  20                 	db	high _TMR0_Initialize
   248   00104B  00                 	db	low (_TMR0_Initialize shr (0+16))
   249   00104C  00                 	db	0
   250   00104D  00                 	db	0
   251   00104E  00                 	db	0
   252   00104F  00                 	db	0
   253   001050  00                 	db	0
   254   001051  00                 	db	0
   255   001052  00                 	db	0
   256   001053  00                 	db	0
   257   001054  00                 	db	0
   258   001055  3A                 	db	low _TMR0_OverflowCallbackRegister
   259   001056  22                 	db	high _TMR0_OverflowCallbackRegister
   260   001057  00                 	db	low (_TMR0_OverflowCallbackRegister shr (0+16))
   261   001058  00                 	db	0
   262   001059  00                 	db	0
   263   00105A  00                 	db	0
   264   00105B                     __end_of_tmr0:
   265                           	callstack 0
   266   00105B                     _tmr2:
   267                           	callstack 0
   268   00105B  D0                 	db	low _TMR2_Initialize
   269   00105C  1F                 	db	high _TMR2_Initialize
   270   00105D  00                 	db	low (_TMR2_Initialize shr (0+16))
   271   00105E  6E                 	db	low _TMR2_Start
   272   00105F  22                 	db	high _TMR2_Start
   273   001060  00                 	db	low (_TMR2_Start shr (0+16))
   274   001061  6A                 	db	low _TMR2_Stop
   275   001062  22                 	db	high _TMR2_Stop
   276   001063  00                 	db	low (_TMR2_Stop shr (0+16))
   277   001064  00                 	db	0
   278   001065  00                 	db	0
   279   001066  00                 	db	0
   280   001067  E6                 	db	low _TMR2_OverflowCallbackRegister
   281   001068  21                 	db	high _TMR2_OverflowCallbackRegister
   282   001069  00                 	db	low (_TMR2_OverflowCallbackRegister shr (0+16))
   283   00106A  00                 	db	0
   284   00106B  00                 	db	0
   285   00106C  00                 	db	0
   286   00106D                     __end_of_tmr2:
   287                           	callstack 0
   288   00106D                     _tmr1:
   289                           	callstack 0
   290   00106D  AA                 	db	low _TMR1_Initialize
   291   00106E  1B                 	db	high _TMR1_Initialize
   292   00106F  00                 	db	low (_TMR1_Initialize shr (0+16))
   293   001070  76                 	db	low _TMR1_Start
   294   001071  22                 	db	high _TMR1_Start
   295   001072  00                 	db	low (_TMR1_Start shr (0+16))
   296   001073  72                 	db	low _TMR1_Stop
   297   001074  22                 	db	high _TMR1_Stop
   298   001075  00                 	db	low (_TMR1_Stop shr (0+16))
   299   001076  7A                 	db	low _TMR1_Write
   300   001077  20                 	db	high _TMR1_Write
   301   001078  00                 	db	low (_TMR1_Write shr (0+16))
   302   001079  F4                 	db	low _TMR1_OverflowCallbackRegister
   303   00107A  21                 	db	high _TMR1_OverflowCallbackRegister
   304   00107B  00                 	db	low (_TMR1_OverflowCallbackRegister shr (0+16))
   305   00107C  00                 	db	0
   306   00107D  00                 	db	0
   307   00107E  00                 	db	0
   308   00107F                     __end_of_tmr1:
   309                           	callstack 0
   310   000000                     _NVMDATL	set	3964
   311   000000                     _NVMDATH	set	3965
   312   000000                     _NVMCON2	set	3969
   313   000000                     _TX1REG	set	3993
   314   000000                     _SP1BRGH	set	3995
   315   000000                     _TX1STA	set	3997
   316   000000                     _T0CON0	set	4052
   317   000000                     _T0CON1	set	4053
   318   000000                     _TMR0L	set	4050
   319   000000                     _TMR0H	set	4051
   320   000000                     _T2CON	set	4028
   321   000000                     _T1CON	set	4046
   322   000000                     _T1CLK	set	4049
   323   000000                     _T1GATE	set	4048
   324   000000                     _OSCTUNE	set	3800
   325   000000                     _OSCFRQ	set	3801
   326   000000                     _IOCEF	set	3874
   327   000000                     _IOCEN	set	3875
   328   000000                     _IOCEP	set	3876
   329   000000                     _IOCCF	set	3861
   330   000000                     _IOCCN	set	3862
   331   000000                     _IOCCP	set	3863
   332   000000                     _IOCBF	set	3853
   333   000000                     _IOCBN	set	3854
   334   000000                     _IOCBP	set	3855
   335   000000                     _RA6PPS	set	3816
   336   000000                     _INLVLE	set	3877
   337   000000                     _INLVLD	set	3869
   338   000000                     _INLVLC	set	3864
   339   000000                     _INLVLB	set	3856
   340   000000                     _SLRCONE	set	3878
   341   000000                     _SLRCOND	set	3870
   342   000000                     _SLRCONC	set	3865
   343   000000                     _SLRCONB	set	3857
   344   000000                     _ODCONE	set	3879
   345   000000                     _ODCOND	set	3871
   346   000000                     _ODCONC	set	3866
   347   000000                     _ODCONB	set	3858
   348   000000                     _WPUE	set	3880
   349   000000                     _WPUD	set	3872
   350   000000                     _WPUC	set	3867
   351   000000                     _WPUB	set	3859
   352   000000                     _ANSELE	set	3881
   353   000000                     _ANSELD	set	3873
   354   000000                     _ANSELC	set	3868
   355   000000                     _ANSELB	set	3860
   356   000000                     _ADERRL	set	3945
   357   000000                     _ADERRH	set	3946
   358   000000                     _ADPREVL	set	3932
   359   000000                     _ADPREVH	set	3933
   360   000000                     _ADFLTRL	set	3949
   361   000000                     _ADFLTRH	set	3950
   362   000000                     _ADACCL	set	3947
   363   000000                     _ADACCH	set	3948
   364   000000                     _ADCNT	set	3938
   365   000000                     _ADACQ	set	3927
   366   000000                     _ADCON0	set	3931
   367   000000                     _ADCLK	set	3922
   368   000000                     _ADSTAT	set	3936
   369   000000                     _ADCON3	set	3926
   370   000000                     _ADCON2	set	3925
   371   000000                     _ADPRE	set	3929
   372   000000                     _ADRPT	set	3937
   373   000000                     _ADSTPTH	set	3940
   374   000000                     _ADSTPTL	set	3939
   375   000000                     _ADUTHH	set	3944
   376   000000                     _ADUTHL	set	3943
   377   000000                     _ADLTHH	set	3942
   378   000000                     _ADLTHL	set	3941
   379   000000                     _PIR4bits	set	3785
   380   000000                     _PIE0bits	set	3773
   381   000000                     _PPSLOCKbits	set	3739
   382   000000                     _ADCON1bits	set	3924
   383   000000                     _ADCON2bits	set	3925
   384   000000                     _ADCON3bits	set	3926
   385   000000                     _ADRESL	set	3934
   386   000000                     _ADRESH	set	3935
   387   000000                     _ADCON0bits	set	3931
   388   000000                     _BAUD1CONbits	set	3998
   389   000000                     _TX1STAbits	set	3997
   390   000000                     _RC1STAbits	set	3996
   391   000000                     _T0CON0bits	set	4052
   392   000000                     _PR2	set	4027
   393   000000                     _TMR2	set	4026
   394   000000                     _T2CONbits	set	4028
   395   000000                     _T2RSTbits	set	4031
   396   000000                     _T2HLTbits	set	4029
   397   000000                     _T1GCONbits	set	4047
   398   000000                     _T1CONbits	set	4046
   399   000000                     _ADSTATbits	set	3936
   400   000000                     _LATAbits	set	3970
   401   000000                     _PPSLOCK	set	3739
   402   000000                     _LATA	set	3970
   403   000000                     _TMR1IF	set	30280
   404   000000                     _PORTBbits	set	3981
   405   000000                     _RC1REG	set	3992
   406   000000                     _SP1BRGL	set	3994
   407   000000                     _RC1STA	set	3996
   408   000000                     _BAUD1CON	set	3998
   409   000000                     _TRISE	set	3979
   410   000000                     _TRISD	set	3978
   411   000000                     _TRISC	set	3977
   412   000000                     _TRISB	set	3976
   413   000000                     _TRISA	set	3975
   414   000000                     _LATE	set	3974
   415   000000                     _LATD	set	3973
   416   000000                     _LATC	set	3972
   417   000000                     _LATB	set	3971
   418   000000                     _PWM3DCL	set	4002
   419   000000                     _PWM3DCH	set	4003
   420   000000                     _PWM3CON	set	4004
   421   000000                     _CCPTMRSbits	set	4013
   422   000000                     _INTCONbits	set	4082
   423   000000                     _ADRES	set	3934
   424   000000                     _PIR5bits	set	3786
   425   000000                     _WDTCON0bits	set	3789
   426   000000                     _RA7PPS	set	3817
   427   000000                     _RX1PPS	set	3760
   428   000000                     _TMR0IE	set	30189
   429   000000                     _RC6PPS	set	3832
   430   000000                     _INLVLA	set	3848
   431   000000                     _SLRCONA	set	3849
   432   000000                     _ODCONA	set	3850
   433   000000                     _WPUA	set	3851
   434   000000                     _ANSELA	set	3852
   435   000000                     _ADACT	set	3921
   436   000000                     _ADREF	set	3923
   437   000000                     _ADCON1	set	3924
   438   000000                     _ADCAP	set	3928
   439   000000                     _ADPCH	set	3930
   440   000000                     _TABLAT	set	4085
   441   000000                     _TBLPTRL	set	4086
   442   000000                     _TBLPTRH	set	4087
   443   000000                     _TBLPTRU	set	4088
   444   000000                     _PIR0bits	set	3781
   445   000000                     _PIR1bits	set	3782
   446   000000                     _OSCCON1	set	3795
   447   000000                     _RA5PPS	set	3815
   448   000000                     _PIR3bits	set	3784
   449   000000                     _NVMADRL	set	3961
   450   000000                     _NVMADRH	set	3962
   451   000000                     _NVMADRU	set	3963
   452   000000                     _NVMCON0bits	set	3967
   453   000000                     _NVMCON1bits	set	3968
   454   000000                     _T2TMR	set	4026
   455   000000                     _T2PR	set	4027
   456   000000                     _T2HLT	set	4029
   457   000000                     _T2CLKCON	set	4030
   458   000000                     _TMR1L	set	4044
   459   000000                     _TMR1H	set	4045
   460   000000                     _T1GCON	set	4047
   461   000000                     _IOCAF	set	3845
   462   000000                     _IOCAN	set	3846
   463   000000                     _IOCAP	set	3847
   464   000000                     _OSCCON3	set	3797
   465   000000                     _OSCEN	set	3799
   466   000000                     _T2RST	set	4031
   467   00107F                     STR_1:
   468   00107F  41                 	db	65	;'A'
   469   001080  44                 	db	68	;'D'
   470   001081  43                 	db	67	;'C'
   471   001082  20                 	db	32
   472   001083  52                 	db	82	;'R'
   473   001084  65                 	db	101	;'e'
   474   001085  73                 	db	115	;'s'
   475   001086  75                 	db	117	;'u'
   476   001087  6C                 	db	108	;'l'
   477   001088  74                 	db	116	;'t'
   478   001089  3A                 	db	58	;':'
   479   00108A  20                 	db	32
   480   00108B  25                 	db	37
   481   00108C  64                 	db	100	;'d'
   482   00108D  0A                 	db	10
   483   00108E  0D                 	db	13
   484   00108F  00                 	db	0
   485   001090  00                 	db	0	; dummy byte at the end
   486   000000                     
   487                           ; #config settings
   488                           
   489                           	psect	cinit
   490   0020C8                     __pcinit:
   491                           	callstack 0
   492   0020C8                     start_initialization:
   493                           	callstack 0
   494   0020C8                     __initialization:
   495                           	callstack 0
   496                           
   497                           ; Clear objects allocated to BANK0 (70 bytes)
   498   0020C8  EE00  F060         	lfsr	0,__pbssBANK0
   499   0020CC  0E46               	movlw	70
   500   0020CE                     clear_0:
   501   0020CE  6AEE               	clrf	postinc0,c
   502   0020D0  06E8               	decf	wreg,f,c
   503   0020D2  E1FD               	bnz	clear_0
   504                           
   505                           ; Clear objects allocated to COMRAM (18 bytes)
   506   0020D4  EE00  F04C         	lfsr	0,__pbssCOMRAM
   507   0020D8  0E12               	movlw	18
   508   0020DA                     clear_1:
   509   0020DA  6AEE               	clrf	postinc0,c
   510   0020DC  06E8               	decf	wreg,f,c
   511   0020DE  E1FD               	bnz	clear_1
   512   0020E0                     end_of_initialization:
   513                           	callstack 0
   514   0020E0                     __end_of__initialization:
   515                           	callstack 0
   516   0020E0  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   517   0020E2  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   518   0020E4  0100               	movlb	0
   519   0020E6  EFAD  F009         	goto	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMRAM
   522   00004C                     __pbssCOMRAM:
   523                           	callstack 0
   524   00004C                     _adcResult@PWM$F208:
   525                           	callstack 0
   526   00004C                     	ds	2
   527   00004E                     _flags:
   528                           	callstack 0
   529   00004E                     	ds	1
   530   00004F                     _unlockKeyHigh:
   531                           	callstack 0
   532   00004F                     	ds	1
   533   000050                     _unlockKeyLow:
   534                           	callstack 0
   535   000050                     	ds	1
   536   000051                     _ledDisplay:
   537                           	callstack 0
   538   000051                     	ds	1
   539   000052                     _adcResult@EEPROM$F389:
   540                           	callstack 0
   541   000052                     	ds	1
   542   000053                     _rotateReg@Interrupt$F303:
   543                           	callstack 0
   544   000053                     	ds	1
   545   000054                     _rotateReg@Timers$F236:
   546                           	callstack 0
   547   000054                     	ds	1
   548   000055                     _rotateReg@VSR$F162:
   549                           	callstack 0
   550   000055                     	ds	1
   551   000056                     _delay:
   552                           	callstack 0
   553   000056                     	ds	1
   554   000057                     _adcResult:
   555                           	callstack 0
   556   000057                     	ds	1
   557   000058                     _rotateReg:
   558                           	callstack 0
   559   000058                     	ds	1
   560   000059                     _flagCounter:
   561                           	callstack 0
   562   000059                     	ds	1
   563   00005A                     _btnState:
   564                           	callstack 0
   565   00005A                     	ds	1
   566   00005B                     _labState:
   567                           	callstack 0
   568   00005B                     	ds	1
   569   00005C                     _switchEvent:
   570                           	callstack 0
   571   00005C                     	ds	1
   572   00005D                     _labNumber:
   573                           	callstack 0
   574   00005D                     	ds	1
   575                           
   576                           	psect	bssBANK0
   577   000060                     __pbssBANK0:
   578                           	callstack 0
   579   000060                     _EUSART1_OverrunErrorHandler:
   580                           	callstack 0
   581   000060                     	ds	3
   582   000063                     _EUSART1_FramingErrorHandler:
   583                           	callstack 0
   584   000063                     	ds	3
   585   000066                     _TMR0_OverflowCallback:
   586                           	callstack 0
   587   000066                     	ds	3
   588   000069                     _TMR2_OverflowCallback:
   589                           	callstack 0
   590   000069                     	ds	3
   591   00006C                     _TMR1_GateCallback:
   592                           	callstack 0
   593   00006C                     	ds	3
   594   00006F                     _TMR1_OverflowCallback:
   595                           	callstack 0
   596   00006F                     	ds	3
   597   000072                     _TMR1_InterruptHandler:
   598                           	callstack 0
   599   000072                     	ds	3
   600   000075                     _INT2_InterruptHandler:
   601                           	callstack 0
   602   000075                     	ds	3
   603   000078                     _INT1_InterruptHandler:
   604                           	callstack 0
   605   000078                     	ds	3
   606   00007B                     _INT0_InterruptHandler:
   607                           	callstack 0
   608   00007B                     	ds	3
   609   00007E                     _width:
   610                           	callstack 0
   611   00007E                     	ds	2
   612   000080                     _prec:
   613                           	callstack 0
   614   000080                     	ds	2
   615   000082                     _eusart1RxLastError:
   616                           	callstack 0
   617   000082                     	ds	2
   618   000084                     _timer1ReloadVal:
   619                           	callstack 0
   620   000084                     	ds	2
   621   000086                     _dbuf:
   622                           	callstack 0
   623   000086                     	ds	32
   624                           
   625                           	psect	cstackCOMRAM
   626   000001                     __pcstackCOMRAM:
   627                           	callstack 0
   628   000001                     ??_INTERRUPT_InterruptManager:
   629   000001                     
   630                           ; 1 bytes @ 0x0
   631   000001                     	ds	2
   632   000003                     ??_checkButtonS1:
   633   000003                     ??_Rotate:
   634   000003                     ?_ADCC_GetSingleConversion:
   635                           	callstack 0
   636   000003                     ?___awdiv:
   637                           	callstack 0
   638   000003                     ?___awmod:
   639                           	callstack 0
   640   000003                     PWM3_LoadDutyValue@dutyValue:
   641                           	callstack 0
   642   000003                     TMR1_Write@timerVal:
   643                           	callstack 0
   644   000003                     NVM_UnlockKeySet@unlockKey:
   645                           	callstack 0
   646   000003                     ___awdiv@dividend:
   647                           	callstack 0
   648   000003                     ___awmod@dividend:
   649                           	callstack 0
   650   000003                     fputc@c:
   651                           	callstack 0
   652   000003                     INT0_SetInterruptHandler@InterruptHandler:
   653                           	callstack 0
   654   000003                     INT1_SetInterruptHandler@InterruptHandler:
   655                           	callstack 0
   656   000003                     INT2_SetInterruptHandler@InterruptHandler:
   657                           	callstack 0
   658   000003                     TMR1_OverflowCallbackRegister@CallbackHandler:
   659                           	callstack 0
   660   000003                     TMR1_GateCallbackRegister@CallbackHandler:
   661                           	callstack 0
   662   000003                     TMR2_OverflowCallbackRegister@InterruptHandler:
   663                           	callstack 0
   664   000003                     TMR0_OverflowCallbackRegister@CallbackHandler:
   665                           	callstack 0
   666   000003                     EUSART1_FramingErrorCallbackRegister@callbackHandler:
   667                           	callstack 0
   668   000003                     EUSART1_OverrunErrorCallbackRegister@callbackHandler:
   669                           	callstack 0
   670   000003                     EEPROM_Read@address:
   671                           	callstack 0
   672   000003                     EEPROM_Write@address:
   673                           	callstack 0
   674                           
   675                           ; 3 bytes @ 0x2
   676   000003                     	ds	2
   677   000005                     ??_ADCC_GetSingleConversion:
   678   000005                     ??_PWM3_LoadDutyValue:
   679   000005                     ??_Blink:
   680   000005                     ___awdiv@divisor:
   681                           	callstack 0
   682   000005                     ___awmod@divisor:
   683                           	callstack 0
   684   000005                     fputc@fp:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x4
   688   000005                     	ds	1
   689   000006                     ??_EEPROM_Read:
   690   000006                     ??_TMR1_Initialize:
   691   000006                     EEPROM_Write@data:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x5
   695   000006                     	ds	1
   696   000007                     ??_EEPROM_Write:
   697   000007                     ??_fputc:
   698   000007                     ADCC_GetSingleConversion@channel:
   699                           	callstack 0
   700   000007                     ___awdiv@counter:
   701                           	callstack 0
   702   000007                     ___awmod@counter:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x6
   706   000007                     	ds	1
   707   000008                     ___awdiv@sign:
   708                           	callstack 0
   709   000008                     ___awmod@sign:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x7
   713   000008                     	ds	1
   714   000009                     ?_abs:
   715                           	callstack 0
   716   000009                     ___awdiv@quotient:
   717                           	callstack 0
   718   000009                     abs@a:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x8
   722   000009                     	ds	1
   723   00000A                     EEPROM_Write@globalInterruptBitValue:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x9
   727   00000A                     	ds	1
   728   00000B                     ??_abs:
   729   00000B                     ??_EEPROM:
   730                           
   731                           ; 1 bytes @ 0xA
   732   00000B                     	ds	1
   733   00000C                     fputs@s:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0xB
   737   00000C                     	ds	2
   738   00000E                     fputs@fp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0xD
   742   00000E                     	ds	2
   743   000010                     fputs@c:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0xF
   747   000010                     	ds	1
   748   000011                     fputs@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x10
   752   000011                     	ds	2
   753   000013                     pad@fp:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x12
   757   000013                     	ds	2
   758   000015                     pad@buf:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x14
   762   000015                     	ds	2
   763   000017                     pad@p:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x16
   767   000017                     	ds	2
   768   000019                     ??_pad:
   769                           
   770                           ; 1 bytes @ 0x18
   771   000019                     	ds	1
   772   00001A                     pad@i:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x19
   776   00001A                     	ds	2
   777   00001C                     pad@w:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x1B
   781   00001C                     	ds	2
   782   00001E                     dtoa@fp:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x1D
   786   00001E                     	ds	2
   787   000020                     dtoa@d:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x1F
   791   000020                     	ds	2
   792   000022                     _dtoa$2783:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x21
   796   000022                     	ds	2
   797   000024                     dtoa@p:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x23
   801   000024                     	ds	2
   802   000026                     dtoa@w:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x25
   806   000026                     	ds	2
   807   000028                     dtoa@i:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x27
   811   000028                     	ds	2
   812   00002A                     dtoa@s:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x29
   816   00002A                     	ds	1
   817   00002B                     vfpfcnvrt@fp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x2A
   821   00002B                     	ds	2
   822   00002D                     vfpfcnvrt@fmt:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x2C
   826   00002D                     	ds	2
   827   00002F                     vfpfcnvrt@ap:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x2E
   831   00002F                     	ds	2
   832   000031                     ??_vfpfcnvrt:
   833                           
   834                           ; 1 bytes @ 0x30
   835   000031                     	ds	2
   836   000033                     vfpfcnvrt@convarg:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x32
   840   000033                     	ds	4
   841   000037                     vfpfcnvrt@cp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x36
   845   000037                     	ds	2
   846   000039                     ?_vfprintf:
   847                           	callstack 0
   848   000039                     vfprintf@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x38
   852   000039                     	ds	2
   853   00003B                     vfprintf@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x3A
   857   00003B                     	ds	2
   858   00003D                     vfprintf@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x3C
   862   00003D                     	ds	2
   863   00003F                     vfprintf@cfmt:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x3E
   867   00003F                     	ds	2
   868   000041                     ?_printf:
   869                           	callstack 0
   870   000041                     printf@fmt:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x40
   874   000041                     	ds	4
   875   000045                     printf@ap:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x44
   879   000045                     	ds	2
   880   000047                     ??_ADC:
   881   000047                     ??_VSR:
   882   000047                     ??_PWM:
   883                           
   884                           ; 1 bytes @ 0x46
   885   000047                     	ds	3
   886   00004A                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x49
   889   00004A                     	ds	2
   890                           
   891 ;;
   892 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   893 ;;
   894 ;; *************** function _main *****************
   895 ;; Defined at:
   896 ;;		line 42 in file "main.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels required when called: 12
   916 ;; This function calls:
   917 ;;		_ADC
   918 ;;		_Blink
   919 ;;		_EEPROM
   920 ;;		_HelloWorld
   921 ;;		_Interrupt
   922 ;;		_PWM
   923 ;;		_Rotate
   924 ;;		_SYSTEM_Initialize
   925 ;;		_SleepWakeUp
   926 ;;		_Timers
   927 ;;		_VSR
   928 ;;		_checkButtonS1
   929 ;;		_nextLab
   930 ;; This function is called by:
   931 ;;		Startup code after reset
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text0
   936   00135A                     __ptext0:
   937                           	callstack 0
   938   00135A                     _main:
   939                           	callstack 19
   940   00135A                     
   941                           ;main.c: 43:     SYSTEM_Initialize();
   942   00135A  EC14  F010         	call	_SYSTEM_Initialize	;wreg free
   943   00135E  010E               	movlb	14	; () banked
   944   001360  9BBD               	bcf	189,5,b	;volatile
   945   001362                     l3832:
   946                           
   947                           ;main.c: 66:         checkButtonS1();
   948   001362  ECA9  F00E         	call	_checkButtonS1	;wreg free
   949                           
   950                           ;main.c: 67:         switch (labNumber) {
   951   001366  EFDD  F009         	goto	l3856
   952   00136A                     l3834:
   953   00136A  EC5B  F00F         	call	_HelloWorld	;wreg free
   954                           
   955                           ;main.c: 69:                 break;
   956   00136E  EF12  F00A         	goto	l3858
   957   001372                     l3836:
   958   001372  ECFA  F00B         	call	_Blink	;wreg free
   959                           
   960                           ;main.c: 71:                 break;
   961   001376  EF12  F00A         	goto	l3858
   962   00137A                     l3838:
   963   00137A  EC9C  F00D         	call	_Rotate	;wreg free
   964                           
   965                           ;main.c: 73:                 break;
   966   00137E  EF12  F00A         	goto	l3858
   967   001382                     l3840:
   968   001382  ECD6  F00C         	call	_ADC	;wreg free
   969                           
   970                           ;main.c: 75:                 break;
   971   001386  EF12  F00A         	goto	l3858
   972   00138A                     l3842:
   973   00138A  EC46  F00B         	call	_VSR	;wreg free
   974                           
   975                           ;main.c: 77:                 break;
   976   00138E  EF12  F00A         	goto	l3858
   977   001392                     l3844:
   978   001392  EC90  F00C         	call	_PWM	;wreg free
   979                           
   980                           ;main.c: 79:                 break;
   981   001396  EF12  F00A         	goto	l3858
   982   00139A                     l3846:
   983   00139A  EC1B  F00D         	call	_Timers	;wreg free
   984                           
   985                           ;main.c: 81:                 break;
   986   00139E  EF12  F00A         	goto	l3858
   987   0013A2                     l3848:
   988   0013A2  EC56  F00E         	call	_Interrupt	;wreg free
   989                           
   990                           ;main.c: 83:                 break;
   991   0013A6  EF12  F00A         	goto	l3858
   992   0013AA                     l3850:
   993   0013AA  EC2C  F00E         	call	_SleepWakeUp	;wreg free
   994                           
   995                           ;main.c: 85:                 break;
   996   0013AE  EF12  F00A         	goto	l3858
   997   0013B2                     l3852:
   998   0013B2  EC48  F00C         	call	_EEPROM	;wreg free
   999                           
  1000                           ;main.c: 87:                 break;
  1001   0013B6  EF12  F00A         	goto	l3858
  1002   0013BA                     l3856:
  1003   0013BA  505D               	movf	_labNumber^0,w,c
  1004   0013BC  6E4A               	movwf	??_main^0,c
  1005   0013BE  6A4B               	clrf	(??_main+1)^0,c
  1006                           
  1007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 1, Range of values is 0 to 0
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte            4     3 (average)
  1013                           ;	Chosen strategy is simple_byte
  1014   0013C0  504B               	movf	(??_main+1)^0,w,c
  1015   0013C2  0A00               	xorlw	0	; case 0
  1016   0013C4  B4D8               	btfsc	status,2,c
  1017   0013C6  EFE7  F009         	goto	l3898
  1018   0013CA  EF12  F00A         	goto	l3858
  1019   0013CE                     l3898:
  1020                           
  1021                           ; Switch size 1, requested type "simple"
  1022                           ; Number of cases is 10, Range of values is 1 to 10
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte           31    16 (average)
  1026                           ;	Chosen strategy is simple_byte
  1027   0013CE  504A               	movf	??_main^0,w,c
  1028   0013D0  0A01               	xorlw	1	; case 1
  1029   0013D2  B4D8               	btfsc	status,2,c
  1030   0013D4  EFB5  F009         	goto	l3834
  1031   0013D8  0A03               	xorlw	3	; case 2
  1032   0013DA  B4D8               	btfsc	status,2,c
  1033   0013DC  EFB9  F009         	goto	l3836
  1034   0013E0  0A01               	xorlw	1	; case 3
  1035   0013E2  B4D8               	btfsc	status,2,c
  1036   0013E4  EFBD  F009         	goto	l3838
  1037   0013E8  0A07               	xorlw	7	; case 4
  1038   0013EA  B4D8               	btfsc	status,2,c
  1039   0013EC  EFC1  F009         	goto	l3840
  1040   0013F0  0A01               	xorlw	1	; case 5
  1041   0013F2  B4D8               	btfsc	status,2,c
  1042   0013F4  EFC5  F009         	goto	l3842
  1043   0013F8  0A03               	xorlw	3	; case 6
  1044   0013FA  B4D8               	btfsc	status,2,c
  1045   0013FC  EFC9  F009         	goto	l3844
  1046   001400  0A01               	xorlw	1	; case 7
  1047   001402  B4D8               	btfsc	status,2,c
  1048   001404  EFCD  F009         	goto	l3846
  1049   001408  0A0F               	xorlw	15	; case 8
  1050   00140A  B4D8               	btfsc	status,2,c
  1051   00140C  EFD1  F009         	goto	l3848
  1052   001410  0A01               	xorlw	1	; case 9
  1053   001412  B4D8               	btfsc	status,2,c
  1054   001414  EFD5  F009         	goto	l3850
  1055   001418  0A03               	xorlw	3	; case 10
  1056   00141A  B4D8               	btfsc	status,2,c
  1057   00141C  EFD9  F009         	goto	l3852
  1058   001420  EF12  F00A         	goto	l3858
  1059   001424                     l3858:
  1060                           
  1061                           ;main.c: 90:         if (switchEvent) {
  1062   001424  505C               	movf	_switchEvent^0,w,c
  1063   001426  B4D8               	btfsc	status,2,c
  1064   001428  EF18  F00A         	goto	u2301
  1065   00142C  EF1A  F00A         	goto	u2300
  1066   001430                     u2301:
  1067   001430  EFB1  F009         	goto	l3832
  1068   001434                     u2300:
  1069   001434                     
  1070                           ;main.c: 91:             nextLab();
  1071   001434  ECA7  F010         	call	_nextLab	;wreg free
  1072   001438  EFB1  F009         	goto	l3832
  1073   00143C  EF3B  F000         	goto	start
  1074   001440                     __end_of_main:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _nextLab *****************
  1078 ;; Defined at:
  1079 ;;		line 108 in file "main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 3
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text1
  1108   00214E                     __ptext1:
  1109                           	callstack 0
  1110   00214E                     _nextLab:
  1111                           	callstack 27
  1112   00214E                     
  1113                           ;main.c: 109:     switchEvent = 0;
  1114   00214E  0E00               	movlw	0
  1115   002150  6E5C               	movwf	_switchEvent^0,c
  1116   002152                     
  1117                           ;main.c: 110:     labNumber++;
  1118   002152  2A5D               	incf	_labNumber^0,f,c
  1119   002154                     
  1120                           ;main.c: 112:     if (labNumber > 10) {
  1121   002154  0E0A               	movlw	10
  1122   002156  645D               	cpfsgt	_labNumber^0,c
  1123   002158  EFB0  F010         	goto	u901
  1124   00215C  EFB2  F010         	goto	u900
  1125   002160                     u901:
  1126   002160  EFB4  F010         	goto	l1172
  1127   002164                     u900:
  1128   002164                     
  1129                           ;main.c: 113:         labNumber = 1;
  1130   002164  0E01               	movlw	1
  1131   002166  6E5D               	movwf	_labNumber^0,c
  1132   002168                     l1172:
  1133   002168  0012               	return		;funcret
  1134   00216A                     __end_of_nextLab:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _checkButtonS1 *****************
  1138 ;; Defined at:
  1139 ;;		line 96 in file "main.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1157 ;;Total ram usage:        1 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 3
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text2
  1168   001D52                     __ptext2:
  1169                           	callstack 0
  1170   001D52                     _checkButtonS1:
  1171                           	callstack 27
  1172   001D52                     
  1173                           ;main.c: 97:     if (btnState == 0) {
  1174   001D52  505A               	movf	_btnState^0,w,c
  1175   001D54  A4D8               	btfss	status,2,c
  1176   001D56  EFAF  F00E         	goto	u871
  1177   001D5A  EFB1  F00E         	goto	u870
  1178   001D5E                     u871:
  1179   001D5E  EFC4  F00E         	goto	l1164
  1180   001D62                     u870:
  1181   001D62                     
  1182                           ;main.c: 98:         if (PORTBbits.RB4 == 0) {
  1183   001D62  B88D               	btfsc	141,4,c	;volatile
  1184   001D64  EFB6  F00E         	goto	u881
  1185   001D68  EFB8  F00E         	goto	u880
  1186   001D6C                     u881:
  1187   001D6C  EFCF  F00E         	goto	l1168
  1188   001D70                     u880:
  1189   001D70                     
  1190                           ;main.c: 99:             _delay((unsigned long)((100)*(500000/4000.0)));
  1191   001D70  0E11               	movlw	17
  1192   001D72  6E03               	movwf	??_checkButtonS1^0,c
  1193   001D74  0E3A               	movlw	58
  1194   001D76                     u2317:
  1195   001D76  2EE8               	decfsz	wreg,f,c
  1196   001D78  D7FE               	bra	u2317
  1197   001D7A  2E03               	decfsz	??_checkButtonS1^0,f,c
  1198   001D7C  D7FC               	bra	u2317
  1199   001D7E  D000               	nop2	
  1200   001D80                     
  1201                           ;main.c: 100:             btnState = 1;
  1202   001D80  0E01               	movlw	1
  1203   001D82  6E5A               	movwf	_btnState^0,c
  1204   001D84  EFCF  F00E         	goto	l1168
  1205   001D88                     l1164:
  1206   001D88  A88D               	btfss	141,4,c	;volatile
  1207   001D8A  EFC9  F00E         	goto	u891
  1208   001D8E  EFCB  F00E         	goto	u890
  1209   001D92                     u891:
  1210   001D92  EFCF  F00E         	goto	l1168
  1211   001D96                     u890:
  1212   001D96                     
  1213                           ;main.c: 103:         btnState = 0;
  1214   001D96  0E00               	movlw	0
  1215   001D98  6E5A               	movwf	_btnState^0,c
  1216                           
  1217                           ;main.c: 104:         switchEvent = 1;
  1218   001D9A  0E01               	movlw	1
  1219   001D9C  6E5C               	movwf	_switchEvent^0,c
  1220   001D9E                     l1168:
  1221   001D9E  0012               	return		;funcret
  1222   001DA0                     __end_of_checkButtonS1:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _VSR *****************
  1226 ;; Defined at:
  1227 ;;		line 55 in file "Labs/Lab05_VariableSpeedRotate/VSR.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1243 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1245 ;;Total ram usage:        3 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 11
  1248 ;; This function calls:
  1249 ;;		_ADCC_GetSingleConversion
  1250 ;;		_printf
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text3
  1257   00168C                     __ptext3:
  1258                           	callstack 0
  1259   00168C                     _VSR:
  1260                           	callstack 19
  1261   00168C                     
  1262                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 57:     if (labState == 0) {
  1263   00168C  505B               	movf	_labState^0,w,c
  1264   00168E  A4D8               	btfss	status,2,c
  1265   001690  EF4C  F00B         	goto	u1841
  1266   001694  EF4E  F00B         	goto	u1840
  1267   001698                     u1841:
  1268   001698  EF54  F00B         	goto	l3614
  1269   00169C                     u1840:
  1270   00169C  0E00               	movlw	0
  1271   00169E  6E82               	movwf	130,c	;volatile
  1272   0016A0                     
  1273                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 61:         rotateReg = 1;
  1274   0016A0  0E01               	movlw	1
  1275   0016A2  6E55               	movwf	_rotateReg@VSR$F162^0,c
  1276                           
  1277                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 63:         labState = 1;
  1278   0016A4  0E01               	movlw	1
  1279   0016A6  6E5B               	movwf	_labState^0,c
  1280   0016A8                     l3614:
  1281                           
  1282                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 66:     if (labState == 1) {
  1283   0016A8  045B               	decf	_labState^0,w,c
  1284   0016AA  A4D8               	btfss	status,2,c
  1285   0016AC  EF5A  F00B         	goto	u1851
  1286   0016B0  EF5C  F00B         	goto	u1850
  1287   0016B4                     u1851:
  1288   0016B4  EF97  F00B         	goto	l141
  1289   0016B8                     u1850:
  1290   0016B8                     
  1291                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 68:         delay = ADCC_GetSingleConversion(POT_
      +                          CHANNEL) >> 8;
  1292   0016B8  0E00               	movlw	0
  1293   0016BA  ECD0  F00F         	call	_ADCC_GetSingleConversion
  1294   0016BE  C004  F003         	movff	?_ADCC_GetSingleConversion+1,?_ADCC_GetSingleConversion
  1295   0016C2  6A04               	clrf	(?_ADCC_GetSingleConversion+1)^0,c
  1296   0016C4  5003               	movf	?_ADCC_GetSingleConversion^0,w,c
  1297   0016C6  6E56               	movwf	_delay^0,c
  1298   0016C8                     
  1299                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 70:         printf("ADC Result: %d\n\r", ADRES >>
      +                           6);
  1300   0016C8  0E7F               	movlw	low STR_1
  1301   0016CA  6E41               	movwf	printf@fmt^0,c
  1302   0016CC  0E10               	movlw	high STR_1
  1303   0016CE  6E42               	movwf	(printf@fmt+1)^0,c
  1304   0016D0  CF5E F047          	movff	3934,??_VSR	;volatile
  1305   0016D4  CF5F F048          	movff	3935,??_VSR+1	;volatile
  1306   0016D8  0E06               	movlw	6
  1307   0016DA  6E49               	movwf	(??_VSR+2)^0,c
  1308   0016DC                     u1865:
  1309   0016DC  90D8               	bcf	status,0,c
  1310   0016DE  3248               	rrcf	(??_VSR+1)^0,f,c
  1311   0016E0  3247               	rrcf	??_VSR^0,f,c
  1312   0016E2  2E49               	decfsz	(??_VSR+2)^0,f,c
  1313   0016E4  EF6E  F00B         	goto	u1865
  1314   0016E8  C047  F043         	movff	??_VSR,?_printf+2
  1315   0016EC  C048  F044         	movff	??_VSR+1,?_printf+3
  1316   0016F0  EC51  F010         	call	_printf	;wreg free
  1317   0016F4                     l3620:
  1318                           
  1319                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 71:         _delay((unsigned long)((2)*(500000/40
      +                          00.0)));
  1320   0016F4  0E53               	movlw	83
  1321   0016F6                     u2327:
  1322   0016F6  2EE8               	decfsz	wreg,f,c
  1323   0016F8  D7FE               	bra	u2327
  1324   0016FA  F000               	nop	
  1325   0016FC                     
  1326                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 74:         while (delay-- != 0) {
  1327   0016FC  0656               	decf	_delay^0,f,c
  1328   0016FE  2856               	incf	_delay^0,w,c
  1329   001700  A4D8               	btfss	status,2,c
  1330   001702  EF85  F00B         	goto	u1871
  1331   001706  EF87  F00B         	goto	u1870
  1332   00170A                     u1871:
  1333   00170A  EF7A  F00B         	goto	l3620
  1334   00170E                     u1870:
  1335   00170E                     
  1336                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 79:         LATA = (rotateReg << 4);
  1337   00170E  3855               	swapf	_rotateReg@VSR$F162^0,w,c
  1338   001710  0BF0               	andlw	240
  1339   001712  6E82               	movwf	130,c	;volatile
  1340                           
  1341                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 81:         rotateReg <<= 1;
  1342   001714  90D8               	bcf	status,0,c
  1343   001716  3655               	rlcf	_rotateReg@VSR$F162^0,f,c
  1344                           
  1345                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 84:         if (rotateReg == 16) {
  1346   001718  0E10               	movlw	16
  1347   00171A  1855               	xorwf	_rotateReg@VSR$F162^0,w,c
  1348   00171C  A4D8               	btfss	status,2,c
  1349   00171E  EF93  F00B         	goto	u1881
  1350   001722  EF95  F00B         	goto	u1880
  1351   001726                     u1881:
  1352   001726  EF97  F00B         	goto	l141
  1353   00172A                     u1880:
  1354   00172A                     
  1355                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 85:             rotateReg = 1;
  1356   00172A  0E01               	movlw	1
  1357   00172C  6E55               	movwf	_rotateReg@VSR$F162^0,c
  1358   00172E                     l141:
  1359                           
  1360                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 89:     if (switchEvent) {
  1361   00172E  505C               	movf	_switchEvent^0,w,c
  1362   001730  B4D8               	btfsc	status,2,c
  1363   001732  EF9D  F00B         	goto	u1891
  1364   001736  EF9F  F00B         	goto	u1890
  1365   00173A                     u1891:
  1366   00173A  EFA1  F00B         	goto	l147
  1367   00173E                     u1890:
  1368   00173E                     
  1369                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 90:         labState = 0;
  1370   00173E  0E00               	movlw	0
  1371   001740  6E5B               	movwf	_labState^0,c
  1372   001742                     l147:
  1373   001742  0012               	return		;funcret
  1374   001744                     __end_of_VSR:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _Timers *****************
  1378 ;; Defined at:
  1379 ;;		line 54 in file "Labs/Lab07_Timers/Timers.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 5
  1400 ;; This function calls:
  1401 ;;		_TMR1_HasOverflowOccured
  1402 ;;		_TMR1_Reload
  1403 ;;		_TMR1_Start
  1404 ;;		_TMR1_Stop
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text4
  1411   001A36                     __ptext4:
  1412                           	callstack 0
  1413   001A36                     _Timers:
  1414                           	callstack 25
  1415   001A36                     
  1416                           ;Labs/Lab07_Timers/Timers.c: 56:     if (labState == 0) {
  1417   001A36  505B               	movf	_labState^0,w,c
  1418   001A38  A4D8               	btfss	status,2,c
  1419   001A3A  EF21  F00D         	goto	u1941
  1420   001A3E  EF23  F00D         	goto	u1940
  1421   001A42                     u1941:
  1422   001A42  EF2C  F00D         	goto	l3664
  1423   001A46                     u1940:
  1424   001A46  0E00               	movlw	0
  1425   001A48  6E82               	movwf	130,c	;volatile
  1426   001A4A  8882               	bsf	130,4,c	;volatile
  1427   001A4C                     
  1428                           ;Labs/Lab07_Timers/Timers.c: 61:         rotateReg = 1;
  1429   001A4C  0E01               	movlw	1
  1430   001A4E  6E54               	movwf	_rotateReg@Timers$F236^0,c
  1431   001A50                     
  1432                           ;Labs/Lab07_Timers/Timers.c: 63:         TMR1_Start();
  1433   001A50  EC3B  F011         	call	_TMR1_Start	;wreg free
  1434   001A54                     
  1435                           ;Labs/Lab07_Timers/Timers.c: 64:         labState = 1;
  1436   001A54  0E01               	movlw	1
  1437   001A56  6E5B               	movwf	_labState^0,c
  1438   001A58                     l3664:
  1439                           
  1440                           ;Labs/Lab07_Timers/Timers.c: 67:     if (labState == 1) {
  1441   001A58  045B               	decf	_labState^0,w,c
  1442   001A5A  A4D8               	btfss	status,2,c
  1443   001A5C  EF32  F00D         	goto	u1951
  1444   001A60  EF34  F00D         	goto	u1950
  1445   001A64                     u1951:
  1446   001A64  EF52  F00D         	goto	l3680
  1447   001A68                     u1950:
  1448   001A68                     l3668:
  1449   001A68  ECE8  F010         	call	_TMR1_HasOverflowOccured	;wreg free
  1450   001A6C  0900               	iorlw	0
  1451   001A6E  B4D8               	btfsc	status,2,c
  1452   001A70  EF3C  F00D         	goto	u1961
  1453   001A74  EF3E  F00D         	goto	u1960
  1454   001A78                     u1961:
  1455   001A78  EF34  F00D         	goto	l3668
  1456   001A7C                     u1960:
  1457   001A7C                     
  1458                           ;Labs/Lab07_Timers/Timers.c: 69:         TMR1IF = 0;
  1459   001A7C  010E               	movlb	14	; () banked
  1460   001A7E  91C9               	bcf	201,0,b	;volatile
  1461   001A80                     
  1462                           ; BSR set to: 14
  1463                           ;Labs/Lab07_Timers/Timers.c: 70:         TMR1_Reload();
  1464   001A80  EC24  F011         	call	_TMR1_Reload	;wreg free
  1465   001A84                     
  1466                           ;Labs/Lab07_Timers/Timers.c: 72:         rotateReg <<= 1;
  1467   001A84  90D8               	bcf	status,0,c
  1468   001A86  3654               	rlcf	_rotateReg@Timers$F236^0,f,c
  1469   001A88                     
  1470                           ;Labs/Lab07_Timers/Timers.c: 75:         if (rotateReg == 16) {
  1471   001A88  0E10               	movlw	16
  1472   001A8A  1854               	xorwf	_rotateReg@Timers$F236^0,w,c
  1473   001A8C  A4D8               	btfss	status,2,c
  1474   001A8E  EF4B  F00D         	goto	u1971
  1475   001A92  EF4D  F00D         	goto	u1970
  1476   001A96                     u1971:
  1477   001A96  EF4F  F00D         	goto	l3678
  1478   001A9A                     u1970:
  1479   001A9A                     
  1480                           ;Labs/Lab07_Timers/Timers.c: 76:             rotateReg = 1;
  1481   001A9A  0E01               	movlw	1
  1482   001A9C  6E54               	movwf	_rotateReg@Timers$F236^0,c
  1483   001A9E                     l3678:
  1484                           
  1485                           ;Labs/Lab07_Timers/Timers.c: 80:         LATA = (rotateReg << 4);
  1486   001A9E  3854               	swapf	_rotateReg@Timers$F236^0,w,c
  1487   001AA0  0BF0               	andlw	240
  1488   001AA2  6E82               	movwf	130,c	;volatile
  1489   001AA4                     l3680:
  1490                           
  1491                           ;Labs/Lab07_Timers/Timers.c: 83:     if (switchEvent) {
  1492   001AA4  505C               	movf	_switchEvent^0,w,c
  1493   001AA6  B4D8               	btfsc	status,2,c
  1494   001AA8  EF58  F00D         	goto	u1981
  1495   001AAC  EF5A  F00D         	goto	u1980
  1496   001AB0                     u1981:
  1497   001AB0  EF5E  F00D         	goto	l231
  1498   001AB4                     u1980:
  1499   001AB4                     
  1500                           ;Labs/Lab07_Timers/Timers.c: 84:         TMR1_Stop();
  1501   001AB4  EC39  F011         	call	_TMR1_Stop	;wreg free
  1502   001AB8                     
  1503                           ;Labs/Lab07_Timers/Timers.c: 85:         labState = 0;
  1504   001AB8  0E00               	movlw	0
  1505   001ABA  6E5B               	movwf	_labState^0,c
  1506   001ABC                     l231:
  1507   001ABC  0012               	return		;funcret
  1508   001ABE                     __end_of_Timers:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _SleepWakeUp *****************
  1512 ;; Defined at:
  1513 ;;		line 55 in file "Labs/Lab09_SleepWakeup/SleepWakeUp.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1531 ;;Total ram usage:        0 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; Hardware stack levels required when called: 3
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text5
  1542   001C58                     __ptext5:
  1543                           	callstack 0
  1544   001C58                     _SleepWakeUp:
  1545                           	callstack 27
  1546   001C58                     
  1547                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 57:     if (labState == 0) {
  1548   001C58  505B               	movf	_labState^0,w,c
  1549   001C5A  A4D8               	btfss	status,2,c
  1550   001C5C  EF32  F00E         	goto	u781
  1551   001C60  EF34  F00E         	goto	u780
  1552   001C64                     u781:
  1553   001C64  EF3D  F00E         	goto	l2648
  1554   001C68                     u780:
  1555   001C68                     
  1556                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 58:         LATAbits.LATA4 = LATAbits.LATA6 = 1;
  1557   001C68  8C82               	bsf	130,6,c	;volatile
  1558   001C6A  8882               	bsf	130,4,c	;volatile
  1559                           
  1560                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 59:         LATAbits.LATA5 = LATAbits.LATA7 = 0;
  1561   001C6C  9E82               	bcf	130,7,c	;volatile
  1562   001C6E  9A82               	bcf	130,5,c	;volatile
  1563                           
  1564                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 61:         (WDTCON0bits.SWDTEN = 1);
  1565   001C70  010E               	movlb	14	; () banked
  1566   001C72  81CD               	bsf	205,0,b	;volatile
  1567   001C74  0003               	sleep		;# 
  1568   001C76                     
  1569                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 65:         labState = 1;
  1570   001C76  0E01               	movlw	1
  1571   001C78  6E5B               	movwf	_labState^0,c
  1572   001C7A                     l2648:
  1573                           
  1574                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 68:     if (labState == 1) {
  1575   001C7A  045B               	decf	_labState^0,w,c
  1576   001C7C  A4D8               	btfss	status,2,c
  1577   001C7E  EF43  F00E         	goto	u791
  1578   001C82  EF45  F00E         	goto	u790
  1579   001C86                     u791:
  1580   001C86  EF4B  F00E         	goto	l2652
  1581   001C8A                     u790:
  1582   001C8A                     
  1583                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 71:         LATAbits.LATA4 = LATAbits.LATA6 = 0;
  1584   001C8A  9C82               	bcf	130,6,c	;volatile
  1585   001C8C  9882               	bcf	130,4,c	;volatile
  1586                           
  1587                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 72:         LATAbits.LATA5 = LATAbits.LATA7 = 1;
  1588   001C8E  8E82               	bsf	130,7,c	;volatile
  1589   001C90  8A82               	bsf	130,5,c	;volatile
  1590                           
  1591                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 74:         (WDTCON0bits.SWDTEN = 0);
  1592   001C92  010E               	movlb	14	; () banked
  1593   001C94  91CD               	bcf	205,0,b	;volatile
  1594   001C96                     l2652:
  1595                           
  1596                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 77:     if (switchEvent) {
  1597   001C96  505C               	movf	_switchEvent^0,w,c
  1598   001C98  B4D8               	btfsc	status,2,c
  1599   001C9A  EF51  F00E         	goto	u801
  1600   001C9E  EF53  F00E         	goto	u800
  1601   001CA2                     u801:
  1602   001CA2  EF55  F00E         	goto	l289
  1603   001CA6                     u800:
  1604   001CA6                     
  1605                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 78:         labState = 0;
  1606   001CA6  0E00               	movlw	0
  1607   001CA8  6E5B               	movwf	_labState^0,c
  1608   001CAA                     l289:
  1609   001CAA  0012               	return		;funcret
  1610   001CAC                     __end_of_SleepWakeUp:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _SYSTEM_Initialize *****************
  1614 ;; Defined at:
  1615 ;;		line 36 in file "mcc_generated_files/system/src/system.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 5
  1636 ;; This function calls:
  1637 ;;		_ADCC_Initialize
  1638 ;;		_CLOCK_Initialize
  1639 ;;		_EUSART1_Initialize
  1640 ;;		_INTERRUPT_Initialize
  1641 ;;		_NVM_Initialize
  1642 ;;		_PIN_MANAGER_Initialize
  1643 ;;		_PWM3_Initialize
  1644 ;;		_TMR0_Initialize
  1645 ;;		_TMR1_Initialize
  1646 ;;		_TMR2_Initialize
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text6
  1653   002028                     __ptext6:
  1654                           	callstack 0
  1655   002028                     _SYSTEM_Initialize:
  1656                           	callstack 25
  1657   002028                     
  1658                           ;mcc_generated_files/system/src/system.c: 38:     CLOCK_Initialize();
  1659   002028  ECD1  F010         	call	_CLOCK_Initialize	;wreg free
  1660                           
  1661                           ;mcc_generated_files/system/src/system.c: 39:     PIN_MANAGER_Initialize();
  1662   00202C  ECE7  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  1663                           
  1664                           ;mcc_generated_files/system/src/system.c: 40:     ADCC_Initialize();
  1665   002030  EC01  F00E         	call	_ADCC_Initialize	;wreg free
  1666   002034                     
  1667                           ;mcc_generated_files/system/src/system.c: 41:     EUSART1_Initialize();
  1668   002034  EC3B  F00F         	call	_EUSART1_Initialize	;wreg free
  1669   002038                     
  1670                           ;mcc_generated_files/system/src/system.c: 42:     NVM_Initialize();
  1671   002038  EC30  F011         	call	_NVM_Initialize	;wreg free
  1672   00203C                     
  1673                           ;mcc_generated_files/system/src/system.c: 43:     PWM3_Initialize();
  1674   00203C  ECDD  F010         	call	_PWM3_Initialize	;wreg free
  1675   002040                     
  1676                           ;mcc_generated_files/system/src/system.c: 44:     TMR0_Initialize();
  1677   002040  EC29  F010         	call	_TMR0_Initialize	;wreg free
  1678   002044                     
  1679                           ;mcc_generated_files/system/src/system.c: 45:     TMR1_Initialize();
  1680   002044  ECD5  F00D         	call	_TMR1_Initialize	;wreg free
  1681   002048                     
  1682                           ;mcc_generated_files/system/src/system.c: 46:     TMR2_Initialize();
  1683   002048  ECE8  F00F         	call	_TMR2_Initialize	;wreg free
  1684   00204C                     
  1685                           ;mcc_generated_files/system/src/system.c: 47:     INTERRUPT_Initialize();
  1686   00204C  ECF6  F00E         	call	_INTERRUPT_Initialize	;wreg free
  1687   002050  0012               	return		;funcret
  1688   002052                     __end_of_SYSTEM_Initialize:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _TMR2_Initialize *****************
  1692 ;; Defined at:
  1693 ;;		line 57 in file "mcc_generated_files/timer/src/tmr2.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used: 1
  1713 ;; Hardware stack levels required when called: 4
  1714 ;; This function calls:
  1715 ;;		_TMR2_OverflowCallbackRegister
  1716 ;; This function is called by:
  1717 ;;		_SYSTEM_Initialize
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text7
  1722   001FD0                     __ptext7:
  1723                           	callstack 0
  1724   001FD0                     _TMR2_Initialize:
  1725                           	callstack 25
  1726   001FD0                     
  1727                           ;mcc_generated_files/timer/src/tmr2.c: 61:     T2CLKCON = 0x1;
  1728   001FD0  0E01               	movlw	1
  1729   001FD2  6EBE               	movwf	190,c	;volatile
  1730                           
  1731                           ;mcc_generated_files/timer/src/tmr2.c: 63:     T2HLT = 0x0;
  1732   001FD4  0E00               	movlw	0
  1733   001FD6  6EBD               	movwf	189,c	;volatile
  1734                           
  1735                           ;mcc_generated_files/timer/src/tmr2.c: 65:     T2RST = 0x0;
  1736   001FD8  0E00               	movlw	0
  1737   001FDA  6EBF               	movwf	191,c	;volatile
  1738   001FDC                     
  1739                           ;mcc_generated_files/timer/src/tmr2.c: 67:     T2PR = 0xFF;
  1740   001FDC  68BB               	setf	187,c	;volatile
  1741                           
  1742                           ;mcc_generated_files/timer/src/tmr2.c: 69:     T2TMR = 0x0;
  1743   001FDE  0E00               	movlw	0
  1744   001FE0  6EBA               	movwf	186,c	;volatile
  1745   001FE2                     
  1746                           ;mcc_generated_files/timer/src/tmr2.c: 72:     TMR2_OverflowCallbackRegister(TMR2_Defaul
      +                          tOverflowCallback);
  1747   001FE2  0E80               	movlw	low _TMR2_DefaultOverflowCallback
  1748   001FE4  6E03               	movwf	TMR2_OverflowCallbackRegister@InterruptHandler^0,c
  1749   001FE6  0E22               	movlw	high _TMR2_DefaultOverflowCallback
  1750   001FE8  6E04               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler+1)^0,c
  1751   001FEA  0E00               	movlw	low (_TMR2_DefaultOverflowCallback shr (0+16))
  1752   001FEC  6E05               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler+2)^0,c
  1753   001FEE  ECF3  F010         	call	_TMR2_OverflowCallbackRegister	;wreg free
  1754   001FF2                     
  1755                           ;mcc_generated_files/timer/src/tmr2.c: 75:      PIR4bits.TMR2IF = 0;
  1756   001FF2  010E               	movlb	14	; () banked
  1757   001FF4  93C9               	bcf	201,1,b	;volatile
  1758   001FF6                     
  1759                           ; BSR set to: 14
  1760                           ;mcc_generated_files/timer/src/tmr2.c: 77:     T2CON = 0x80;
  1761   001FF6  0E80               	movlw	128
  1762   001FF8  6EBC               	movwf	188,c	;volatile
  1763   001FFA                     
  1764                           ; BSR set to: 14
  1765   001FFA  0012               	return		;funcret
  1766   001FFC                     __end_of_TMR2_Initialize:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _TMR2_OverflowCallbackRegister *****************
  1770 ;; Defined at:
  1771 ;;		line 122 in file "mcc_generated_files/timer/src/tmr2.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  1774 ;;		 -> TMR0_DefaultOverflowCallback(1), TMR2_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), LAB_ISR(1), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1786 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;Total ram usage:        3 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 3
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_TMR2_Initialize
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text8
  1801   0021E6                     __ptext8:
  1802                           	callstack 0
  1803   0021E6                     _TMR2_OverflowCallbackRegister:
  1804                           	callstack 25
  1805   0021E6                     
  1806                           ;mcc_generated_files/timer/src/tmr2.c: 123:     TMR2_OverflowCallback = InterruptHandler
      +                          ;
  1807   0021E6  C003  F069         	movff	TMR2_OverflowCallbackRegister@InterruptHandler,_TMR2_OverflowCallback
  1808   0021EA  C004  F06A         	movff	TMR2_OverflowCallbackRegister@InterruptHandler+1,_TMR2_OverflowCallback+1
  1809   0021EE  C005  F06B         	movff	TMR2_OverflowCallbackRegister@InterruptHandler+2,_TMR2_OverflowCallback+2
  1810   0021F2  0012               	return		;funcret
  1811   0021F4                     __end_of_TMR2_OverflowCallbackRegister:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _TMR1_Initialize *****************
  1815 ;; Defined at:
  1816 ;;		line 59 in file "mcc_generated_files/timer/src/tmr1.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;Total ram usage:        2 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 4
  1837 ;; This function calls:
  1838 ;;		_TMR1_GateCallbackRegister
  1839 ;;		_TMR1_OverflowCallbackRegister
  1840 ;; This function is called by:
  1841 ;;		_SYSTEM_Initialize
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text9
  1846   001BAA                     __ptext9:
  1847                           	callstack 0
  1848   001BAA                     _TMR1_Initialize:
  1849                           	callstack 25
  1850   001BAA                     
  1851                           ;mcc_generated_files/timer/src/tmr1.c: 62:     T1GCON = 0x0;
  1852   001BAA  0E00               	movlw	0
  1853   001BAC  6ECF               	movwf	207,c	;volatile
  1854                           
  1855                           ;mcc_generated_files/timer/src/tmr1.c: 64:     T1GATE = 0x0;
  1856   001BAE  0E00               	movlw	0
  1857   001BB0  6ED0               	movwf	208,c	;volatile
  1858                           
  1859                           ;mcc_generated_files/timer/src/tmr1.c: 66:     T1CLK = 0x1;
  1860   001BB2  0E01               	movlw	1
  1861   001BB4  6ED1               	movwf	209,c	;volatile
  1862                           
  1863                           ;mcc_generated_files/timer/src/tmr1.c: 68:     TMR1H = 0xB;
  1864   001BB6  0E0B               	movlw	11
  1865   001BB8  6ECD               	movwf	205,c	;volatile
  1866                           
  1867                           ;mcc_generated_files/timer/src/tmr1.c: 70:     TMR1L = 0xDB;
  1868   001BBA  0EDB               	movlw	219
  1869   001BBC  6ECC               	movwf	204,c	;volatile
  1870   001BBE                     
  1871                           ;mcc_generated_files/timer/src/tmr1.c: 73:     timer1ReloadVal=(uint16_t)((TMR1H << 8) |
      +                           TMR1L);
  1872   001BBE  50CC               	movf	204,w,c	;volatile
  1873   001BC0  CFCD F006          	movff	4045,??_TMR1_Initialize	;volatile
  1874   001BC4  6A07               	clrf	(??_TMR1_Initialize+1)^0,c
  1875   001BC6  C006  F007         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1876   001BCA  6A06               	clrf	??_TMR1_Initialize^0,c
  1877   001BCC  1006               	iorwf	??_TMR1_Initialize^0,w,c
  1878   001BCE  0100               	movlb	0	; () banked
  1879   001BD0  6F84               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  1880   001BD2  5007               	movf	(??_TMR1_Initialize+1)^0,w,c
  1881   001BD4  6F85               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  1882   001BD6                     
  1883                           ; BSR set to: 0
  1884                           ;mcc_generated_files/timer/src/tmr1.c: 76:     TMR1_OverflowCallbackRegister(TMR1_Defaul
      +                          tOverflowCallback);
  1885   001BD6  0E7E               	movlw	low _TMR1_DefaultOverflowCallback
  1886   001BD8  6E03               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler^0,c
  1887   001BDA  0E22               	movlw	high _TMR1_DefaultOverflowCallback
  1888   001BDC  6E04               	movwf	(TMR1_OverflowCallbackRegister@CallbackHandler+1)^0,c
  1889   001BDE  0E00               	movlw	low (_TMR1_DefaultOverflowCallback shr (0+16))
  1890   001BE0  6E05               	movwf	(TMR1_OverflowCallbackRegister@CallbackHandler+2)^0,c
  1891   001BE2  ECFA  F010         	call	_TMR1_OverflowCallbackRegister	;wreg free
  1892   001BE6                     
  1893                           ;mcc_generated_files/timer/src/tmr1.c: 79:     TMR1_GateCallbackRegister(TMR1_DefaultGat
      +                          eCallback);
  1894   001BE6  0E00               	movlw	0
  1895   001BE8  6E03               	movwf	TMR1_GateCallbackRegister@CallbackHandler^0,c
  1896   001BEA  0E00               	movlw	0
  1897   001BEC  6E04               	movwf	(TMR1_GateCallbackRegister@CallbackHandler+1)^0,c
  1898   001BEE  0E00               	movlw	0
  1899   001BF0  6E05               	movwf	(TMR1_GateCallbackRegister@CallbackHandler+2)^0,c
  1900   001BF2  EC01  F011         	call	_TMR1_GateCallbackRegister	;wreg free
  1901   001BF6                     
  1902                           ;mcc_generated_files/timer/src/tmr1.c: 82:     PIR4bits.TMR1IF = 0;
  1903   001BF6  010E               	movlb	14	; () banked
  1904   001BF8  91C9               	bcf	201,0,b	;volatile
  1905   001BFA                     
  1906                           ; BSR set to: 14
  1907                           ;mcc_generated_files/timer/src/tmr1.c: 83:     PIR5bits.TMR1GIF = 0;
  1908   001BFA  91CA               	bcf	202,0,b	;volatile
  1909   001BFC                     
  1910                           ; BSR set to: 14
  1911                           ;mcc_generated_files/timer/src/tmr1.c: 86:     T1CON = 0x0;
  1912   001BFC  0E00               	movlw	0
  1913   001BFE  6ECE               	movwf	206,c	;volatile
  1914   001C00                     
  1915                           ; BSR set to: 14
  1916   001C00  0012               	return		;funcret
  1917   001C02                     __end_of_TMR1_Initialize:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  1921 ;; Defined at:
  1922 ;;		line 158 in file "mcc_generated_files/timer/src/tmr1.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  CallbackHand    3    2[COMRAM] PTR FTN()void 
  1925 ;;		 -> TMR0_DefaultOverflowCallback(1), TMR2_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), LAB_ISR(1), 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1937 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;Total ram usage:        3 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 3
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_TMR1_Initialize
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text10
  1952   0021F4                     __ptext10:
  1953                           	callstack 0
  1954   0021F4                     _TMR1_OverflowCallbackRegister:
  1955                           	callstack 25
  1956   0021F4                     
  1957                           ;mcc_generated_files/timer/src/tmr1.c: 158: void TMR1_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 159: {;mcc_generated_files/
      +                          timer/src/tmr1.c: 160:     TMR1_OverflowCallback = CallbackHandler;
  1958   0021F4  C003  F06F         	movff	TMR1_OverflowCallbackRegister@CallbackHandler,_TMR1_OverflowCallback
  1959   0021F8  C004  F070         	movff	TMR1_OverflowCallbackRegister@CallbackHandler+1,_TMR1_OverflowCallback+1
  1960   0021FC  C005  F071         	movff	TMR1_OverflowCallbackRegister@CallbackHandler+2,_TMR1_OverflowCallback+2
  1961   002200  0012               	return		;funcret
  1962   002202                     __end_of_TMR1_OverflowCallbackRegister:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _TMR1_GateCallbackRegister *****************
  1966 ;; Defined at:
  1967 ;;		line 184 in file "mcc_generated_files/timer/src/tmr1.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  CallbackHand    3    2[COMRAM] PTR FTN()void 
  1970 ;;		 -> TMR1_DefaultGateCallback(1), 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1982 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1985 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;Total ram usage:        3 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 3
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_TMR1_Initialize
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text11
  1997   002202                     __ptext11:
  1998                           	callstack 0
  1999   002202                     _TMR1_GateCallbackRegister:
  2000                           	callstack 25
  2001   002202                     
  2002                           ;mcc_generated_files/timer/src/tmr1.c: 184: void TMR1_GateCallbackRegister(void (* Callb
      +                          ackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 185: {;mcc_generated_files/time
      +                          r/src/tmr1.c: 186:     TMR1_GateCallback = CallbackHandler;
  2003   002202  C003  F06C         	movff	TMR1_GateCallbackRegister@CallbackHandler,_TMR1_GateCallback
  2004   002206  C004  F06D         	movff	TMR1_GateCallbackRegister@CallbackHandler+1,_TMR1_GateCallback+1
  2005   00220A  C005  F06E         	movff	TMR1_GateCallbackRegister@CallbackHandler+2,_TMR1_GateCallback+2
  2006   00220E  0012               	return		;funcret
  2007   002210                     __end_of_TMR1_GateCallbackRegister:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _TMR0_Initialize *****************
  2011 ;; Defined at:
  2012 ;;		line 49 in file "mcc_generated_files/timer/src/tmr0.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 4
  2033 ;; This function calls:
  2034 ;;		_TMR0_OverflowCallbackRegister
  2035 ;; This function is called by:
  2036 ;;		_SYSTEM_Initialize
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text12
  2041   002052                     __ptext12:
  2042                           	callstack 0
  2043   002052                     _TMR0_Initialize:
  2044                           	callstack 25
  2045   002052                     
  2046                           ;mcc_generated_files/timer/src/tmr0.c: 52:     TMR0H = 0xF3;
  2047   002052  0EF3               	movlw	243
  2048   002054  6ED3               	movwf	211,c	;volatile
  2049                           
  2050                           ;mcc_generated_files/timer/src/tmr0.c: 55:     TMR0L = 0x0;
  2051   002056  0E00               	movlw	0
  2052   002058  6ED2               	movwf	210,c	;volatile
  2053                           
  2054                           ;mcc_generated_files/timer/src/tmr0.c: 58:     T0CON1 = 0x48;
  2055   00205A  0E48               	movlw	72
  2056   00205C  6ED5               	movwf	213,c	;volatile
  2057   00205E                     
  2058                           ;mcc_generated_files/timer/src/tmr0.c: 62:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
  2059   00205E  0E7C               	movlw	low _TMR0_DefaultOverflowCallback
  2060   002060  6E03               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
  2061   002062  0E22               	movlw	high _TMR0_DefaultOverflowCallback
  2062   002064  6E04               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  2063   002066  0E00               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
  2064   002068  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  2065   00206A  EC1D  F011         	call	_TMR0_OverflowCallbackRegister	;wreg free
  2066   00206E                     
  2067                           ;mcc_generated_files/timer/src/tmr0.c: 65:     PIR0bits.TMR0IF = 0;
  2068   00206E  010E               	movlb	14	; () banked
  2069   002070  9BC5               	bcf	197,5,b	;volatile
  2070   002072                     
  2071                           ; BSR set to: 14
  2072                           ;mcc_generated_files/timer/src/tmr0.c: 68:     PIE0bits.TMR0IE = 1;
  2073   002072  8BBD               	bsf	189,5,b	;volatile
  2074   002074                     
  2075                           ; BSR set to: 14
  2076                           ;mcc_generated_files/timer/src/tmr0.c: 71:     T0CON0 = 0x80;
  2077   002074  0E80               	movlw	128
  2078   002076  6ED4               	movwf	212,c	;volatile
  2079   002078                     
  2080                           ; BSR set to: 14
  2081   002078  0012               	return		;funcret
  2082   00207A                     __end_of_TMR0_Initialize:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _PWM3_Initialize *****************
  2086 ;; Defined at:
  2087 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm3.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 3
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_SYSTEM_Initialize
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text13
  2116   0021BA                     __ptext13:
  2117                           	callstack 0
  2118   0021BA                     _PWM3_Initialize:
  2119                           	callstack 26
  2120   0021BA                     
  2121                           ;mcc_generated_files/pwm/src/pwm3.c: 49:     CCPTMRSbits.P3TSEL = 0x1;
  2122   0021BA  50AD               	movf	173,w,c	;volatile
  2123   0021BC  0BCF               	andlw	-49
  2124   0021BE  0910               	iorlw	16
  2125   0021C0  6EAD               	movwf	173,c	;volatile
  2126                           
  2127                           ;mcc_generated_files/pwm/src/pwm3.c: 52:     PWM3CON = 0x80;
  2128   0021C2  0E80               	movlw	128
  2129   0021C4  6EA4               	movwf	164,c	;volatile
  2130                           
  2131                           ;mcc_generated_files/pwm/src/pwm3.c: 55:     PWM3DCH = 0xCC;
  2132   0021C6  0ECC               	movlw	204
  2133   0021C8  6EA3               	movwf	163,c	;volatile
  2134                           
  2135                           ;mcc_generated_files/pwm/src/pwm3.c: 58:     PWM3DCL = 0x80;
  2136   0021CA  0E80               	movlw	128
  2137   0021CC  6EA2               	movwf	162,c	;volatile
  2138   0021CE  0012               	return		;funcret
  2139   0021D0                     __end_of_PWM3_Initialize:
  2140                           	callstack 0
  2141                           
  2142 ;; *************** function _PIN_MANAGER_Initialize *****************
  2143 ;; Defined at:
  2144 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 3
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_SYSTEM_Initialize
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text14
  2173   0015CE                     __ptext14:
  2174                           	callstack 0
  2175   0015CE                     _PIN_MANAGER_Initialize:
  2176                           	callstack 26
  2177   0015CE                     
  2178                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2179   0015CE  0E00               	movlw	0
  2180   0015D0  6E82               	movwf	130,c	;volatile
  2181                           
  2182                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2183   0015D2  0E00               	movlw	0
  2184   0015D4  6E83               	movwf	131,c	;volatile
  2185                           
  2186                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2187   0015D6  0E00               	movlw	0
  2188   0015D8  6E84               	movwf	132,c	;volatile
  2189                           
  2190                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  2191   0015DA  0E00               	movlw	0
  2192   0015DC  6E85               	movwf	133,c	;volatile
  2193                           
  2194                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  2195   0015DE  0E00               	movlw	0
  2196   0015E0  6E86               	movwf	134,c	;volatile
  2197                           
  2198                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0x0F;
  2199   0015E2  0E0F               	movlw	15
  2200   0015E4  6E87               	movwf	135,c	;volatile
  2201   0015E6                     
  2202                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xFF;
  2203   0015E6  6888               	setf	136,c	;volatile
  2204                           
  2205                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0xBF;
  2206   0015E8  0EBF               	movlw	191
  2207   0015EA  6E89               	movwf	137,c	;volatile
  2208   0015EC                     
  2209                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFF;
  2210   0015EC  688A               	setf	138,c	;volatile
  2211                           
  2212                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0x7;
  2213   0015EE  0E07               	movlw	7
  2214   0015F0  6E8B               	movwf	139,c	;volatile
  2215                           
  2216                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xF;
  2217   0015F2  0E0F               	movlw	15
  2218   0015F4  010F               	movlb	15	; () banked
  2219   0015F6  6F0C               	movwf	12,b	;volatile
  2220                           
  2221                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0xEF;
  2222   0015F8  0EEF               	movlw	239
  2223   0015FA  6F14               	movwf	20,b	;volatile
  2224                           
  2225                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0x9F;
  2226   0015FC  0E9F               	movlw	159
  2227   0015FE  6F1C               	movwf	28,b	;volatile
  2228   001600                     
  2229                           ; BSR set to: 15
  2230                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0xFF;
  2231   001600  6921               	setf	33,b	;volatile
  2232                           
  2233                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x7;
  2234   001602  0E07               	movlw	7
  2235   001604  6F29               	movwf	41,b	;volatile
  2236                           
  2237                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  2238   001606  0E00               	movlw	0
  2239   001608  6F0B               	movwf	11,b	;volatile
  2240                           
  2241                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  2242   00160A  0E00               	movlw	0
  2243   00160C  6F13               	movwf	19,b	;volatile
  2244                           
  2245                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  2246   00160E  0E00               	movlw	0
  2247   001610  6F1B               	movwf	27,b	;volatile
  2248                           
  2249                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
  2250   001612  0E00               	movlw	0
  2251   001614  6F20               	movwf	32,b	;volatile
  2252                           
  2253                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
  2254   001616  0E00               	movlw	0
  2255   001618  6F28               	movwf	40,b	;volatile
  2256                           
  2257                           ;mcc_generated_files/system/src/pins.c: 83:     ODCONA = 0x0;
  2258   00161A  0E00               	movlw	0
  2259   00161C  6F0A               	movwf	10,b	;volatile
  2260                           
  2261                           ;mcc_generated_files/system/src/pins.c: 84:     ODCONB = 0x0;
  2262   00161E  0E00               	movlw	0
  2263   001620  6F12               	movwf	18,b	;volatile
  2264                           
  2265                           ;mcc_generated_files/system/src/pins.c: 85:     ODCONC = 0x0;
  2266   001622  0E00               	movlw	0
  2267   001624  6F1A               	movwf	26,b	;volatile
  2268                           
  2269                           ;mcc_generated_files/system/src/pins.c: 86:     ODCOND = 0x0;
  2270   001626  0E00               	movlw	0
  2271   001628  6F1F               	movwf	31,b	;volatile
  2272                           
  2273                           ;mcc_generated_files/system/src/pins.c: 87:     ODCONE = 0x0;
  2274   00162A  0E00               	movlw	0
  2275   00162C  6F27               	movwf	39,b	;volatile
  2276   00162E                     
  2277                           ; BSR set to: 15
  2278                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONA = 0xFF;
  2279   00162E  6909               	setf	9,b	;volatile
  2280   001630                     
  2281                           ; BSR set to: 15
  2282                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONB = 0xFF;
  2283   001630  6911               	setf	17,b	;volatile
  2284   001632                     
  2285                           ; BSR set to: 15
  2286                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONC = 0xFF;
  2287   001632  6919               	setf	25,b	;volatile
  2288   001634                     
  2289                           ; BSR set to: 15
  2290                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCOND = 0xFF;
  2291   001634  691E               	setf	30,b	;volatile
  2292                           
  2293                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCONE = 0x7;
  2294   001636  0E07               	movlw	7
  2295   001638  6F26               	movwf	38,b	;volatile
  2296   00163A                     
  2297                           ; BSR set to: 15
  2298                           ;mcc_generated_files/system/src/pins.c: 101:     INLVLA = 0xFF;
  2299   00163A  6908               	setf	8,b	;volatile
  2300   00163C                     
  2301                           ; BSR set to: 15
  2302                           ;mcc_generated_files/system/src/pins.c: 102:     INLVLB = 0xFF;
  2303   00163C  6910               	setf	16,b	;volatile
  2304   00163E                     
  2305                           ; BSR set to: 15
  2306                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLC = 0xFF;
  2307   00163E  6918               	setf	24,b	;volatile
  2308   001640                     
  2309                           ; BSR set to: 15
  2310                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLD = 0xFF;
  2311   001640  691D               	setf	29,b	;volatile
  2312                           
  2313                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLE = 0xF;
  2314   001642  0E0F               	movlw	15
  2315   001644  6F25               	movwf	37,b	;volatile
  2316                           
  2317                           ;mcc_generated_files/system/src/pins.c: 109:     RA5PPS=0x00;
  2318   001646  0E00               	movlw	0
  2319   001648  010E               	movlb	14	; () banked
  2320   00164A  6FE7               	movwf	231,b	;volatile
  2321                           
  2322                           ;mcc_generated_files/system/src/pins.c: 110:     RA6PPS=0x00;
  2323   00164C  0E00               	movlw	0
  2324   00164E  6FE8               	movwf	232,b	;volatile
  2325                           
  2326                           ;mcc_generated_files/system/src/pins.c: 111:     RX1PPS = 0x15;
  2327   001650  0E15               	movlw	21
  2328   001652  6FB0               	movwf	176,b	;volatile
  2329                           
  2330                           ;mcc_generated_files/system/src/pins.c: 112:     RC6PPS = 0x09;
  2331   001654  0E09               	movlw	9
  2332   001656  6FF8               	movwf	248,b	;volatile
  2333                           
  2334                           ;mcc_generated_files/system/src/pins.c: 117:     IOCAP = 0x0;
  2335   001658  0E00               	movlw	0
  2336   00165A  010F               	movlb	15	; () banked
  2337   00165C  6F07               	movwf	7,b	;volatile
  2338                           
  2339                           ;mcc_generated_files/system/src/pins.c: 118:     IOCAN = 0x0;
  2340   00165E  0E00               	movlw	0
  2341   001660  6F06               	movwf	6,b	;volatile
  2342                           
  2343                           ;mcc_generated_files/system/src/pins.c: 119:     IOCAF = 0x0;
  2344   001662  0E00               	movlw	0
  2345   001664  6F05               	movwf	5,b	;volatile
  2346                           
  2347                           ;mcc_generated_files/system/src/pins.c: 120:     IOCBP = 0x0;
  2348   001666  0E00               	movlw	0
  2349   001668  6F0F               	movwf	15,b	;volatile
  2350                           
  2351                           ;mcc_generated_files/system/src/pins.c: 121:     IOCBN = 0x0;
  2352   00166A  0E00               	movlw	0
  2353   00166C  6F0E               	movwf	14,b	;volatile
  2354                           
  2355                           ;mcc_generated_files/system/src/pins.c: 122:     IOCBF = 0x0;
  2356   00166E  0E00               	movlw	0
  2357   001670  6F0D               	movwf	13,b	;volatile
  2358                           
  2359                           ;mcc_generated_files/system/src/pins.c: 123:     IOCCP = 0x0;
  2360   001672  0E00               	movlw	0
  2361   001674  6F17               	movwf	23,b	;volatile
  2362                           
  2363                           ;mcc_generated_files/system/src/pins.c: 124:     IOCCN = 0x0;
  2364   001676  0E00               	movlw	0
  2365   001678  6F16               	movwf	22,b	;volatile
  2366                           
  2367                           ;mcc_generated_files/system/src/pins.c: 125:     IOCCF = 0x0;
  2368   00167A  0E00               	movlw	0
  2369   00167C  6F15               	movwf	21,b	;volatile
  2370                           
  2371                           ;mcc_generated_files/system/src/pins.c: 126:     IOCEP = 0x0;
  2372   00167E  0E00               	movlw	0
  2373   001680  6F24               	movwf	36,b	;volatile
  2374                           
  2375                           ;mcc_generated_files/system/src/pins.c: 127:     IOCEN = 0x0;
  2376   001682  0E00               	movlw	0
  2377   001684  6F23               	movwf	35,b	;volatile
  2378                           
  2379                           ;mcc_generated_files/system/src/pins.c: 128:     IOCEF = 0x0;
  2380   001686  0E00               	movlw	0
  2381   001688  6F22               	movwf	34,b	;volatile
  2382   00168A                     
  2383                           ; BSR set to: 15
  2384   00168A  0012               	return		;funcret
  2385   00168C                     __end_of_PIN_MANAGER_Initialize:
  2386                           	callstack 0
  2387                           
  2388 ;; *************** function _NVM_Initialize *****************
  2389 ;; Defined at:
  2390 ;;		line 43 in file "mcc_generated_files/nvm/src/nvm.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 4
  2411 ;; This function calls:
  2412 ;;		_NVM_StatusClear
  2413 ;; This function is called by:
  2414 ;;		_SYSTEM_Initialize
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text15
  2419   002260                     __ptext15:
  2420                           	callstack 0
  2421   002260                     _NVM_Initialize:
  2422                           	callstack 25
  2423   002260                     
  2424                           ;mcc_generated_files/nvm/src/nvm.c: 45:     NVM_StatusClear();
  2425   002260  EC33  F011         	call	_NVM_StatusClear	;wreg free
  2426   002264  0012               	return		;funcret
  2427   002266                     __end_of_NVM_Initialize:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _NVM_StatusClear *****************
  2431 ;; Defined at:
  2432 ;;		line 65 in file "mcc_generated_files/nvm/src/nvm.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		None
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;Total ram usage:        0 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 3
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_NVM_Initialize
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text16
  2461   002266                     __ptext16:
  2462                           	callstack 0
  2463   002266                     _NVM_StatusClear:
  2464                           	callstack 25
  2465   002266                     
  2466                           ;mcc_generated_files/nvm/src/nvm.c: 67:     NVMCON0bits.NVMERR = 0;
  2467   002266  987F               	bcf	127,4,c	;volatile
  2468   002268  0012               	return		;funcret
  2469   00226A                     __end_of_NVM_StatusClear:
  2470                           	callstack 0
  2471                           
  2472 ;; *************** function _INTERRUPT_Initialize *****************
  2473 ;; Defined at:
  2474 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 4
  2495 ;; This function calls:
  2496 ;;		_INT0_SetInterruptHandler
  2497 ;;		_INT1_SetInterruptHandler
  2498 ;;		_INT2_SetInterruptHandler
  2499 ;; This function is called by:
  2500 ;;		_SYSTEM_Initialize
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text17
  2505   001DEC                     __ptext17:
  2506                           	callstack 0
  2507   001DEC                     _INTERRUPT_Initialize:
  2508                           	callstack 25
  2509   001DEC                     
  2510                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCONbits.IPEN = 0;
  2511   001DEC  9AF2               	bcf	242,5,c	;volatile
  2512                           
  2513                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR0bits.INT0IF = 0);
  2514   001DEE  010E               	movlb	14	; () banked
  2515   001DF0  91C5               	bcf	197,0,b	;volatile
  2516                           
  2517                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCONbits.INT0EDG = 1);
  2518   001DF2  80F2               	bsf	242,0,c	;volatile
  2519   001DF4                     
  2520                           ; BSR set to: 14
  2521                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  2522   001DF4  0E00               	movlw	0
  2523   001DF6  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2524   001DF8  0E00               	movlw	0
  2525   001DFA  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2526   001DFC  0E00               	movlw	0
  2527   001DFE  6E05               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  2528   001E00  EC16  F011         	call	_INT0_SetInterruptHandler	;wreg free
  2529   001E04                     
  2530                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR0bits.INT1IF = 0);
  2531   001E04  010E               	movlb	14	; () banked
  2532   001E06  93C5               	bcf	197,1,b	;volatile
  2533   001E08                     
  2534                           ; BSR set to: 14
  2535                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCONbits.INT1EDG = 1);
  2536   001E08  82F2               	bsf	242,1,c	;volatile
  2537                           
  2538                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  2539   001E0A  0E00               	movlw	0
  2540   001E0C  6E03               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  2541   001E0E  0E00               	movlw	0
  2542   001E10  6E04               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  2543   001E12  0E00               	movlw	0
  2544   001E14  6E05               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  2545   001E16  EC0F  F011         	call	_INT1_SetInterruptHandler	;wreg free
  2546   001E1A                     
  2547                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR0bits.INT2IF = 0);
  2548   001E1A  010E               	movlb	14	; () banked
  2549   001E1C  95C5               	bcf	197,2,b	;volatile
  2550   001E1E                     
  2551                           ; BSR set to: 14
  2552                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCONbits.INT2EDG = 1);
  2553   001E1E  84F2               	bsf	242,2,c	;volatile
  2554                           
  2555                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  2556   001E20  0E00               	movlw	0
  2557   001E22  6E03               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  2558   001E24  0E00               	movlw	0
  2559   001E26  6E04               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  2560   001E28  0E00               	movlw	0
  2561   001E2A  6E05               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  2562   001E2C  EC08  F011         	call	_INT2_SetInterruptHandler	;wreg free
  2563   001E30  0012               	return		;funcret
  2564   001E32                     __end_of_INTERRUPT_Initialize:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _INT2_SetInterruptHandler *****************
  2568 ;; Defined at:
  2569 ;;		line 174 in file "mcc_generated_files/system/src/interrupt.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  2572 ;;		 -> INT2_DefaultInterruptHandler(1), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2584 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;Total ram usage:        3 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 3
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_INTERRUPT_Initialize
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text18
  2599   002210                     __ptext18:
  2600                           	callstack 0
  2601   002210                     _INT2_SetInterruptHandler:
  2602                           	callstack 25
  2603   002210                     
  2604                           ;mcc_generated_files/system/src/interrupt.c: 175:     INT2_InterruptHandler = InterruptH
      +                          andler;
  2605   002210  C003  F075         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2606   002214  C004  F076         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2607   002218  C005  F077         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  2608   00221C  0012               	return		;funcret
  2609   00221E                     __end_of_INT2_SetInterruptHandler:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _INT1_SetInterruptHandler *****************
  2613 ;; Defined at:
  2614 ;;		line 148 in file "mcc_generated_files/system/src/interrupt.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  2617 ;;		 -> INT1_DefaultInterruptHandler(1), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2629 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;Total ram usage:        3 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 3
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_INTERRUPT_Initialize
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text19
  2644   00221E                     __ptext19:
  2645                           	callstack 0
  2646   00221E                     _INT1_SetInterruptHandler:
  2647                           	callstack 25
  2648   00221E                     
  2649                           ;mcc_generated_files/system/src/interrupt.c: 149:     INT1_InterruptHandler = InterruptH
      +                          andler;
  2650   00221E  C003  F078         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2651   002222  C004  F079         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2652   002226  C005  F07A         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  2653   00222A  0012               	return		;funcret
  2654   00222C                     __end_of_INT1_SetInterruptHandler:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _INT0_SetInterruptHandler *****************
  2658 ;; Defined at:
  2659 ;;		line 122 in file "mcc_generated_files/system/src/interrupt.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  InterruptHan    3    2[COMRAM] PTR FTN()void 
  2662 ;;		 -> INT0_DefaultInterruptHandler(1), 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2674 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;Total ram usage:        3 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 3
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_INTERRUPT_Initialize
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text20
  2689   00222C                     __ptext20:
  2690                           	callstack 0
  2691   00222C                     _INT0_SetInterruptHandler:
  2692                           	callstack 25
  2693   00222C                     
  2694                           ;mcc_generated_files/system/src/interrupt.c: 123:     INT0_InterruptHandler = InterruptH
      +                          andler;
  2695   00222C  C003  F07B         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2696   002230  C004  F07C         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2697   002234  C005  F07D         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  2698   002238  0012               	return		;funcret
  2699   00223A                     __end_of_INT0_SetInterruptHandler:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _EUSART1_Initialize *****************
  2703 ;; Defined at:
  2704 ;;		line 94 in file "mcc_generated_files/uart/src/eusart1.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 4
  2725 ;; This function calls:
  2726 ;;		_EUSART1_FramingErrorCallbackRegister
  2727 ;;		_EUSART1_OverrunErrorCallbackRegister
  2728 ;; This function is called by:
  2729 ;;		_SYSTEM_Initialize
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text21
  2734   001E76                     __ptext21:
  2735                           	callstack 0
  2736   001E76                     _EUSART1_Initialize:
  2737                           	callstack 25
  2738   001E76                     
  2739                           ;mcc_generated_files/uart/src/eusart1.c: 99:     BAUD1CON = 0x48;
  2740   001E76  0E48               	movlw	72
  2741   001E78  6E9E               	movwf	158,c	;volatile
  2742                           
  2743                           ;mcc_generated_files/uart/src/eusart1.c: 101:     RC1STA = 0xD0;
  2744   001E7A  0ED0               	movlw	208
  2745   001E7C  6E9C               	movwf	156,c	;volatile
  2746                           
  2747                           ;mcc_generated_files/uart/src/eusart1.c: 103:     TX1STA = 0x66;
  2748   001E7E  0E66               	movlw	102
  2749   001E80  6E9D               	movwf	157,c	;volatile
  2750                           
  2751                           ;mcc_generated_files/uart/src/eusart1.c: 105:     SP1BRGL = 0xC;
  2752   001E82  0E0C               	movlw	12
  2753   001E84  6E9A               	movwf	154,c	;volatile
  2754                           
  2755                           ;mcc_generated_files/uart/src/eusart1.c: 107:     SP1BRGH = 0x0;
  2756   001E86  0E00               	movlw	0
  2757   001E88  6E9B               	movwf	155,c	;volatile
  2758   001E8A                     
  2759                           ;mcc_generated_files/uart/src/eusart1.c: 109:     EUSART1_FramingErrorCallbackRegister(E
      +                          USART1_DefaultFramingErrorCallback);
  2760   001E8A  0E00               	movlw	0
  2761   001E8C  6E03               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,c
  2762   001E8E  0E00               	movlw	0
  2763   001E90  6E04               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,c
  2764   001E92  0E00               	movlw	0
  2765   001E94  6E05               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,c
  2766   001E96  EC86  F010         	call	_EUSART1_FramingErrorCallbackRegister	;wreg free
  2767   001E9A                     
  2768                           ;mcc_generated_files/uart/src/eusart1.c: 110:     EUSART1_OverrunErrorCallbackRegister(E
      +                          USART1_DefaultOverrunErrorCallback);
  2769   001E9A  0E00               	movlw	0
  2770   001E9C  6E03               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,c
  2771   001E9E  0E00               	movlw	0
  2772   001EA0  6E04               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,c
  2773   001EA2  0E00               	movlw	0
  2774   001EA4  6E05               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,c
  2775   001EA6  EC75  F010         	call	_EUSART1_OverrunErrorCallbackRegister	;wreg free
  2776                           
  2777                           ;mcc_generated_files/uart/src/eusart1.c: 111:     eusart1RxLastError.status = 0;
  2778   001EAA  0E00               	movlw	0
  2779   001EAC  0100               	movlb	0	; () banked
  2780   001EAE  6F83               	movwf	(_eusart1RxLastError+1)& (0+255),b	;volatile
  2781   001EB0  0E00               	movlw	0
  2782   001EB2  6F82               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2783   001EB4                     
  2784                           ; BSR set to: 0
  2785   001EB4  0012               	return		;funcret
  2786   001EB6                     __end_of_EUSART1_Initialize:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function _EUSART1_OverrunErrorCallbackRegister *****************
  2790 ;; Defined at:
  2791 ;;		line 260 in file "mcc_generated_files/uart/src/eusart1.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  callbackHand    3    2[COMRAM] PTR FTN()void 
  2794 ;;		 -> EUSART1_DefaultOverrunErrorCallback(1), 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2806 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;Total ram usage:        3 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 3
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_EUSART1_Initialize
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text22
  2821   0020EA                     __ptext22:
  2822                           	callstack 0
  2823   0020EA                     _EUSART1_OverrunErrorCallbackRegister:
  2824                           	callstack 25
  2825   0020EA                     
  2826                           ;mcc_generated_files/uart/src/eusart1.c: 260: void EUSART1_OverrunErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 261: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 262:     if(((void*)0) != callbackHandler)
  2827   0020EA  5003               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^0,w,c
  2828   0020EC  1004               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^0,w,c
  2829   0020EE  1005               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+2)^0,w,c
  2830   0020F0  B4D8               	btfsc	status,2,c
  2831   0020F2  EF7D  F010         	goto	u1671
  2832   0020F6  EF7F  F010         	goto	u1670
  2833   0020FA                     u1671:
  2834   0020FA  EF85  F010         	goto	l1098
  2835   0020FE                     u1670:
  2836   0020FE                     
  2837                           ;mcc_generated_files/uart/src/eusart1.c: 263:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 264:         EUSART1_OverrunErrorHandler = callbackHandler;
  2838   0020FE  C003  F060         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler,_EUSART1_OverrunErrorHandler
  2839   002102  C004  F061         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1,_EUSART1_OverrunErrorHandl
      +                          er+1
  2840   002106  C005  F062         	movff	EUSART1_OverrunErrorCallbackRegister@callbackHandler+2,_EUSART1_OverrunErrorHandl
      +                          er+2
  2841   00210A                     l1098:
  2842   00210A  0012               	return		;funcret
  2843   00210C                     __end_of_EUSART1_OverrunErrorCallbackRegister:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function _EUSART1_FramingErrorCallbackRegister *****************
  2847 ;; Defined at:
  2848 ;;		line 252 in file "mcc_generated_files/uart/src/eusart1.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  callbackHand    3    2[COMRAM] PTR FTN()void 
  2851 ;;		 -> EUSART1_DefaultFramingErrorCallback(1), 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2863 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;Total ram usage:        3 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 3
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_EUSART1_Initialize
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text23
  2878   00210C                     __ptext23:
  2879                           	callstack 0
  2880   00210C                     _EUSART1_FramingErrorCallbackRegister:
  2881                           	callstack 25
  2882   00210C                     
  2883                           ;mcc_generated_files/uart/src/eusart1.c: 252: void EUSART1_FramingErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 253: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 254:     if(((void*)0) != callbackHandler)
  2884   00210C  5003               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler^0,w,c
  2885   00210E  1004               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^0,w,c
  2886   002110  1005               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+2)^0,w,c
  2887   002112  B4D8               	btfsc	status,2,c
  2888   002114  EF8E  F010         	goto	u1661
  2889   002118  EF90  F010         	goto	u1660
  2890   00211C                     u1661:
  2891   00211C  EF96  F010         	goto	l1094
  2892   002120                     u1660:
  2893   002120                     
  2894                           ;mcc_generated_files/uart/src/eusart1.c: 255:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 256:         EUSART1_FramingErrorHandler = callbackHandler;
  2895   002120  C003  F063         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler,_EUSART1_FramingErrorHandler
  2896   002124  C004  F064         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+1,_EUSART1_FramingErrorHandl
      +                          er+1
  2897   002128  C005  F065         	movff	EUSART1_FramingErrorCallbackRegister@callbackHandler+2,_EUSART1_FramingErrorHandl
      +                          er+2
  2898   00212C                     l1094:
  2899   00212C  0012               	return		;funcret
  2900   00212E                     __end_of_EUSART1_FramingErrorCallbackRegister:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _CLOCK_Initialize *****************
  2904 ;; Defined at:
  2905 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 3
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_SYSTEM_Initialize
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text24
  2934   0021A2                     __ptext24:
  2935                           	callstack 0
  2936   0021A2                     _CLOCK_Initialize:
  2937                           	callstack 26
  2938   0021A2                     
  2939                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x63;
  2940   0021A2  0E63               	movlw	99
  2941   0021A4  010E               	movlb	14	; () banked
  2942   0021A6  6FD3               	movwf	211,b	;volatile
  2943                           
  2944                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x0;
  2945   0021A8  0E00               	movlw	0
  2946   0021AA  6FD5               	movwf	213,b	;volatile
  2947                           
  2948                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
  2949   0021AC  0E00               	movlw	0
  2950   0021AE  6FD7               	movwf	215,b	;volatile
  2951                           
  2952                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x2;
  2953   0021B0  0E02               	movlw	2
  2954   0021B2  6FD9               	movwf	217,b	;volatile
  2955                           
  2956                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
  2957   0021B4  0E00               	movlw	0
  2958   0021B6  6FD8               	movwf	216,b	;volatile
  2959   0021B8                     
  2960                           ; BSR set to: 14
  2961   0021B8  0012               	return		;funcret
  2962   0021BA                     __end_of_CLOCK_Initialize:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function _ADCC_Initialize *****************
  2966 ;; Defined at:
  2967 ;;		line 45 in file "mcc_generated_files/adc/src/adcc.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;Total ram usage:        0 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 3
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_SYSTEM_Initialize
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text25
  2996   001C02                     __ptext25:
  2997                           	callstack 0
  2998   001C02                     _ADCC_Initialize:
  2999                           	callstack 26
  3000   001C02                     
  3001                           ;mcc_generated_files/adc/src/adcc.c: 49:     ADLTHL = 0x0;
  3002   001C02  0E00               	movlw	0
  3003   001C04  6E65               	movwf	101,c	;volatile
  3004                           
  3005                           ;mcc_generated_files/adc/src/adcc.c: 51:     ADLTHH = 0x0;
  3006   001C06  0E00               	movlw	0
  3007   001C08  6E66               	movwf	102,c	;volatile
  3008                           
  3009                           ;mcc_generated_files/adc/src/adcc.c: 53:     ADUTHL = 0x0;
  3010   001C0A  0E00               	movlw	0
  3011   001C0C  6E67               	movwf	103,c	;volatile
  3012                           
  3013                           ;mcc_generated_files/adc/src/adcc.c: 55:     ADUTHH = 0x0;
  3014   001C0E  0E00               	movlw	0
  3015   001C10  6E68               	movwf	104,c	;volatile
  3016                           
  3017                           ;mcc_generated_files/adc/src/adcc.c: 57:     ADSTPTL = 0x0;
  3018   001C12  0E00               	movlw	0
  3019   001C14  6E63               	movwf	99,c	;volatile
  3020                           
  3021                           ;mcc_generated_files/adc/src/adcc.c: 59:     ADSTPTH = 0x0;
  3022   001C16  0E00               	movlw	0
  3023   001C18  6E64               	movwf	100,c	;volatile
  3024                           
  3025                           ;mcc_generated_files/adc/src/adcc.c: 61:     ADRPT = 0x0;
  3026   001C1A  0E00               	movlw	0
  3027   001C1C  6E61               	movwf	97,c	;volatile
  3028                           
  3029                           ;mcc_generated_files/adc/src/adcc.c: 63:     ADPCH = 0x0;
  3030   001C1E  0E00               	movlw	0
  3031   001C20  010F               	movlb	15	; () banked
  3032   001C22  6F5A               	movwf	90,b	;volatile
  3033                           
  3034                           ;mcc_generated_files/adc/src/adcc.c: 65:     ADCAP = 0x0;
  3035   001C24  0E00               	movlw	0
  3036   001C26  6F58               	movwf	88,b	;volatile
  3037                           
  3038                           ;mcc_generated_files/adc/src/adcc.c: 67:     ADPRE = 0x0;
  3039   001C28  0E00               	movlw	0
  3040   001C2A  6F59               	movwf	89,b	;volatile
  3041                           
  3042                           ;mcc_generated_files/adc/src/adcc.c: 69:     ADCON1 = 0x0;
  3043   001C2C  0E00               	movlw	0
  3044   001C2E  6F54               	movwf	84,b	;volatile
  3045                           
  3046                           ;mcc_generated_files/adc/src/adcc.c: 71:     ADCON2 = 0x0;
  3047   001C30  0E00               	movlw	0
  3048   001C32  6F55               	movwf	85,b	;volatile
  3049                           
  3050                           ;mcc_generated_files/adc/src/adcc.c: 73:     ADCON3 = 0x0;
  3051   001C34  0E00               	movlw	0
  3052   001C36  6F56               	movwf	86,b	;volatile
  3053                           
  3054                           ;mcc_generated_files/adc/src/adcc.c: 75:     ADSTAT = 0x0;
  3055   001C38  0E00               	movlw	0
  3056   001C3A  6E60               	movwf	96,c	;volatile
  3057                           
  3058                           ;mcc_generated_files/adc/src/adcc.c: 77:     ADREF = 0x0;
  3059   001C3C  0E00               	movlw	0
  3060   001C3E  6F53               	movwf	83,b	;volatile
  3061                           
  3062                           ;mcc_generated_files/adc/src/adcc.c: 79:     ADACT = 0x0;
  3063   001C40  0E00               	movlw	0
  3064   001C42  6F51               	movwf	81,b	;volatile
  3065                           
  3066                           ;mcc_generated_files/adc/src/adcc.c: 81:     ADCLK = 0x0;
  3067   001C44  0E00               	movlw	0
  3068   001C46  6F52               	movwf	82,b	;volatile
  3069                           
  3070                           ;mcc_generated_files/adc/src/adcc.c: 83:     ADCON0 = 0x81;
  3071   001C48  0E81               	movlw	129
  3072   001C4A  6F5B               	movwf	91,b	;volatile
  3073                           
  3074                           ;mcc_generated_files/adc/src/adcc.c: 85:     ADACQ = 0x0;
  3075   001C4C  0E00               	movlw	0
  3076   001C4E  6F57               	movwf	87,b	;volatile
  3077   001C50                     
  3078                           ; BSR set to: 15
  3079                           ;mcc_generated_files/adc/src/adcc.c: 88:     PIR1bits.ADIF = 0;
  3080   001C50  010E               	movlb	14	; () banked
  3081   001C52  91C6               	bcf	198,0,b	;volatile
  3082   001C54                     
  3083                           ; BSR set to: 14
  3084                           ;mcc_generated_files/adc/src/adcc.c: 91:     PIR1bits.ADTIF = 0;
  3085   001C54  93C6               	bcf	198,1,b	;volatile
  3086   001C56                     
  3087                           ; BSR set to: 14
  3088   001C56  0012               	return		;funcret
  3089   001C58                     __end_of_ADCC_Initialize:
  3090                           	callstack 0
  3091                           
  3092 ;; *************** function _Rotate *****************
  3093 ;; Defined at:
  3094 ;;		line 54 in file "Labs/Lab03_Rotate/Rotate.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;Total ram usage:        1 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 3
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text26
  3123   001B38                     __ptext26:
  3124                           	callstack 0
  3125   001B38                     _Rotate:
  3126                           	callstack 27
  3127   001B38                     
  3128                           ;Labs/Lab03_Rotate/Rotate.c: 56:     if (labState == 0) {
  3129   001B38  505B               	movf	_labState^0,w,c
  3130   001B3A  A4D8               	btfss	status,2,c
  3131   001B3C  EFA2  F00D         	goto	u521
  3132   001B40  EFA4  F00D         	goto	u520
  3133   001B44                     u521:
  3134   001B44  EFAB  F00D         	goto	l2512
  3135   001B48                     u520:
  3136   001B48  0E00               	movlw	0
  3137   001B4A  6E82               	movwf	130,c	;volatile
  3138   001B4C  8882               	bsf	130,4,c	;volatile
  3139   001B4E                     
  3140                           ;Labs/Lab03_Rotate/Rotate.c: 61:         rotateReg = 1;
  3141   001B4E  0E01               	movlw	1
  3142   001B50  6E58               	movwf	_rotateReg^0,c
  3143                           
  3144                           ;Labs/Lab03_Rotate/Rotate.c: 63:         labState = 1;
  3145   001B52  0E01               	movlw	1
  3146   001B54  6E5B               	movwf	_labState^0,c
  3147   001B56                     l2512:
  3148                           
  3149                           ;Labs/Lab03_Rotate/Rotate.c: 66:     if (labState == 1) {
  3150   001B56  045B               	decf	_labState^0,w,c
  3151   001B58  A4D8               	btfss	status,2,c
  3152   001B5A  EFB1  F00D         	goto	u531
  3153   001B5E  EFB3  F00D         	goto	u530
  3154   001B62                     u531:
  3155   001B62  EFCA  F00D         	goto	l2524
  3156   001B66                     u530:
  3157   001B66                     
  3158                           ;Labs/Lab03_Rotate/Rotate.c: 67:         _delay((unsigned long)((500)*(500000/4000.0)));
  3159   001B66  0E52               	movlw	82
  3160   001B68  6E03               	movwf	??_Rotate^0,c
  3161   001B6A  0E2A               	movlw	42
  3162   001B6C                     u2337:
  3163   001B6C  2EE8               	decfsz	wreg,f,c
  3164   001B6E  D7FE               	bra	u2337
  3165   001B70  2E03               	decfsz	??_Rotate^0,f,c
  3166   001B72  D7FC               	bra	u2337
  3167   001B74                     
  3168                           ;Labs/Lab03_Rotate/Rotate.c: 69:         rotateReg <<= 1;
  3169   001B74  90D8               	bcf	status,0,c
  3170   001B76  3658               	rlcf	_rotateReg^0,f,c
  3171   001B78                     
  3172                           ;Labs/Lab03_Rotate/Rotate.c: 72:         if (rotateReg == 16)
  3173   001B78  0E10               	movlw	16
  3174   001B7A  1858               	xorwf	_rotateReg^0,w,c
  3175   001B7C  A4D8               	btfss	status,2,c
  3176   001B7E  EFC3  F00D         	goto	u541
  3177   001B82  EFC5  F00D         	goto	u540
  3178   001B86                     u541:
  3179   001B86  EFC7  F00D         	goto	l2522
  3180   001B8A                     u540:
  3181   001B8A                     
  3182                           ;Labs/Lab03_Rotate/Rotate.c: 73:             rotateReg = 1;
  3183   001B8A  0E01               	movlw	1
  3184   001B8C  6E58               	movwf	_rotateReg^0,c
  3185   001B8E                     l2522:
  3186                           
  3187                           ;Labs/Lab03_Rotate/Rotate.c: 77:         LATA = (rotateReg << 4);
  3188   001B8E  3858               	swapf	_rotateReg^0,w,c
  3189   001B90  0BF0               	andlw	240
  3190   001B92  6E82               	movwf	130,c	;volatile
  3191   001B94                     l2524:
  3192                           
  3193                           ;Labs/Lab03_Rotate/Rotate.c: 80:     if (switchEvent) {
  3194   001B94  505C               	movf	_switchEvent^0,w,c
  3195   001B96  B4D8               	btfsc	status,2,c
  3196   001B98  EFD0  F00D         	goto	u551
  3197   001B9C  EFD2  F00D         	goto	u550
  3198   001BA0                     u551:
  3199   001BA0  EFD4  F00D         	goto	l87
  3200   001BA4                     u550:
  3201   001BA4                     
  3202                           ;Labs/Lab03_Rotate/Rotate.c: 81:         labState = 0;
  3203   001BA4  0E00               	movlw	0
  3204   001BA6  6E5B               	movwf	_labState^0,c
  3205   001BA8                     l87:
  3206   001BA8  0012               	return		;funcret
  3207   001BAA                     __end_of_Rotate:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _PWM *****************
  3211 ;; Defined at:
  3212 ;;		line 60 in file "Labs/Lab06_PulseWidthModulation/PWM.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;Total ram usage:        1 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 11
  3233 ;; This function calls:
  3234 ;;		_ADCC_GetSingleConversion
  3235 ;;		_PWM3_LoadDutyValue
  3236 ;;		_PWM_Output_D5_Disable
  3237 ;;		_PWM_Output_D5_Enable
  3238 ;;		_TMR2_Start
  3239 ;;		_TMR2_Stop
  3240 ;;		_printf
  3241 ;; This function is called by:
  3242 ;;		_main
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text27
  3247   001920                     __ptext27:
  3248                           	callstack 0
  3249   001920                     _PWM:
  3250                           	callstack 19
  3251   001920                     
  3252                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 61:     if (labState == 0) {
  3253   001920  505B               	movf	_labState^0,w,c
  3254   001922  A4D8               	btfss	status,2,c
  3255   001924  EF96  F00C         	goto	u1901
  3256   001928  EF98  F00C         	goto	u1900
  3257   00192C                     u1901:
  3258   00192C  EFA0  F00C         	goto	l3640
  3259   001930                     u1900:
  3260   001930  0E00               	movlw	0
  3261   001932  6E82               	movwf	130,c	;volatile
  3262   001934                     
  3263                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 63:         PWM_Output_D5_Enable();
  3264   001934  ECB5  F010         	call	_PWM_Output_D5_Enable	;wreg free
  3265                           
  3266                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 64:         TMR2_Start();
  3267   001938  EC37  F011         	call	_TMR2_Start	;wreg free
  3268   00193C                     
  3269                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 66:         labState = 1;
  3270   00193C  0E01               	movlw	1
  3271   00193E  6E5B               	movwf	_labState^0,c
  3272   001940                     l3640:
  3273                           
  3274                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 69:     if (labState == 1) {
  3275   001940  045B               	decf	_labState^0,w,c
  3276   001942  A4D8               	btfss	status,2,c
  3277   001944  EFA6  F00C         	goto	u1911
  3278   001948  EFA8  F00C         	goto	u1910
  3279   00194C                     u1911:
  3280   00194C  EFC7  F00C         	goto	l3648
  3281   001950                     u1910:
  3282   001950                     
  3283                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 70:         adcResult = ADCC_GetSingleConversion
      +                          (POT_CHANNEL) >> 6;
  3284   001950  0E00               	movlw	0
  3285   001952  ECD0  F00F         	call	_ADCC_GetSingleConversion
  3286   001956  0E06               	movlw	6
  3287   001958  6E47               	movwf	??_PWM^0,c
  3288   00195A                     u1925:
  3289   00195A  90D8               	bcf	status,0,c
  3290   00195C  3204               	rrcf	(?_ADCC_GetSingleConversion+1)^0,f,c
  3291   00195E  3203               	rrcf	?_ADCC_GetSingleConversion^0,f,c
  3292   001960  2E47               	decfsz	??_PWM^0,f,c
  3293   001962  EFAD  F00C         	goto	u1925
  3294   001966  C003  F04C         	movff	?_ADCC_GetSingleConversion,_adcResult@PWM$F208
  3295   00196A  C004  F04D         	movff	?_ADCC_GetSingleConversion+1,_adcResult@PWM$F208+1
  3296   00196E                     
  3297                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 72:         printf("ADC Result: %d\n\r", adcResu
      +                          lt);
  3298   00196E  0E7F               	movlw	low STR_1
  3299   001970  6E41               	movwf	printf@fmt^0,c
  3300   001972  0E10               	movlw	high STR_1
  3301   001974  6E42               	movwf	(printf@fmt+1)^0,c
  3302   001976  C04C  F043         	movff	_adcResult@PWM$F208,?_printf+2
  3303   00197A  C04D  F044         	movff	_adcResult@PWM$F208+1,?_printf+3
  3304   00197E  EC51  F010         	call	_printf	;wreg free
  3305   001982                     
  3306                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 73:         PWM3_LoadDutyValue(adcResult);
  3307   001982  C04C  F003         	movff	_adcResult@PWM$F208,PWM3_LoadDutyValue@dutyValue
  3308   001986  C04D  F004         	movff	_adcResult@PWM$F208+1,PWM3_LoadDutyValue@dutyValue+1
  3309   00198A  ECB6  F00F         	call	_PWM3_LoadDutyValue	;wreg free
  3310   00198E                     l3648:
  3311                           
  3312                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 76:     if (switchEvent) {
  3313   00198E  505C               	movf	_switchEvent^0,w,c
  3314   001990  B4D8               	btfsc	status,2,c
  3315   001992  EFCD  F00C         	goto	u1931
  3316   001996  EFCF  F00C         	goto	u1930
  3317   00199A                     u1931:
  3318   00199A  EFD5  F00C         	goto	l187
  3319   00199E                     u1930:
  3320   00199E                     
  3321                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 77:         TMR2_Stop();
  3322   00199E  EC35  F011         	call	_TMR2_Stop	;wreg free
  3323   0019A2                     
  3324                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 78:         PWM_Output_D5_Disable();
  3325   0019A2  ECC3  F010         	call	_PWM_Output_D5_Disable	;wreg free
  3326                           
  3327                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 79:         labState = 0;
  3328   0019A6  0E00               	movlw	0
  3329   0019A8  6E5B               	movwf	_labState^0,c
  3330   0019AA                     l187:
  3331   0019AA  0012               	return		;funcret
  3332   0019AC                     __end_of_PWM:
  3333                           	callstack 0
  3334                           
  3335 ;; *************** function _TMR2_Stop *****************
  3336 ;; Defined at:
  3337 ;;		line 98 in file "mcc_generated_files/timer/src/tmr2.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		None
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 3
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_PWM
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text28
  3366   00226A                     __ptext28:
  3367                           	callstack 0
  3368   00226A                     _TMR2_Stop:
  3369                           	callstack 26
  3370   00226A                     
  3371                           ;mcc_generated_files/timer/src/tmr2.c: 101:     T2CONbits.TMR2ON = 0;
  3372   00226A  9EBC               	bcf	188,7,c	;volatile
  3373   00226C  0012               	return		;funcret
  3374   00226E                     __end_of_TMR2_Stop:
  3375                           	callstack 0
  3376                           
  3377 ;; *************** function _TMR2_Start *****************
  3378 ;; Defined at:
  3379 ;;		line 92 in file "mcc_generated_files/timer/src/tmr2.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		None
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3397 ;;Total ram usage:        0 bytes
  3398 ;; Hardware stack levels used: 1
  3399 ;; Hardware stack levels required when called: 3
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_PWM
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text29
  3408   00226E                     __ptext29:
  3409                           	callstack 0
  3410   00226E                     _TMR2_Start:
  3411                           	callstack 26
  3412   00226E                     
  3413                           ;mcc_generated_files/timer/src/tmr2.c: 95:     T2CONbits.TMR2ON = 1;
  3414   00226E  8EBC               	bsf	188,7,c	;volatile
  3415   002270  0012               	return		;funcret
  3416   002272                     __end_of_TMR2_Start:
  3417                           	callstack 0
  3418                           
  3419 ;; *************** function _PWM_Output_D5_Enable *****************
  3420 ;; Defined at:
  3421 ;;		line 83 in file "Labs/Lab06_PulseWidthModulation/PWM.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 3
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_PWM
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text30
  3450   00216A                     __ptext30:
  3451                           	callstack 0
  3452   00216A                     _PWM_Output_D5_Enable:
  3453                           	callstack 26
  3454   00216A                     
  3455                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 84:     PPSLOCK = 0x55;
  3456   00216A  0E55               	movlw	85
  3457   00216C  010E               	movlb	14	; () banked
  3458   00216E  6F9B               	movwf	155,b	;volsfr
  3459                           
  3460                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 85:     PPSLOCK = 0xAA;
  3461   002170  0EAA               	movlw	170
  3462   002172  6F9B               	movwf	155,b	;volsfr
  3463   002174                     
  3464                           ; BSR set to: 14
  3465                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 86:     PPSLOCKbits.PPSLOCKED = 0x00;
  3466   002174  919B               	bcf	155,0,b	;volsfr
  3467                           
  3468                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 88:     RA7PPS = 0x07;
  3469   002176  0E07               	movlw	7
  3470   002178  6FE9               	movwf	233,b	;volatile
  3471                           
  3472                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 89:     PPSLOCK = 0x55;
  3473   00217A  0E55               	movlw	85
  3474   00217C  6F9B               	movwf	155,b	;volsfr
  3475                           
  3476                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 90:     PPSLOCK = 0xAA;
  3477   00217E  0EAA               	movlw	170
  3478   002180  6F9B               	movwf	155,b	;volsfr
  3479   002182                     
  3480                           ; BSR set to: 14
  3481                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 91:     PPSLOCKbits.PPSLOCKED = 0x01;
  3482   002182  819B               	bsf	155,0,b	;volsfr
  3483   002184                     
  3484                           ; BSR set to: 14
  3485   002184  0012               	return		;funcret
  3486   002186                     __end_of_PWM_Output_D5_Enable:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function _PWM_Output_D5_Disable *****************
  3490 ;; Defined at:
  3491 ;;		line 94 in file "Labs/Lab06_PulseWidthModulation/PWM.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 3
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_PWM
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text31
  3520   002186                     __ptext31:
  3521                           	callstack 0
  3522   002186                     _PWM_Output_D5_Disable:
  3523                           	callstack 26
  3524   002186                     
  3525                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 95:     PPSLOCK = 0x55;
  3526   002186  0E55               	movlw	85
  3527   002188  010E               	movlb	14	; () banked
  3528   00218A  6F9B               	movwf	155,b	;volsfr
  3529                           
  3530                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 96:     PPSLOCK = 0xAA;
  3531   00218C  0EAA               	movlw	170
  3532   00218E  6F9B               	movwf	155,b	;volsfr
  3533   002190                     
  3534                           ; BSR set to: 14
  3535                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 97:     PPSLOCKbits.PPSLOCKED = 0x00;
  3536   002190  919B               	bcf	155,0,b	;volsfr
  3537                           
  3538                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 99:     RA7PPS = 0x00;
  3539   002192  0E00               	movlw	0
  3540   002194  6FE9               	movwf	233,b	;volatile
  3541                           
  3542                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 100:     PPSLOCK = 0x55;
  3543   002196  0E55               	movlw	85
  3544   002198  6F9B               	movwf	155,b	;volsfr
  3545                           
  3546                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 101:     PPSLOCK = 0xAA;
  3547   00219A  0EAA               	movlw	170
  3548   00219C  6F9B               	movwf	155,b	;volsfr
  3549   00219E                     
  3550                           ; BSR set to: 14
  3551                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 102:     PPSLOCKbits.PPSLOCKED = 0x01;
  3552   00219E  819B               	bsf	155,0,b	;volsfr
  3553   0021A0                     
  3554                           ; BSR set to: 14
  3555   0021A0  0012               	return		;funcret
  3556   0021A2                     __end_of_PWM_Output_D5_Disable:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _PWM3_LoadDutyValue *****************
  3560 ;; Defined at:
  3561 ;;		line 62 in file "mcc_generated_files/pwm/src/pwm3.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  dutyValue       2    2[COMRAM] unsigned short 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;Total ram usage:        4 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 3
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_PWM
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text32
  3590   001F6C                     __ptext32:
  3591                           	callstack 0
  3592   001F6C                     _PWM3_LoadDutyValue:
  3593                           	callstack 26
  3594   001F6C                     
  3595                           ;mcc_generated_files/pwm/src/pwm3.c: 62:  void PWM3_LoadDutyValue(uint16_t dutyValue);mc
      +                          c_generated_files/pwm/src/pwm3.c: 63:  {;mcc_generated_files/pwm/src/pwm3.c: 65:      PW
      +                          M3DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
  3596   001F6C  C003  F005         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  3597   001F70  C004  F006         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
  3598   001F74  90D8               	bcf	status,0,c
  3599   001F76  3206               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  3600   001F78  3205               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  3601   001F7A  90D8               	bcf	status,0,c
  3602   001F7C  3206               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  3603   001F7E  3205               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  3604   001F80  5005               	movf	??_PWM3_LoadDutyValue^0,w,c
  3605   001F82  6EA3               	movwf	163,c	;volatile
  3606                           
  3607                           ;mcc_generated_files/pwm/src/pwm3.c: 68:      PWM3DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
  3608   001F84  C003  F005         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  3609   001F88  0E03               	movlw	3
  3610   001F8A  1605               	andwf	??_PWM3_LoadDutyValue^0,f,c
  3611   001F8C  0E06               	movlw	6
  3612   001F8E  6E06               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
  3613   001F90                     u1705:
  3614   001F90  90D8               	bcf	status,0,c
  3615   001F92  3605               	rlcf	??_PWM3_LoadDutyValue^0,f,c
  3616   001F94  2E06               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
  3617   001F96  EFC8  F00F         	goto	u1705
  3618   001F9A  5005               	movf	??_PWM3_LoadDutyValue^0,w,c
  3619   001F9C  6EA2               	movwf	162,c	;volatile
  3620   001F9E  0012               	return		;funcret
  3621   001FA0                     __end_of_PWM3_LoadDutyValue:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _Interrupt *****************
  3625 ;; Defined at:
  3626 ;;		line 59 in file "Labs/Lab08_Interrupts/Interrupt.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 4
  3647 ;; This function calls:
  3648 ;;		_TMR0_OverflowCallbackRegister
  3649 ;; This function is called by:
  3650 ;;		_main
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text33
  3655   001CAC                     __ptext33:
  3656                           	callstack 0
  3657   001CAC                     _Interrupt:
  3658                           	callstack 26
  3659   001CAC                     
  3660                           ;Labs/Lab08_Interrupts/Interrupt.c: 61:     if (labState == 0) {
  3661   001CAC  505B               	movf	_labState^0,w,c
  3662   001CAE  A4D8               	btfss	status,2,c
  3663   001CB0  EF5C  F00E         	goto	u1991
  3664   001CB4  EF5E  F00E         	goto	u1990
  3665   001CB8                     u1991:
  3666   001CB8  EF71  F00E         	goto	l3704
  3667   001CBC                     u1990:
  3668   001CBC  0E00               	movlw	0
  3669   001CBE  6E82               	movwf	130,c	;volatile
  3670   001CC0  8882               	bsf	130,4,c	;volatile
  3671   001CC2                     
  3672                           ;Labs/Lab08_Interrupts/Interrupt.c: 65:         rotateReg = 1;
  3673   001CC2  0E01               	movlw	1
  3674   001CC4  6E53               	movwf	_rotateReg@Interrupt$F303^0,c
  3675   001CC6                     
  3676                           ;Labs/Lab08_Interrupts/Interrupt.c: 67:         (INTCONbits.GIE = 1);
  3677   001CC6  8EF2               	bsf	242,7,c	;volatile
  3678   001CC8                     
  3679                           ;Labs/Lab08_Interrupts/Interrupt.c: 68:         (INTCONbits.PEIE = 1);
  3680   001CC8  8CF2               	bsf	242,6,c	;volatile
  3681   001CCA  010E               	movlb	14	; () banked
  3682   001CCC  8BBD               	bsf	189,5,b	;volatile
  3683   001CCE                     
  3684                           ; BSR set to: 14
  3685                           ;Labs/Lab08_Interrupts/Interrupt.c: 71:         TMR0_OverflowCallbackRegister(LAB_ISR);
  3686   001CCE  0E2E               	movlw	low _LAB_ISR
  3687   001CD0  6E03               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^0,c
  3688   001CD2  0E21               	movlw	high _LAB_ISR
  3689   001CD4  6E04               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^0,c
  3690   001CD6  0E00               	movlw	low (_LAB_ISR shr (0+16))
  3691   001CD8  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^0,c
  3692   001CDA  EC1D  F011         	call	_TMR0_OverflowCallbackRegister	;wreg free
  3693   001CDE                     
  3694                           ;Labs/Lab08_Interrupts/Interrupt.c: 72:         labState = 1;
  3695   001CDE  0E01               	movlw	1
  3696   001CE0  6E5B               	movwf	_labState^0,c
  3697   001CE2                     l3704:
  3698                           
  3699                           ;Labs/Lab08_Interrupts/Interrupt.c: 79:     if (switchEvent) {
  3700   001CE2  505C               	movf	_switchEvent^0,w,c
  3701   001CE4  B4D8               	btfsc	status,2,c
  3702   001CE6  EF77  F00E         	goto	u2001
  3703   001CEA  EF79  F00E         	goto	u2000
  3704   001CEE                     u2001:
  3705   001CEE  EF7F  F00E         	goto	l267
  3706   001CF2                     u2000:
  3707   001CF2  010E               	movlb	14	; () banked
  3708   001CF4  9BBD               	bcf	189,5,b	;volatile
  3709   001CF6                     
  3710                           ; BSR set to: 14
  3711                           ;Labs/Lab08_Interrupts/Interrupt.c: 81:         (INTCONbits.GIE = 0);
  3712   001CF6  9EF2               	bcf	242,7,c	;volatile
  3713                           
  3714                           ;Labs/Lab08_Interrupts/Interrupt.c: 82:         (INTCONbits.PEIE = 0);
  3715   001CF8  9CF2               	bcf	242,6,c	;volatile
  3716   001CFA                     
  3717                           ; BSR set to: 14
  3718                           ;Labs/Lab08_Interrupts/Interrupt.c: 83:         labState = 0;
  3719   001CFA  0E00               	movlw	0
  3720   001CFC  6E5B               	movwf	_labState^0,c
  3721   001CFE                     l267:
  3722   001CFE  0012               	return		;funcret
  3723   001D00                     __end_of_Interrupt:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _TMR0_OverflowCallbackRegister *****************
  3727 ;; Defined at:
  3728 ;;		line 116 in file "mcc_generated_files/timer/src/tmr0.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  CallbackHand    3    2[COMRAM] PTR FTN()void 
  3731 ;;		 -> TMR0_DefaultOverflowCallback(1), TMR2_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), LAB_ISR(1), 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3743 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;Total ram usage:        3 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 3
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_Interrupt
  3754 ;;		_TMR0_Initialize
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text34
  3759   00223A                     __ptext34:
  3760                           	callstack 0
  3761   00223A                     _TMR0_OverflowCallbackRegister:
  3762                           	callstack 25
  3763   00223A                     
  3764                           ;mcc_generated_files/timer/src/tmr0.c: 116: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 117: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 118:     TMR0_OverflowCallback = CallbackHandler;
  3765   00223A  C003  F066         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
  3766   00223E  C004  F067         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
  3767   002242  C005  F068         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
  3768   002246  0012               	return		;funcret
  3769   002248                     __end_of_TMR0_OverflowCallbackRegister:
  3770                           	callstack 0
  3771                           
  3772 ;; *************** function _HelloWorld *****************
  3773 ;; Defined at:
  3774 ;;		line 50 in file "Labs/Lab01_HelloWorld/HelloWorld.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;Total ram usage:        0 bytes
  3793 ;; Hardware stack levels used: 1
  3794 ;; Hardware stack levels required when called: 3
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text35
  3803   001EB6                     __ptext35:
  3804                           	callstack 0
  3805   001EB6                     _HelloWorld:
  3806                           	callstack 27
  3807   001EB6                     
  3808                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 51:     if (labState == 0) {
  3809   001EB6  505B               	movf	_labState^0,w,c
  3810   001EB8  A4D8               	btfss	status,2,c
  3811   001EBA  EF61  F00F         	goto	u431
  3812   001EBE  EF63  F00F         	goto	u430
  3813   001EC2                     u431:
  3814   001EC2  EF67  F00F         	goto	l2470
  3815   001EC6                     u430:
  3816   001EC6  0E00               	movlw	0
  3817   001EC8  6E82               	movwf	130,c	;volatile
  3818   001ECA                     
  3819                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 54:         labState = 1;
  3820   001ECA  0E01               	movlw	1
  3821   001ECC  6E5B               	movwf	_labState^0,c
  3822   001ECE                     l2470:
  3823                           
  3824                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 57:     if (labState == 1) {
  3825   001ECE  045B               	decf	_labState^0,w,c
  3826   001ED0  A4D8               	btfss	status,2,c
  3827   001ED2  EF6D  F00F         	goto	u441
  3828   001ED6  EF6F  F00F         	goto	u440
  3829   001EDA                     u441:
  3830   001EDA  EF70  F00F         	goto	l2472
  3831   001EDE                     u440:
  3832   001EDE  8882               	bsf	130,4,c	;volatile
  3833   001EE0                     l2472:
  3834                           
  3835                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 61:     if (switchEvent) {
  3836   001EE0  505C               	movf	_switchEvent^0,w,c
  3837   001EE2  B4D8               	btfsc	status,2,c
  3838   001EE4  EF76  F00F         	goto	u451
  3839   001EE8  EF78  F00F         	goto	u450
  3840   001EEC                     u451:
  3841   001EEC  EF7A  F00F         	goto	l22
  3842   001EF0                     u450:
  3843   001EF0                     
  3844                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 62:         labState = 0;
  3845   001EF0  0E00               	movlw	0
  3846   001EF2  6E5B               	movwf	_labState^0,c
  3847   001EF4                     l22:
  3848   001EF4  0012               	return		;funcret
  3849   001EF6                     __end_of_HelloWorld:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _EEPROM *****************
  3853 ;; Defined at:
  3854 ;;		line 60 in file "Labs/Lab10_EEPROM/EEPROM.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;Total ram usage:        1 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 4
  3875 ;; This function calls:
  3876 ;;		_ADCC_GetSingleConversion
  3877 ;;		_EEPROM_Read
  3878 ;;		_EEPROM_Write
  3879 ;;		_NVM_UnlockKeySet
  3880 ;; This function is called by:
  3881 ;;		_main
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text36
  3886   001890                     __ptext36:
  3887                           	callstack 0
  3888   001890                     _EEPROM:
  3889                           	callstack 26
  3890   001890                     
  3891                           ;Labs/Lab10_EEPROM/EEPROM.c: 62:     if (labState == 0) {
  3892   001890  505B               	movf	_labState^0,w,c
  3893   001892  A4D8               	btfss	status,2,c
  3894   001894  EF4E  F00C         	goto	u2011
  3895   001898  EF50  F00C         	goto	u2010
  3896   00189C                     u2011:
  3897   00189C  EF54  F00C         	goto	l3712
  3898   0018A0                     u2010:
  3899   0018A0  0E00               	movlw	0
  3900   0018A2  6E82               	movwf	130,c	;volatile
  3901   0018A4                     
  3902                           ;Labs/Lab10_EEPROM/EEPROM.c: 65:         labState = 1;
  3903   0018A4  0E01               	movlw	1
  3904   0018A6  6E5B               	movwf	_labState^0,c
  3905   0018A8                     l3712:
  3906                           
  3907                           ;Labs/Lab10_EEPROM/EEPROM.c: 68:     if (labState == 1) {
  3908   0018A8  045B               	decf	_labState^0,w,c
  3909   0018AA  A4D8               	btfss	status,2,c
  3910   0018AC  EF5A  F00C         	goto	u2021
  3911   0018B0  EF5C  F00C         	goto	u2020
  3912   0018B4                     u2021:
  3913   0018B4  EF85  F00C         	goto	l317
  3914   0018B8                     u2020:
  3915   0018B8                     
  3916                           ;Labs/Lab10_EEPROM/EEPROM.c: 70:         adcResult = ADCC_GetSingleConversion(POT_CHANNE
      +                          L) >> 12;
  3917   0018B8  0E00               	movlw	0
  3918   0018BA  ECD0  F00F         	call	_ADCC_GetSingleConversion
  3919   0018BE  0E0C               	movlw	12
  3920   0018C0  6E0B               	movwf	??_EEPROM^0,c
  3921   0018C2                     u2035:
  3922   0018C2  90D8               	bcf	status,0,c
  3923   0018C4  3204               	rrcf	(?_ADCC_GetSingleConversion+1)^0,f,c
  3924   0018C6  3203               	rrcf	?_ADCC_GetSingleConversion^0,f,c
  3925   0018C8  2E0B               	decfsz	??_EEPROM^0,f,c
  3926   0018CA  EF61  F00C         	goto	u2035
  3927   0018CE  5003               	movf	?_ADCC_GetSingleConversion^0,w,c
  3928   0018D0  6E52               	movwf	_adcResult@EEPROM$F389^0,c
  3929   0018D2                     
  3930                           ;Labs/Lab10_EEPROM/EEPROM.c: 71:         NVM_UnlockKeySet((0xAA55U));
  3931   0018D2  0EAA               	movlw	170
  3932   0018D4  6E04               	movwf	(NVM_UnlockKeySet@unlockKey+1)^0,c
  3933   0018D6  0E55               	movlw	85
  3934   0018D8  6E03               	movwf	NVM_UnlockKeySet@unlockKey^0,c
  3935   0018DA  EC2B  F011         	call	_NVM_UnlockKeySet	;wreg free
  3936   0018DE                     
  3937                           ;Labs/Lab10_EEPROM/EEPROM.c: 72:         EEPROM_Write(0x310000, adcResult);
  3938   0018DE  0E00               	movlw	0
  3939   0018E0  6E03               	movwf	EEPROM_Write@address^0,c
  3940   0018E2  0E00               	movlw	0
  3941   0018E4  6E04               	movwf	(EEPROM_Write@address+1)^0,c
  3942   0018E6  0E31               	movlw	49
  3943   0018E8  6E05               	movwf	(EEPROM_Write@address+2)^0,c
  3944   0018EA  C052  F006         	movff	_adcResult@EEPROM$F389,EEPROM_Write@data
  3945   0018EE  ECD0  F00E         	call	_EEPROM_Write	;wreg free
  3946   0018F2                     
  3947                           ;Labs/Lab10_EEPROM/EEPROM.c: 75:         ledDisplay = EEPROM_Read(0x310000);
  3948   0018F2  0E00               	movlw	0
  3949   0018F4  6E03               	movwf	EEPROM_Read@address^0,c
  3950   0018F6  0E00               	movlw	0
  3951   0018F8  6E04               	movwf	(EEPROM_Read@address+1)^0,c
  3952   0018FA  0E31               	movlw	49
  3953   0018FC  6E05               	movwf	(EEPROM_Read@address+2)^0,c
  3954   0018FE  ECFE  F00F         	call	_EEPROM_Read	;wreg free
  3955   001902  6E51               	movwf	_ledDisplay^0,c
  3956   001904                     
  3957                           ;Labs/Lab10_EEPROM/EEPROM.c: 78:         LATA = ledDisplay << 4;
  3958   001904  3851               	swapf	_ledDisplay^0,w,c
  3959   001906  0BF0               	andlw	240
  3960   001908  6E82               	movwf	130,c	;volatile
  3961   00190A                     l317:
  3962                           
  3963                           ;Labs/Lab10_EEPROM/EEPROM.c: 81:     if (switchEvent) {
  3964   00190A  505C               	movf	_switchEvent^0,w,c
  3965   00190C  B4D8               	btfsc	status,2,c
  3966   00190E  EF8B  F00C         	goto	u2041
  3967   001912  EF8D  F00C         	goto	u2040
  3968   001916                     u2041:
  3969   001916  EF8F  F00C         	goto	l319
  3970   00191A                     u2040:
  3971   00191A                     
  3972                           ;Labs/Lab10_EEPROM/EEPROM.c: 82:         labState = 0;
  3973   00191A  0E00               	movlw	0
  3974   00191C  6E5B               	movwf	_labState^0,c
  3975   00191E                     l319:
  3976   00191E  0012               	return		;funcret
  3977   001920                     __end_of_EEPROM:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _NVM_UnlockKeySet *****************
  3981 ;; Defined at:
  3982 ;;		line 70 in file "mcc_generated_files/nvm/src/nvm.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  unlockKey       2    2[COMRAM] unsigned short 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 3
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_EEPROM
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text37
  4011   002256                     __ptext37:
  4012                           	callstack 0
  4013   002256                     _NVM_UnlockKeySet:
  4014                           	callstack 26
  4015   002256                     
  4016                           ;mcc_generated_files/nvm/src/nvm.c: 70: void NVM_UnlockKeySet(uint16_t unlockKey);mcc_ge
      +                          nerated_files/nvm/src/nvm.c: 71: {;mcc_generated_files/nvm/src/nvm.c: 72:     unlockKeyH
      +                          igh = (uint8_t) (unlockKey >> 8);
  4017   002256  5004               	movf	(NVM_UnlockKeySet@unlockKey+1)^0,w,c
  4018   002258  6E4F               	movwf	_unlockKeyHigh^0,c	;volatile
  4019   00225A                     
  4020                           ;mcc_generated_files/nvm/src/nvm.c: 73:     unlockKeyLow = (uint8_t) unlockKey;
  4021   00225A  C003  F050         	movff	NVM_UnlockKeySet@unlockKey,_unlockKeyLow	;volatile
  4022   00225E  0012               	return		;funcret
  4023   002260                     __end_of_NVM_UnlockKeySet:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _EEPROM_Write *****************
  4027 ;; Defined at:
  4028 ;;		line 336 in file "mcc_generated_files/nvm/src/nvm.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  address         3    2[COMRAM] unsigned um
  4031 ;;  data            1    5[COMRAM] unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  globalInterr    1    9[COMRAM] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4045 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4046 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4047 ;;Total ram usage:        8 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 3
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_EEPROM
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           ;# 
  4058                           
  4059                           	psect	text38
  4060   001DA0                     __ptext38:
  4061                           	callstack 0
  4062   001DA0                     _EEPROM_Write:
  4063                           	callstack 26
  4064   001DA0                     
  4065                           ;mcc_generated_files/nvm/src/nvm.c: 336: void EEPROM_Write(eeprom_address_t address, eep
      +                          rom_data_t data);mcc_generated_files/nvm/src/nvm.c: 337: {;mcc_generated_files/nvm/src/n
      +                          vm.c: 339:     uint8_t globalInterruptBitValue = INTCONbits.GIE;
  4066   001DA0  0E00               	movlw	0
  4067   001DA2  BEF2               	btfsc	242,7,c	;volatile
  4068   001DA4  0E01               	movlw	1
  4069   001DA6  6E0A               	movwf	EEPROM_Write@globalInterruptBitValue^0,c
  4070   001DA8                     
  4071                           ;mcc_generated_files/nvm/src/nvm.c: 342:     NVMADRU = (uint8_t) (address >> 16);
  4072   001DA8  C005  FF7B         	movff	EEPROM_Write@address+2,3963	;volatile
  4073   001DAC                     
  4074                           ;mcc_generated_files/nvm/src/nvm.c: 343:     NVMADRH = (uint8_t) (address >> 8);
  4075   001DAC  C003  F007         	movff	EEPROM_Write@address,??_EEPROM_Write
  4076   001DB0  C004  F008         	movff	EEPROM_Write@address+1,??_EEPROM_Write+1
  4077   001DB4  C005  F009         	movff	EEPROM_Write@address+2,??_EEPROM_Write+2
  4078   001DB8  C008  F007         	movff	??_EEPROM_Write+1,??_EEPROM_Write
  4079   001DBC  C009  F008         	movff	??_EEPROM_Write+2,??_EEPROM_Write+1
  4080   001DC0  6A09               	clrf	(??_EEPROM_Write+2)^0,c
  4081   001DC2  5007               	movf	??_EEPROM_Write^0,w,c
  4082   001DC4  6E7A               	movwf	122,c	;volatile
  4083   001DC6                     
  4084                           ;mcc_generated_files/nvm/src/nvm.c: 344:     NVMADRL = (uint8_t) address;
  4085   001DC6  C003  FF79         	movff	EEPROM_Write@address,3961	;volatile
  4086   001DCA                     
  4087                           ;mcc_generated_files/nvm/src/nvm.c: 347:     NVMDATL = data;
  4088   001DCA  C006  FF7C         	movff	EEPROM_Write@data,3964	;volatile
  4089   001DCE                     
  4090                           ;mcc_generated_files/nvm/src/nvm.c: 350:     NVMCON0bits.NVMEN = 1;
  4091   001DCE  8E7F               	bsf	127,7,c	;volatile
  4092   001DD0                     
  4093                           ;mcc_generated_files/nvm/src/nvm.c: 353:     INTCONbits.GIE = 0;
  4094   001DD0  9EF2               	bcf	242,7,c	;volatile
  4095                           
  4096                           ;# 
  4097                           ;# 
  4098   001DD2  010F               	banksel	3969	;# 
  4099   001DD4                     
  4100                           ;mcc_generated_files/nvm/src/nvm.c: 359:     NVMCON2 = unlockKeyLow;
  4101   001DD4  C050  FF81         	movff	_unlockKeyLow,3969	;volsfr
  4102   001DD8  504F               	movf	_unlockKeyHigh& (0+255),w,c	;# 
  4103   001DDA  6F81               	movwf	129,b	;# 
  4104   001DDC  8980               	bsf	128,4,b	;# 
  4105   001DDE                     
  4106                           ;mcc_generated_files/nvm/src/nvm.c: 368:     INTCONbits.GIE = globalInterruptBitValue;
  4107   001DDE  B00A               	btfsc	EEPROM_Write@globalInterruptBitValue^0,0,c
  4108   001DE0  D002               	bra	u1725
  4109   001DE2  9EF2               	bcf	242,7,c	;volatile
  4110   001DE4  D001               	bra	u1726
  4111   001DE6                     u1725:
  4112   001DE6  8EF2               	bsf	242,7,c	;volatile
  4113   001DE8                     u1726:
  4114   001DE8                     
  4115                           ;mcc_generated_files/nvm/src/nvm.c: 371:     NVMCON0bits.NVMEN = 0;
  4116   001DE8  9E7F               	bcf	127,7,c	;volatile
  4117   001DEA  0012               	return		;funcret
  4118   001DEC                     __end_of_EEPROM_Write:
  4119                           	callstack 0
  4120                           
  4121 ;; *************** function _EEPROM_Read *****************
  4122 ;; Defined at:
  4123 ;;		line 317 in file "mcc_generated_files/nvm/src/nvm.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  address         3    2[COMRAM] unsigned um
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;		None
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      unsigned char 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4137 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4141 ;;Total ram usage:        6 bytes
  4142 ;; Hardware stack levels used: 1
  4143 ;; Hardware stack levels required when called: 3
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_EEPROM
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text39
  4152   001FFC                     __ptext39:
  4153                           	callstack 0
  4154   001FFC                     _EEPROM_Read:
  4155                           	callstack 26
  4156   001FFC                     
  4157                           ;mcc_generated_files/nvm/src/nvm.c: 317: eeprom_data_t EEPROM_Read(eeprom_address_t addr
      +                          ess);mcc_generated_files/nvm/src/nvm.c: 318: {;mcc_generated_files/nvm/src/nvm.c: 320:  
      +                             NVMADRU = (uint8_t) (address >> 16);
  4158   001FFC  C005  FF7B         	movff	EEPROM_Read@address+2,3963	;volatile
  4159   002000                     
  4160                           ;mcc_generated_files/nvm/src/nvm.c: 321:     NVMADRH = (uint8_t) (address >> 8);
  4161   002000  C003  F006         	movff	EEPROM_Read@address,??_EEPROM_Read
  4162   002004  C004  F007         	movff	EEPROM_Read@address+1,??_EEPROM_Read+1
  4163   002008  C005  F008         	movff	EEPROM_Read@address+2,??_EEPROM_Read+2
  4164   00200C  C007  F006         	movff	??_EEPROM_Read+1,??_EEPROM_Read
  4165   002010  C008  F007         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
  4166   002014  6A08               	clrf	(??_EEPROM_Read+2)^0,c
  4167   002016  5006               	movf	??_EEPROM_Read^0,w,c
  4168   002018  6E7A               	movwf	122,c	;volatile
  4169   00201A                     
  4170                           ;mcc_generated_files/nvm/src/nvm.c: 322:     NVMADRL = (uint8_t) address;
  4171   00201A  C003  FF79         	movff	EEPROM_Read@address,3961	;volatile
  4172   00201E                     
  4173                           ;mcc_generated_files/nvm/src/nvm.c: 325:     NVMCON0bits.NVMEN = 1;
  4174   00201E  8E7F               	bsf	127,7,c	;volatile
  4175   002020                     
  4176                           ;mcc_generated_files/nvm/src/nvm.c: 328:     NVMCON1bits.RD = 1;
  4177   002020  8080               	bsf	128,0,c	;volsfr
  4178   002022                     
  4179                           ;mcc_generated_files/nvm/src/nvm.c: 331:     NVMCON0bits.NVMEN = 0;
  4180   002022  9E7F               	bcf	127,7,c	;volatile
  4181                           
  4182                           ;mcc_generated_files/nvm/src/nvm.c: 333:     return NVMDATL;
  4183   002024  507C               	movf	124,w,c	;volatile
  4184   002026  0012               	return		;funcret
  4185   002028                     __end_of_EEPROM_Read:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _Blink *****************
  4189 ;; Defined at:
  4190 ;;		line 59 in file "Labs/Lab02_Blink/Blink.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;		None
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;Total ram usage:        1 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 5
  4211 ;; This function calls:
  4212 ;;		_TMR1_HasOverflowOccured
  4213 ;;		_TMR1_Reload
  4214 ;;		_TMR1_Start
  4215 ;;		_TMR1_Stop
  4216 ;; This function is called by:
  4217 ;;		_main
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text40
  4222   0017F4                     __ptext40:
  4223                           	callstack 0
  4224   0017F4                     _Blink:
  4225                           	callstack 25
  4226   0017F4                     
  4227                           ;Labs/Lab02_Blink/Blink.c: 60:     if (labState == 0) {
  4228   0017F4  505B               	movf	_labState^0,w,c
  4229   0017F6  A4D8               	btfss	status,2,c
  4230   0017F8  EF00  F00C         	goto	u1731
  4231   0017FC  EF02  F00C         	goto	u1730
  4232   001800                     u1731:
  4233   001800  EF08  F00C         	goto	l3572
  4234   001804                     u1730:
  4235   001804  0E00               	movlw	0
  4236   001806  6E82               	movwf	130,c	;volatile
  4237   001808                     
  4238                           ;Labs/Lab02_Blink/Blink.c: 62:         TMR1_Start();
  4239   001808  EC3B  F011         	call	_TMR1_Start	;wreg free
  4240   00180C                     
  4241                           ;Labs/Lab02_Blink/Blink.c: 64:         labState = 1;
  4242   00180C  0E01               	movlw	1
  4243   00180E  6E5B               	movwf	_labState^0,c
  4244   001810                     l3572:
  4245                           
  4246                           ;Labs/Lab02_Blink/Blink.c: 67:     if (labState == 1) {
  4247   001810  045B               	decf	_labState^0,w,c
  4248   001812  A4D8               	btfss	status,2,c
  4249   001814  EF0E  F00C         	goto	u1741
  4250   001818  EF10  F00C         	goto	u1740
  4251   00181C                     u1741:
  4252   00181C  EF3B  F00C         	goto	l3588
  4253   001820                     u1740:
  4254   001820                     l3576:
  4255   001820  ECE8  F010         	call	_TMR1_HasOverflowOccured	;wreg free
  4256   001824  0900               	iorlw	0
  4257   001826  B4D8               	btfsc	status,2,c
  4258   001828  EF18  F00C         	goto	u1751
  4259   00182C  EF1A  F00C         	goto	u1750
  4260   001830                     u1751:
  4261   001830  EF10  F00C         	goto	l3576
  4262   001834                     u1750:
  4263   001834                     
  4264                           ;Labs/Lab02_Blink/Blink.c: 69:         TMR1IF = 0;
  4265   001834  010E               	movlb	14	; () banked
  4266   001836  91C9               	bcf	201,0,b	;volatile
  4267   001838                     
  4268                           ; BSR set to: 14
  4269                           ;Labs/Lab02_Blink/Blink.c: 70:         TMR1_Reload();
  4270   001838  EC24  F011         	call	_TMR1_Reload	;wreg free
  4271   00183C                     
  4272                           ;Labs/Lab02_Blink/Blink.c: 71:         flagCounter++;
  4273   00183C  2A59               	incf	_flagCounter^0,f,c
  4274   00183E                     
  4275                           ;Labs/Lab02_Blink/Blink.c: 73:         if(flagCounter == 3){
  4276   00183E  0E03               	movlw	3
  4277   001840  1859               	xorwf	_flagCounter^0,w,c
  4278   001842  A4D8               	btfss	status,2,c
  4279   001844  EF26  F00C         	goto	u1761
  4280   001848  EF28  F00C         	goto	u1760
  4281   00184C                     u1761:
  4282   00184C  EF3B  F00C         	goto	l3588
  4283   001850                     u1760:
  4284   001850  B882               	btfsc	130,4,c	;volatile
  4285   001852  EF2D  F00C         	goto	u1771
  4286   001856  EF30  F00C         	goto	u1770
  4287   00185A                     u1771:
  4288   00185A  0E01               	movlw	1
  4289   00185C  EF31  F00C         	goto	u1776
  4290   001860                     u1770:
  4291   001860  0E00               	movlw	0
  4292   001862                     u1776:
  4293   001862  0AFF               	xorlw	255
  4294   001864  6E05               	movwf	??_Blink^0,c
  4295   001866  3A05               	swapf	??_Blink^0,f,c
  4296   001868  5082               	movf	130,w,c	;volatile
  4297   00186A  1805               	xorwf	??_Blink^0,w,c
  4298   00186C  0BEF               	andlw	-17
  4299   00186E  1805               	xorwf	??_Blink^0,w,c
  4300   001870  6E82               	movwf	130,c	;volatile
  4301   001872                     
  4302                           ;Labs/Lab02_Blink/Blink.c: 75:             flagCounter = 0;
  4303   001872  0E00               	movlw	0
  4304   001874  6E59               	movwf	_flagCounter^0,c
  4305   001876                     l3588:
  4306                           
  4307                           ;Labs/Lab02_Blink/Blink.c: 79:     if (switchEvent) {
  4308   001876  505C               	movf	_switchEvent^0,w,c
  4309   001878  B4D8               	btfsc	status,2,c
  4310   00187A  EF41  F00C         	goto	u1781
  4311   00187E  EF43  F00C         	goto	u1780
  4312   001882                     u1781:
  4313   001882  EF47  F00C         	goto	l60
  4314   001886                     u1780:
  4315   001886                     
  4316                           ;Labs/Lab02_Blink/Blink.c: 80:         TMR1_Stop();
  4317   001886  EC39  F011         	call	_TMR1_Stop	;wreg free
  4318   00188A                     
  4319                           ;Labs/Lab02_Blink/Blink.c: 81:         labState = 0;
  4320   00188A  0E00               	movlw	0
  4321   00188C  6E5B               	movwf	_labState^0,c
  4322   00188E                     l60:
  4323   00188E  0012               	return		;funcret
  4324   001890                     __end_of_Blink:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _TMR1_Stop *****************
  4328 ;; Defined at:
  4329 ;;		line 95 in file "mcc_generated_files/timer/src/tmr1.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		None
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;Total ram usage:        0 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 3
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_Blink
  4354 ;;		_Timers
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text41
  4359   002272                     __ptext41:
  4360                           	callstack 0
  4361   002272                     _TMR1_Stop:
  4362                           	callstack 26
  4363   002272                     
  4364                           ;mcc_generated_files/timer/src/tmr1.c: 98:     T1CONbits.TMR1ON = 0;
  4365   002272  90CE               	bcf	206,0,c	;volatile
  4366   002274  0012               	return		;funcret
  4367   002276                     __end_of_TMR1_Stop:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function _TMR1_Start *****************
  4371 ;; Defined at:
  4372 ;;		line 89 in file "mcc_generated_files/timer/src/tmr1.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		None
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; Hardware stack levels required when called: 3
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_Blink
  4397 ;;		_Timers
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text42
  4402   002276                     __ptext42:
  4403                           	callstack 0
  4404   002276                     _TMR1_Start:
  4405                           	callstack 26
  4406   002276                     
  4407                           ;mcc_generated_files/timer/src/tmr1.c: 92:     T1CONbits.TMR1ON = 1;
  4408   002276  80CE               	bsf	206,0,c	;volatile
  4409   002278  0012               	return		;funcret
  4410   00227A                     __end_of_TMR1_Start:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function _TMR1_Reload *****************
  4414 ;; Defined at:
  4415 ;;		line 137 in file "mcc_generated_files/timer/src/tmr1.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 4
  4436 ;; This function calls:
  4437 ;;		_TMR1_Write
  4438 ;; This function is called by:
  4439 ;;		_Blink
  4440 ;;		_Timers
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text43
  4445   002248                     __ptext43:
  4446                           	callstack 0
  4447   002248                     _TMR1_Reload:
  4448                           	callstack 25
  4449   002248                     
  4450                           ;mcc_generated_files/timer/src/tmr1.c: 139:     TMR1_Write(timer1ReloadVal);
  4451   002248  C084  F003         	movff	_timer1ReloadVal,TMR1_Write@timerVal	;volatile
  4452   00224C  C085  F004         	movff	_timer1ReloadVal+1,TMR1_Write@timerVal+1	;volatile
  4453   002250  EC3D  F010         	call	_TMR1_Write	;wreg free
  4454   002254  0012               	return		;funcret
  4455   002256                     __end_of_TMR1_Reload:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function _TMR1_Write *****************
  4459 ;; Defined at:
  4460 ;;		line 115 in file "mcc_generated_files/timer/src/tmr1.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  timerVal        2    2[COMRAM] unsigned int 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;Total ram usage:        2 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 3
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_TMR1_Reload
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text44
  4489   00207A                     __ptext44:
  4490                           	callstack 0
  4491   00207A                     _TMR1_Write:
  4492                           	callstack 25
  4493   00207A                     
  4494                           ;mcc_generated_files/timer/src/tmr1.c: 115: void TMR1_Write(size_t timerVal);mcc_generat
      +                          ed_files/timer/src/tmr1.c: 116: {;mcc_generated_files/timer/src/tmr1.c: 117:     if (T1C
      +                          ONbits.nT1SYNC == 1)
  4495   00207A  A4CE               	btfss	206,2,c	;volatile
  4496   00207C  EF42  F010         	goto	u1651
  4497   002080  EF44  F010         	goto	u1650
  4498   002084                     u1651:
  4499   002084  EF4C  F010         	goto	l3420
  4500   002088                     u1650:
  4501   002088                     
  4502                           ;mcc_generated_files/timer/src/tmr1.c: 118:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          120:         T1CONbits.TMR1ON = 0;
  4503   002088  90CE               	bcf	206,0,c	;volatile
  4504   00208A                     
  4505                           ;mcc_generated_files/timer/src/tmr1.c: 123:         TMR1H = (uint8_t)(timerVal >> 8);
  4506   00208A  5004               	movf	(TMR1_Write@timerVal+1)^0,w,c
  4507   00208C  6ECD               	movwf	205,c	;volatile
  4508   00208E                     
  4509                           ;mcc_generated_files/timer/src/tmr1.c: 124:         TMR1L = (uint8_t)timerVal;
  4510   00208E  C003  FFCC         	movff	TMR1_Write@timerVal,4044	;volatile
  4511   002092                     
  4512                           ;mcc_generated_files/timer/src/tmr1.c: 127:         T1CONbits.TMR1ON = 1;
  4513   002092  80CE               	bsf	206,0,c	;volatile
  4514                           
  4515                           ;mcc_generated_files/timer/src/tmr1.c: 128:     }
  4516   002094  EF50  F010         	goto	l785
  4517   002098                     l3420:
  4518                           
  4519                           ;mcc_generated_files/timer/src/tmr1.c: 130:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          132:         TMR1H = (uint8_t)(timerVal >> 8);
  4520   002098  5004               	movf	(TMR1_Write@timerVal+1)^0,w,c
  4521   00209A  6ECD               	movwf	205,c	;volatile
  4522   00209C                     
  4523                           ;mcc_generated_files/timer/src/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  4524   00209C  C003  FFCC         	movff	TMR1_Write@timerVal,4044	;volatile
  4525   0020A0                     l785:
  4526   0020A0  0012               	return		;funcret
  4527   0020A2                     __end_of_TMR1_Write:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function _TMR1_HasOverflowOccured *****************
  4531 ;; Defined at:
  4532 ;;		line 169 in file "mcc_generated_files/timer/src/tmr1.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      _Bool 
  4539 ;; Registers used:
  4540 ;;		wreg
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; Hardware stack levels required when called: 3
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_Blink
  4557 ;;		_Timers
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text45
  4562   0021D0                     __ptext45:
  4563                           	callstack 0
  4564   0021D0                     _TMR1_HasOverflowOccured:
  4565                           	callstack 26
  4566   0021D0                     
  4567                           ;mcc_generated_files/timer/src/tmr1.c: 171:     return(PIR4bits.TMR1IF);
  4568   0021D0  010E               	movlb	14	; () banked
  4569   0021D2  B1C9               	btfsc	201,0,b	;volatile
  4570   0021D4  EFEE  F010         	goto	u381
  4571   0021D8  EFF1  F010         	goto	u380
  4572   0021DC                     u381:
  4573   0021DC  0E01               	movlw	1
  4574   0021DE  EFF2  F010         	goto	u386
  4575   0021E2                     u380:
  4576   0021E2  0E00               	movlw	0
  4577   0021E4                     u386:
  4578   0021E4                     
  4579                           ; BSR set to: 14
  4580   0021E4  0012               	return		;funcret
  4581   0021E6                     __end_of_TMR1_HasOverflowOccured:
  4582                           	callstack 0
  4583                           
  4584 ;; *************** function _ADC *****************
  4585 ;; Defined at:
  4586 ;;		line 54 in file "Labs/Lab04_AnalogToDigitalConversion/ADC.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4603 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4604 ;;Total ram usage:        3 bytes
  4605 ;; Hardware stack levels used: 1
  4606 ;; Hardware stack levels required when called: 11
  4607 ;; This function calls:
  4608 ;;		_ADCC_GetSingleConversion
  4609 ;;		_printf
  4610 ;; This function is called by:
  4611 ;;		_main
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text46
  4616   0019AC                     __ptext46:
  4617                           	callstack 0
  4618   0019AC                     _ADC:
  4619                           	callstack 19
  4620   0019AC                     
  4621                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 56:     if (labState == 0) {
  4622   0019AC  505B               	movf	_labState^0,w,c
  4623   0019AE  A4D8               	btfss	status,2,c
  4624   0019B0  EFDC  F00C         	goto	u1791
  4625   0019B4  EFDE  F00C         	goto	u1790
  4626   0019B8                     u1791:
  4627   0019B8  EFE2  F00C         	goto	l3598
  4628   0019BC                     u1790:
  4629   0019BC  0E00               	movlw	0
  4630   0019BE  6E82               	movwf	130,c	;volatile
  4631   0019C0                     
  4632                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 59:         labState = 1;
  4633   0019C0  0E01               	movlw	1
  4634   0019C2  6E5B               	movwf	_labState^0,c
  4635   0019C4                     l3598:
  4636                           
  4637                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 62:     if (labState == 1) {
  4638   0019C4  045B               	decf	_labState^0,w,c
  4639   0019C6  A4D8               	btfss	status,2,c
  4640   0019C8  EFE8  F00C         	goto	u1801
  4641   0019CC  EFEA  F00C         	goto	u1800
  4642   0019D0                     u1801:
  4643   0019D0  EF10  F00D         	goto	l3606
  4644   0019D4                     u1800:
  4645   0019D4                     
  4646                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 64:         adcResult = ADCC_GetSingleConve
      +                          rsion(POT_CHANNEL) >> 12;
  4647   0019D4  0E00               	movlw	0
  4648   0019D6  ECD0  F00F         	call	_ADCC_GetSingleConversion
  4649   0019DA  0E0C               	movlw	12
  4650   0019DC  6E47               	movwf	??_ADC^0,c
  4651   0019DE                     u1815:
  4652   0019DE  90D8               	bcf	status,0,c
  4653   0019E0  3204               	rrcf	(?_ADCC_GetSingleConversion+1)^0,f,c
  4654   0019E2  3203               	rrcf	?_ADCC_GetSingleConversion^0,f,c
  4655   0019E4  2E47               	decfsz	??_ADC^0,f,c
  4656   0019E6  EFEF  F00C         	goto	u1815
  4657   0019EA  5003               	movf	?_ADCC_GetSingleConversion^0,w,c
  4658   0019EC  6E57               	movwf	_adcResult^0,c
  4659   0019EE                     
  4660                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 67:         printf("ADC Result: %d\n\r", AD
      +                          RES >> 6);
  4661   0019EE  0E7F               	movlw	low STR_1
  4662   0019F0  6E41               	movwf	printf@fmt^0,c
  4663   0019F2  0E10               	movlw	high STR_1
  4664   0019F4  6E42               	movwf	(printf@fmt+1)^0,c
  4665   0019F6  CF5E F047          	movff	3934,??_ADC	;volatile
  4666   0019FA  CF5F F048          	movff	3935,??_ADC+1	;volatile
  4667   0019FE  0E06               	movlw	6
  4668   001A00  6E49               	movwf	(??_ADC+2)^0,c
  4669   001A02                     u1825:
  4670   001A02  90D8               	bcf	status,0,c
  4671   001A04  3248               	rrcf	(??_ADC+1)^0,f,c
  4672   001A06  3247               	rrcf	??_ADC^0,f,c
  4673   001A08  2E49               	decfsz	(??_ADC+2)^0,f,c
  4674   001A0A  EF01  F00D         	goto	u1825
  4675   001A0E  C047  F043         	movff	??_ADC,?_printf+2
  4676   001A12  C048  F044         	movff	??_ADC+1,?_printf+3
  4677   001A16  EC51  F010         	call	_printf	;wreg free
  4678   001A1A                     
  4679                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 70:         LATA = (adcResult << 4);
  4680   001A1A  3857               	swapf	_adcResult^0,w,c
  4681   001A1C  0BF0               	andlw	240
  4682   001A1E  6E82               	movwf	130,c	;volatile
  4683   001A20                     l3606:
  4684                           
  4685                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 73:     if (switchEvent) {
  4686   001A20  505C               	movf	_switchEvent^0,w,c
  4687   001A22  B4D8               	btfsc	status,2,c
  4688   001A24  EF16  F00D         	goto	u1831
  4689   001A28  EF18  F00D         	goto	u1830
  4690   001A2C                     u1831:
  4691   001A2C  EF1A  F00D         	goto	l113
  4692   001A30                     u1830:
  4693   001A30                     
  4694                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 74:         labState = 0;
  4695   001A30  0E00               	movlw	0
  4696   001A32  6E5B               	movwf	_labState^0,c
  4697   001A34                     l113:
  4698   001A34  0012               	return		;funcret
  4699   001A36                     __end_of_ADC:
  4700                           	callstack 0
  4701                           
  4702 ;; *************** function _printf *****************
  4703 ;; Defined at:
  4704 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
  4707 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  ap              2   68[COMRAM] PTR void [1]
  4710 ;;		 -> ?_printf(2), 
  4711 ;;  ret             2    0        int 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  2   64[COMRAM] int 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;Total ram usage:        6 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 10
  4728 ;; This function calls:
  4729 ;;		_vfprintf
  4730 ;; This function is called by:
  4731 ;;		_ADC
  4732 ;;		_VSR
  4733 ;;		_PWM
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text47
  4738   0020A2                     __ptext47:
  4739                           	callstack 0
  4740   0020A2                     _printf:
  4741                           	callstack 19
  4742   0020A2  0E43               	movlw	low (?_printf+2)
  4743   0020A4  6E45               	movwf	printf@ap^0,c
  4744   0020A6  0E00               	movlw	high (?_printf+2)
  4745   0020A8  6E46               	movwf	(printf@ap+1)^0,c
  4746   0020AA  0E00               	movlw	0
  4747   0020AC  6E39               	movwf	vfprintf@fp^0,c
  4748   0020AE  0E00               	movlw	0
  4749   0020B0  6E3A               	movwf	(vfprintf@fp+1)^0,c
  4750   0020B2  C041  F03B         	movff	printf@fmt,vfprintf@fmt
  4751   0020B6  C042  F03C         	movff	printf@fmt+1,vfprintf@fmt+1
  4752   0020BA  0E45               	movlw	low printf@ap
  4753   0020BC  6E3D               	movwf	vfprintf@ap^0,c
  4754   0020BE  0E00               	movlw	high printf@ap
  4755   0020C0  6E3E               	movwf	(vfprintf@ap+1)^0,c
  4756   0020C2  EC80  F00E         	call	_vfprintf	;wreg free
  4757   0020C6  0012               	return		;funcret
  4758   0020C8                     __end_of_printf:
  4759                           	callstack 0
  4760                           
  4761 ;; *************** function _vfprintf *****************
  4762 ;; Defined at:
  4763 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
  4766 ;;		 -> NULL(0), 
  4767 ;;  fmt             2   58[COMRAM] PTR const unsigned char 
  4768 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  4769 ;;  ap              2   60[COMRAM] PTR PTR void 
  4770 ;;		 -> printf@ap(2), 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  cfmt            2   62[COMRAM] PTR unsigned char 
  4773 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  2   56[COMRAM] int 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4783 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;Total ram usage:        8 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 9
  4790 ;; This function calls:
  4791 ;;		_vfpfcnvrt
  4792 ;; This function is called by:
  4793 ;;		_printf
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text48
  4798   001D00                     __ptext48:
  4799                           	callstack 0
  4800   001D00                     _vfprintf:
  4801                           	callstack 19
  4802   001D00                     
  4803                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  4804   001D00  C03B  F03F         	movff	vfprintf@fmt,vfprintf@cfmt
  4805   001D04  C03C  F040         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  4808   001D08  EF94  F00E         	goto	l3438
  4809   001D0C                     l3436:
  4810                           
  4811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4812   001D0C  C039  F02B         	movff	vfprintf@fp,vfpfcnvrt@fp
  4813   001D10  C03A  F02C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4814   001D14  0E3F               	movlw	low vfprintf@cfmt
  4815   001D16  6E2D               	movwf	vfpfcnvrt@fmt^0,c
  4816   001D18  0E00               	movlw	high vfprintf@cfmt
  4817   001D1A  6E2E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4818   001D1C  C03D  F02F         	movff	vfprintf@ap,vfpfcnvrt@ap
  4819   001D20  C03E  F030         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4820   001D24  EC13  F009         	call	_vfpfcnvrt	;wreg free
  4821   001D28                     l3438:
  4822                           
  4823                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  4824   001D28  C03F  FFF6         	movff	vfprintf@cfmt,tblptrl
  4825   001D2C  C040  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4826   001D30                     	if	0	;tblptru may be non-zero
  4827   001D30                     	endif
  4828   001D30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4829   001D30  0E00               	movlw	low (__mediumconst shr (0+16))
  4830   001D32  6EF8               	movwf	tblptru,c
  4831   001D34                     	endif
  4832   001D34  0008               	tblrd		*
  4833   001D36  50F5               	movf	tablat,w,c
  4834   001D38  0900               	iorlw	0
  4835   001D3A  A4D8               	btfss	status,2,c
  4836   001D3C  EFA2  F00E         	goto	u1681
  4837   001D40  EFA4  F00E         	goto	u1680
  4838   001D44                     u1681:
  4839   001D44  EF86  F00E         	goto	l3436
  4840   001D48                     u1680:
  4841   001D48                     
  4842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  4843   001D48  0E00               	movlw	0
  4844   001D4A  6E3A               	movwf	(?_vfprintf+1)^0,c
  4845   001D4C  0E00               	movlw	0
  4846   001D4E  6E39               	movwf	?_vfprintf^0,c
  4847   001D50  0012               	return		;funcret
  4848   001D52                     __end_of_vfprintf:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function _vfpfcnvrt *****************
  4852 ;; Defined at:
  4853 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  4856 ;;		 -> NULL(0), 
  4857 ;;  fmt             2   44[COMRAM] PTR PTR unsigned char 
  4858 ;;		 -> vfprintf@cfmt(2), 
  4859 ;;  ap              2   46[COMRAM] PTR PTR void 
  4860 ;;		 -> printf@ap(2), 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  convarg         4   50[COMRAM] struct .
  4863 ;;  cp              2   54[COMRAM] PTR unsigned char 
  4864 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  4865 ;;  i               2    0        int 
  4866 ;;  done            2    0        int 
  4867 ;;  c               1    0        unsigned char 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4877 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4878 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;Total ram usage:       14 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 8
  4884 ;; This function calls:
  4885 ;;		_dtoa
  4886 ;;		_fputc
  4887 ;; This function is called by:
  4888 ;;		_vfprintf
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text49
  4893   001226                     __ptext49:
  4894                           	callstack 0
  4895   001226                     _vfpfcnvrt:
  4896                           	callstack 19
  4897   001226                     
  4898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  4899   001226  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4900   00122A  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4901   00122E  CFDE FFF6          	movff	postinc2,tblptrl
  4902   001232  CFDD FFF7          	movff	postdec2,tblptrh
  4903   001236                     	if	0	;tblptru may be non-zero
  4904   001236                     	endif
  4905   001236                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4906   001236  0E00               	movlw	low (__mediumconst shr (0+16))
  4907   001238  6EF8               	movwf	tblptru,c
  4908   00123A                     	endif
  4909   00123A  0008               	tblrd		*
  4910   00123C  50F5               	movf	tablat,w,c
  4911   00123E  0A25               	xorlw	37
  4912   001240  A4D8               	btfss	status,2,c
  4913   001242  EF25  F009         	goto	u1621
  4914   001246  EF27  F009         	goto	u1620
  4915   00124A                     u1621:
  4916   00124A  EF96  F009         	goto	l3392
  4917   00124E                     u1620:
  4918   00124E                     
  4919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  4920   00124E  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4921   001252  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4922   001256  2ADE               	incf	postinc2,f,c
  4923   001258  0E00               	movlw	0
  4924   00125A  22DD               	addwfc	postdec2,f,c
  4925   00125C                     
  4926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  4927   00125C  0E00               	movlw	0
  4928   00125E  0100               	movlb	0	; () banked
  4929   001260  6F7F               	movwf	(_width+1)& (0+255),b
  4930   001262  0E00               	movlw	0
  4931   001264  6F7E               	movwf	_width& (0+255),b
  4932   001266  C07E  F04E         	movff	_width,_flags
  4933   00126A                     
  4934                           ; BSR set to: 0
  4935                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  4936   00126A  6980               	setf	_prec& (0+255),b
  4937   00126C  6981               	setf	(_prec+1)& (0+255),b
  4938   00126E                     
  4939                           ; BSR set to: 0
  4940                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  4941   00126E  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4942   001272  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4943   001276  CFDE F037          	movff	postinc2,vfpfcnvrt@cp
  4944   00127A  CFDD F038          	movff	postdec2,vfpfcnvrt@cp+1
  4945   00127E                     
  4946                           ; BSR set to: 0
  4947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4948   00127E  C037  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4949   001282  C038  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4950   001286                     	if	0	;tblptru may be non-zero
  4951   001286                     	endif
  4952   001286                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4953   001286  0E00               	movlw	low (__mediumconst shr (0+16))
  4954   001288  6EF8               	movwf	tblptru,c
  4955   00128A                     	endif
  4956   00128A  0008               	tblrd		*
  4957   00128C  50F5               	movf	tablat,w,c
  4958   00128E  0A64               	xorlw	100
  4959   001290  B4D8               	btfsc	status,2,c
  4960   001292  EF4D  F009         	goto	u1631
  4961   001296  EF4F  F009         	goto	u1630
  4962   00129A                     u1631:
  4963   00129A  EF5F  F009         	goto	l3382
  4964   00129E                     u1630:
  4965   00129E                     
  4966                           ; BSR set to: 0
  4967   00129E  C037  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4968   0012A2  C038  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4969   0012A6                     	if	0	;tblptru may be non-zero
  4970   0012A6                     	endif
  4971   0012A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4972   0012A6  0E00               	movlw	low (__mediumconst shr (0+16))
  4973   0012A8  6EF8               	movwf	tblptru,c
  4974   0012AA                     	endif
  4975   0012AA  0008               	tblrd		*
  4976   0012AC  50F5               	movf	tablat,w,c
  4977   0012AE  0A69               	xorlw	105
  4978   0012B0  A4D8               	btfss	status,2,c
  4979   0012B2  EF5D  F009         	goto	u1641
  4980   0012B6  EF5F  F009         	goto	u1640
  4981   0012BA                     u1641:
  4982   0012BA  EF8D  F009         	goto	l3388
  4983   0012BE                     u1640:
  4984   0012BE                     l3382:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4988   0012BE  C02F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4989   0012C2  C030  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4990   0012C6  CFDF F031          	movff	indf2,??_vfpfcnvrt
  4991   0012CA  0E02               	movlw	2
  4992   0012CC  26DE               	addwf	postinc2,f,c
  4993   0012CE  CFDF F032          	movff	indf2,??_vfpfcnvrt+1
  4994   0012D2  0E00               	movlw	0
  4995   0012D4  22DD               	addwfc	postdec2,f,c
  4996   0012D6  C031  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4997   0012DA  C032  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4998   0012DE  CFDE F033          	movff	postinc2,vfpfcnvrt@convarg
  4999   0012E2  CFDD F034          	movff	postdec2,vfpfcnvrt@convarg+1
  5000                           
  5001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  5002   0012E6  0E01               	movlw	1
  5003   0012E8  2437               	addwf	vfpfcnvrt@cp^0,w,c
  5004   0012EA  6E31               	movwf	??_vfpfcnvrt^0,c
  5005   0012EC  0E00               	movlw	0
  5006   0012EE  2038               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  5007   0012F0  6E32               	movwf	(??_vfpfcnvrt+1)^0,c
  5008   0012F2  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5009   0012F6  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5010   0012FA  C031  FFDE         	movff	??_vfpfcnvrt,postinc2
  5011   0012FE  C032  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5012   001302                     
  5013                           ; BSR set to: 0
  5014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5015   001302  C02B  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  5016   001306  C02C  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5017   00130A  C033  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  5018   00130E  C034  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5019   001312  EC49  F008         	call	_dtoa	;wreg free
  5020   001316  EFAC  F009         	goto	l2002
  5021   00131A                     l3388:
  5022                           
  5023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  5024   00131A  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5025   00131E  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5026   001322  2ADE               	incf	postinc2,f,c
  5027   001324  0E00               	movlw	0
  5028   001326  22DD               	addwfc	postdec2,f,c
  5029   001328  EFAC  F009         	goto	l2002
  5030   00132C                     l3392:
  5031                           
  5032                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  5033   00132C  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5034   001330  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5035   001334  CFDE FFF6          	movff	postinc2,tblptrl
  5036   001338  CFDD FFF7          	movff	postdec2,tblptrh
  5037   00133C                     	if	0	;tblptru may be non-zero
  5038   00133C                     	endif
  5039   00133C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5040   00133C  0E00               	movlw	low (__mediumconst shr (0+16))
  5041   00133E  6EF8               	movwf	tblptru,c
  5042   001340                     	endif
  5043   001340  0008               	tblrd		*
  5044   001342  50F5               	movf	tablat,w,c
  5045   001344  6E03               	movwf	fputc@c^0,c
  5046   001346  6A04               	clrf	(fputc@c+1)^0,c
  5047   001348  C02B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  5048   00134C  C02C  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5049   001350  EC20  F00A         	call	_fputc	;wreg free
  5050   001354  EF8D  F009         	goto	l3388
  5051   001358                     l2002:
  5052   001358  0012               	return		;funcret
  5053   00135A                     __end_of_vfpfcnvrt:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _dtoa *****************
  5057 ;; Defined at:
  5058 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5061 ;;		 -> NULL(0), 
  5062 ;;  d               2   31[COMRAM] int 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  i               2   39[COMRAM] int 
  5065 ;;  w               2   37[COMRAM] int 
  5066 ;;  p               2   35[COMRAM] int 
  5067 ;;  s               1   41[COMRAM] unsigned char 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5078 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5080 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5081 ;;Total ram usage:       13 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; Hardware stack levels required when called: 7
  5084 ;; This function calls:
  5085 ;;		___awdiv
  5086 ;;		___awmod
  5087 ;;		_abs
  5088 ;;		_pad
  5089 ;; This function is called by:
  5090 ;;		_vfpfcnvrt
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text50
  5095   001092                     __ptext50:
  5096                           	callstack 0
  5097   001092                     _dtoa:
  5098                           	callstack 19
  5099   001092                     
  5100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  5101   001092  BE21               	btfsc	(dtoa@d+1)^0,7,c
  5102   001094  EF4E  F008         	goto	u1521
  5103   001098  EF51  F008         	goto	u1520
  5104   00109C                     u1521:
  5105   00109C  0E01               	movlw	1
  5106   00109E  EF52  F008         	goto	u1530
  5107   0010A2                     u1520:
  5108   0010A2  0E00               	movlw	0
  5109   0010A4                     u1530:
  5110   0010A4  6E2A               	movwf	dtoa@s^0,c
  5111   0010A6                     
  5112                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  5113   0010A6  502A               	movf	dtoa@s^0,w,c
  5114   0010A8  B4D8               	btfsc	status,2,c
  5115   0010AA  EF59  F008         	goto	u1541
  5116   0010AE  EF5B  F008         	goto	u1540
  5117   0010B2                     u1541:
  5118   0010B2  EF5F  F008         	goto	l3324
  5119   0010B6                     u1540:
  5120   0010B6                     
  5121                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  5122   0010B6  6C20               	negf	dtoa@d^0,c
  5123   0010B8  1E21               	comf	(dtoa@d+1)^0,f,c
  5124   0010BA  B0D8               	btfsc	status,0,c
  5125   0010BC  2A21               	incf	(dtoa@d+1)^0,f,c
  5126   0010BE                     l3324:
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  5129   0010BE  0100               	movlb	0	; () banked
  5130   0010C0  BF81               	btfsc	(_prec+1)& (0+255),7,b
  5131   0010C2  EF67  F008         	goto	u1550
  5132   0010C6  EF65  F008         	goto	u1551
  5133   0010CA                     u1551:
  5134   0010CA  EF6D  F008         	goto	l1981
  5135   0010CE                     u1550:
  5136   0010CE                     
  5137                           ; BSR set to: 0
  5138   0010CE  0E00               	movlw	0
  5139   0010D0  6E25               	movwf	(dtoa@p+1)^0,c
  5140   0010D2  0E01               	movlw	1
  5141   0010D4  6E24               	movwf	dtoa@p^0,c
  5142   0010D6  EF71  F008         	goto	l1983
  5143   0010DA                     l1981:
  5144                           
  5145                           ; BSR set to: 0
  5146   0010DA  C080  F024         	movff	_prec,dtoa@p
  5147   0010DE  C081  F025         	movff	_prec+1,dtoa@p+1
  5148   0010E2                     l1983:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  5152   0010E2  C07E  F026         	movff	_width,dtoa@w
  5153   0010E6  C07F  F027         	movff	_width+1,dtoa@w+1
  5154   0010EA                     
  5155                           ; BSR set to: 0
  5156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  5157   0010EA  502A               	movf	dtoa@s^0,w,c
  5158   0010EC  B4D8               	btfsc	status,2,c
  5159   0010EE  EF7B  F008         	goto	u1561
  5160   0010F2  EF7D  F008         	goto	u1560
  5161   0010F6                     u1561:
  5162   0010F6  EF94  F008         	goto	l1984
  5163   0010FA                     u1560:
  5164   0010FA                     
  5165                           ; BSR set to: 0
  5166                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  5167   0010FA  0626               	decf	dtoa@w^0,f,c
  5168   0010FC  A0D8               	btfss	status,0,c
  5169   0010FE  0627               	decf	(dtoa@w+1)^0,f,c
  5170   001100                     
  5171                           ; BSR set to: 0
  5172                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  5173   001100  502A               	movf	dtoa@s^0,w,c
  5174   001102  A4D8               	btfss	status,2,c
  5175   001104  EF86  F008         	goto	u1571
  5176   001108  EF88  F008         	goto	u1570
  5177   00110C                     u1571:
  5178   00110C  EF8E  F008         	goto	l3336
  5179   001110                     u1570:
  5180   001110                     
  5181                           ; BSR set to: 0
  5182   001110  0E00               	movlw	0
  5183   001112  6E23               	movwf	(_dtoa$2783+1)^0,c
  5184   001114  0E2B               	movlw	43
  5185   001116  6E22               	movwf	_dtoa$2783^0,c
  5186   001118  EF92  F008         	goto	l3338
  5187   00111C                     l3336:
  5188                           
  5189                           ; BSR set to: 0
  5190   00111C  0E00               	movlw	0
  5191   00111E  6E23               	movwf	(_dtoa$2783+1)^0,c
  5192   001120  0E2D               	movlw	45
  5193   001122  6E22               	movwf	_dtoa$2783^0,c
  5194   001124                     l3338:
  5195                           
  5196                           ; BSR set to: 0
  5197   001124  C022  F02A         	movff	_dtoa$2783,dtoa@s
  5198   001128                     l1984:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  5202   001128  0E00               	movlw	0
  5203   00112A  6E29               	movwf	(dtoa@i+1)^0,c
  5204   00112C  0E1F               	movlw	31
  5205   00112E  6E28               	movwf	dtoa@i^0,c
  5206   001130                     
  5207                           ; BSR set to: 0
  5208                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  5209   001130  0E00               	movlw	0
  5210   001132  6FA5               	movwf	(_dbuf+31)& (0+255),b
  5211                           
  5212                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5213   001134  EFCC  F008         	goto	l3352
  5214   001138                     l3342:
  5215                           
  5216                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  5217   001138  0628               	decf	dtoa@i^0,f,c
  5218   00113A  A0D8               	btfss	status,0,c
  5219   00113C  0629               	decf	(dtoa@i+1)^0,f,c
  5220   00113E                     
  5221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5222   00113E  0E86               	movlw	low _dbuf
  5223   001140  2428               	addwf	dtoa@i^0,w,c
  5224   001142  6ED9               	movwf	fsr2l,c
  5225   001144  0E00               	movlw	high _dbuf
  5226   001146  2029               	addwfc	(dtoa@i+1)^0,w,c
  5227   001148  6EDA               	movwf	fsr2h,c
  5228   00114A  C020  F003         	movff	dtoa@d,___awmod@dividend
  5229   00114E  C021  F004         	movff	dtoa@d+1,___awmod@dividend+1
  5230   001152  0E00               	movlw	0
  5231   001154  6E06               	movwf	(___awmod@divisor+1)^0,c
  5232   001156  0E0A               	movlw	10
  5233   001158  6E05               	movwf	___awmod@divisor^0,c
  5234   00115A  ECA2  F00B         	call	___awmod	;wreg free
  5235   00115E  C003  F009         	movff	?___awmod,abs@a
  5236   001162  C004  F00A         	movff	?___awmod+1,abs@a+1
  5237   001166  EC7B  F00F         	call	_abs	;wreg free
  5238   00116A  5009               	movf	?_abs^0,w,c
  5239   00116C  0F30               	addlw	48
  5240   00116E  6EDF               	movwf	indf2,c
  5241   001170                     
  5242                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  5243   001170  0624               	decf	dtoa@p^0,f,c
  5244   001172  A0D8               	btfss	status,0,c
  5245   001174  0625               	decf	(dtoa@p+1)^0,f,c
  5246   001176                     
  5247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  5248   001176  0626               	decf	dtoa@w^0,f,c
  5249   001178  A0D8               	btfss	status,0,c
  5250   00117A  0627               	decf	(dtoa@w+1)^0,f,c
  5251   00117C                     
  5252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  5253   00117C  C020  F003         	movff	dtoa@d,___awdiv@dividend
  5254   001180  C021  F004         	movff	dtoa@d+1,___awdiv@dividend+1
  5255   001184  0E00               	movlw	0
  5256   001186  6E06               	movwf	(___awdiv@divisor+1)^0,c
  5257   001188  0E0A               	movlw	10
  5258   00118A  6E05               	movwf	___awdiv@divisor^0,c
  5259   00118C  EC85  F00A         	call	___awdiv	;wreg free
  5260   001190  C003  F020         	movff	?___awdiv,dtoa@d
  5261   001194  C004  F021         	movff	?___awdiv+1,dtoa@d+1
  5262   001198                     l3352:
  5263                           
  5264                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5265   001198  BE29               	btfsc	(dtoa@i+1)^0,7,c
  5266   00119A  EFD7  F008         	goto	u1581
  5267   00119E  5029               	movf	(dtoa@i+1)^0,w,c
  5268   0011A0  E108               	bnz	u1580
  5269   0011A2  0428               	decf	dtoa@i^0,w,c
  5270   0011A4  A0D8               	btfss	status,0,c
  5271   0011A6  EFD7  F008         	goto	u1581
  5272   0011AA  EFD9  F008         	goto	u1580
  5273   0011AE                     u1581:
  5274   0011AE  EFEF  F008         	goto	l3358
  5275   0011B2                     u1580:
  5276   0011B2  5020               	movf	dtoa@d^0,w,c
  5277   0011B4  1021               	iorwf	(dtoa@d+1)^0,w,c
  5278   0011B6  A4D8               	btfss	status,2,c
  5279   0011B8  EFE0  F008         	goto	u1591
  5280   0011BC  EFE2  F008         	goto	u1590
  5281   0011C0                     u1591:
  5282   0011C0  EF9C  F008         	goto	l3342
  5283   0011C4                     u1590:
  5284   0011C4  BE25               	btfsc	(dtoa@p+1)^0,7,c
  5285   0011C6  EFEF  F008         	goto	u1600
  5286   0011CA  5025               	movf	(dtoa@p+1)^0,w,c
  5287   0011CC  E106               	bnz	u1601
  5288   0011CE  0424               	decf	dtoa@p^0,w,c
  5289   0011D0  B0D8               	btfsc	status,0,c
  5290   0011D2  EFED  F008         	goto	u1601
  5291   0011D6  EFEF  F008         	goto	u1600
  5292   0011DA                     u1601:
  5293   0011DA  EF9C  F008         	goto	l3342
  5294   0011DE                     u1600:
  5295   0011DE                     l3358:
  5296                           
  5297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  5298   0011DE  502A               	movf	dtoa@s^0,w,c
  5299   0011E0  B4D8               	btfsc	status,2,c
  5300   0011E2  EFF5  F008         	goto	u1611
  5301   0011E6  EFF7  F008         	goto	u1610
  5302   0011EA                     u1611:
  5303   0011EA  EF02  F009         	goto	l3364
  5304   0011EE                     u1610:
  5305   0011EE                     
  5306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  5307   0011EE  0628               	decf	dtoa@i^0,f,c
  5308   0011F0  A0D8               	btfss	status,0,c
  5309   0011F2  0629               	decf	(dtoa@i+1)^0,f,c
  5310   0011F4                     
  5311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  5312   0011F4  0E86               	movlw	low _dbuf
  5313   0011F6  2428               	addwf	dtoa@i^0,w,c
  5314   0011F8  6ED9               	movwf	fsr2l,c
  5315   0011FA  0E00               	movlw	high _dbuf
  5316   0011FC  2029               	addwfc	(dtoa@i+1)^0,w,c
  5317   0011FE  6EDA               	movwf	fsr2h,c
  5318   001200  C02A  FFDF         	movff	dtoa@s,indf2
  5319   001204                     l3364:
  5320                           
  5321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5322   001204  C01E  F013         	movff	dtoa@fp,pad@fp
  5323   001208  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5324   00120C  0E86               	movlw	low _dbuf
  5325   00120E  2428               	addwf	dtoa@i^0,w,c
  5326   001210  6E15               	movwf	pad@buf^0,c
  5327   001212  0E00               	movlw	high _dbuf
  5328   001214  2029               	addwfc	(dtoa@i+1)^0,w,c
  5329   001216  6E16               	movwf	(pad@buf+1)^0,c
  5330   001218  C026  F017         	movff	dtoa@w,pad@p
  5331   00121C  C027  F018         	movff	dtoa@w+1,pad@p+1
  5332   001220  EC5F  F00D         	call	_pad	;wreg free
  5333   001224  0012               	return		;funcret
  5334   001226                     __end_of_dtoa:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _pad *****************
  5338 ;; Defined at:
  5339 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5342 ;;		 -> NULL(0), 
  5343 ;;  buf             2   20[COMRAM] PTR unsigned char 
  5344 ;;		 -> dbuf(32), 
  5345 ;;  p               2   22[COMRAM] int 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  w               2   27[COMRAM] int 
  5348 ;;  i               2   25[COMRAM] int 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5361 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5362 ;;Total ram usage:       11 bytes
  5363 ;; Hardware stack levels used: 1
  5364 ;; Hardware stack levels required when called: 6
  5365 ;; This function calls:
  5366 ;;		_fputc
  5367 ;;		_fputs
  5368 ;; This function is called by:
  5369 ;;		_dtoa
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text51
  5374   001ABE                     __ptext51:
  5375                           	callstack 0
  5376   001ABE                     _pad:
  5377                           	callstack 19
  5378   001ABE                     
  5379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  5380   001ABE  BE18               	btfsc	(pad@p+1)^0,7,c
  5381   001AC0  EF64  F00D         	goto	u1491
  5382   001AC4  EF66  F00D         	goto	u1490
  5383   001AC8                     u1491:
  5384   001AC8  EF6C  F00D         	goto	l3304
  5385   001ACC                     u1490:
  5386   001ACC  C017  F01C         	movff	pad@p,pad@w
  5387   001AD0  C018  F01D         	movff	pad@p+1,pad@w+1
  5388   001AD4  EF70  F00D         	goto	l1972
  5389   001AD8                     l3304:
  5390   001AD8  0E00               	movlw	0
  5391   001ADA  6E1D               	movwf	(pad@w+1)^0,c
  5392   001ADC  0E00               	movlw	0
  5393   001ADE  6E1C               	movwf	pad@w^0,c
  5394   001AE0                     l1972:
  5395                           
  5396                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  5397   001AE0  0E00               	movlw	0
  5398   001AE2  6E1B               	movwf	(pad@i+1)^0,c
  5399   001AE4  0E00               	movlw	0
  5400   001AE6  6E1A               	movwf	pad@i^0,c
  5401                           
  5402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  5403   001AE8  EF82  F00D         	goto	l3310
  5404   001AEC                     l3306:
  5405                           
  5406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  5407   001AEC  0E00               	movlw	0
  5408   001AEE  6E04               	movwf	(fputc@c+1)^0,c
  5409   001AF0  0E20               	movlw	32
  5410   001AF2  6E03               	movwf	fputc@c^0,c
  5411   001AF4  C013  F005         	movff	pad@fp,fputc@fp
  5412   001AF8  C014  F006         	movff	pad@fp+1,fputc@fp+1
  5413   001AFC  EC20  F00A         	call	_fputc	;wreg free
  5414   001B00                     
  5415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  5416   001B00  4A1A               	infsnz	pad@i^0,f,c
  5417   001B02  2A1B               	incf	(pad@i+1)^0,f,c
  5418   001B04                     l3310:
  5419                           
  5420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  5421   001B04  501C               	movf	pad@w^0,w,c
  5422   001B06  5C1A               	subwf	pad@i^0,w,c
  5423   001B08  501B               	movf	(pad@i+1)^0,w,c
  5424   001B0A  0A80               	xorlw	128
  5425   001B0C  6E19               	movwf	??_pad^0,c
  5426   001B0E  501D               	movf	(pad@w+1)^0,w,c
  5427   001B10  0A80               	xorlw	128
  5428   001B12  5819               	subwfb	??_pad^0,w,c
  5429   001B14  A0D8               	btfss	status,0,c
  5430   001B16  EF8F  F00D         	goto	u1501
  5431   001B1A  EF91  F00D         	goto	u1500
  5432   001B1E                     u1501:
  5433   001B1E  EF76  F00D         	goto	l3306
  5434   001B22                     u1500:
  5435   001B22                     
  5436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  5437   001B22  C015  F00C         	movff	pad@buf,fputs@s
  5438   001B26  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5439   001B2A  C013  F00E         	movff	pad@fp,fputs@fp
  5440   001B2E  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5441   001B32  EC19  F00F         	call	_fputs	;wreg free
  5442   001B36  0012               	return		;funcret
  5443   001B38                     __end_of_pad:
  5444                           	callstack 0
  5445                           
  5446 ;; *************** function _fputs *****************
  5447 ;; Defined at:
  5448 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5451 ;;		 -> dbuf(32), 
  5452 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  5453 ;;		 -> NULL(0), 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  i               2   16[COMRAM] int 
  5456 ;;  c               1   15[COMRAM] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  2   11[COMRAM] int 
  5459 ;; Registers used:
  5460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;Total ram usage:        7 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; Hardware stack levels required when called: 5
  5473 ;; This function calls:
  5474 ;;		_fputc
  5475 ;; This function is called by:
  5476 ;;		_pad
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text52
  5481   001E32                     __ptext52:
  5482                           	callstack 0
  5483   001E32                     _fputs:
  5484                           	callstack 19
  5485   001E32  0E00               	movlw	0
  5486   001E34  6E12               	movwf	(fputs@i+1)^0,c
  5487   001E36  0E00               	movlw	0
  5488   001E38  6E11               	movwf	fputs@i^0,c
  5489   001E3A  EF2A  F00F         	goto	l3218
  5490   001E3E                     l3214:
  5491   001E3E  C010  F003         	movff	fputs@c,fputc@c
  5492   001E42  6A04               	clrf	(fputc@c+1)^0,c
  5493   001E44  C00E  F005         	movff	fputs@fp,fputc@fp
  5494   001E48  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  5495   001E4C  EC20  F00A         	call	_fputc	;wreg free
  5496   001E50  4A11               	infsnz	fputs@i^0,f,c
  5497   001E52  2A12               	incf	(fputs@i+1)^0,f,c
  5498   001E54                     l3218:
  5499   001E54  5011               	movf	fputs@i^0,w,c
  5500   001E56  240C               	addwf	fputs@s^0,w,c
  5501   001E58  6ED9               	movwf	fsr2l,c
  5502   001E5A  5012               	movf	(fputs@i+1)^0,w,c
  5503   001E5C  200D               	addwfc	(fputs@s+1)^0,w,c
  5504   001E5E  6EDA               	movwf	fsr2h,c
  5505   001E60  50DF               	movf	indf2,w,c
  5506   001E62  6E10               	movwf	fputs@c^0,c
  5507   001E64  5010               	movf	fputs@c^0,w,c
  5508   001E66  A4D8               	btfss	status,2,c
  5509   001E68  EF38  F00F         	goto	u1361
  5510   001E6C  EF3A  F00F         	goto	u1360
  5511   001E70                     u1361:
  5512   001E70  EF1F  F00F         	goto	l3214
  5513   001E74                     u1360:
  5514   001E74  0012               	return		;funcret
  5515   001E76                     __end_of_fputs:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function _fputc *****************
  5519 ;; Defined at:
  5520 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  c               2    2[COMRAM] int 
  5523 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  5524 ;;		 -> NULL(0), 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  2    2[COMRAM] int 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;Total ram usage:        9 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 4
  5543 ;; This function calls:
  5544 ;;		_putch
  5545 ;; This function is called by:
  5546 ;;		_pad
  5547 ;;		_vfpfcnvrt
  5548 ;;		_fputs
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text53
  5553   001440                     __ptext53:
  5554                           	callstack 0
  5555   001440                     _fputc:
  5556                           	callstack 22
  5557   001440  5005               	movf	fputc@fp^0,w,c
  5558   001442  1006               	iorwf	(fputc@fp+1)^0,w,c
  5559   001444  B4D8               	btfsc	status,2,c
  5560   001446  EF27  F00A         	goto	u1321
  5561   00144A  EF29  F00A         	goto	u1320
  5562   00144E                     u1321:
  5563   00144E  EF32  F00A         	goto	l3202
  5564   001452                     u1320:
  5565   001452  5005               	movf	fputc@fp^0,w,c
  5566   001454  1006               	iorwf	(fputc@fp+1)^0,w,c
  5567   001456  A4D8               	btfss	status,2,c
  5568   001458  EF30  F00A         	goto	u1331
  5569   00145C  EF32  F00A         	goto	u1330
  5570   001460                     u1331:
  5571   001460  EF37  F00A         	goto	l3204
  5572   001464                     u1330:
  5573   001464                     l3202:
  5574   001464  5003               	movf	fputc@c^0,w,c
  5575   001466  EC3D  F011         	call	_putch
  5576   00146A  EF84  F00A         	goto	l2027
  5577   00146E                     l3204:
  5578   00146E  EE20 F00A          	lfsr	2,10
  5579   001472  5005               	movf	fputc@fp^0,w,c
  5580   001474  26D9               	addwf	fsr2l,f,c
  5581   001476  5006               	movf	(fputc@fp+1)^0,w,c
  5582   001478  22DA               	addwfc	fsr2h,f,c
  5583   00147A  50DE               	movf	postinc2,w,c
  5584   00147C  10DE               	iorwf	postinc2,w,c
  5585   00147E  B4D8               	btfsc	status,2,c
  5586   001480  EF44  F00A         	goto	u1341
  5587   001484  EF46  F00A         	goto	u1340
  5588   001488                     u1341:
  5589   001488  EF61  F00A         	goto	l3208
  5590   00148C                     u1340:
  5591   00148C  EE20 F00A          	lfsr	2,10
  5592   001490  5005               	movf	fputc@fp^0,w,c
  5593   001492  26D9               	addwf	fsr2l,f,c
  5594   001494  5006               	movf	(fputc@fp+1)^0,w,c
  5595   001496  22DA               	addwfc	fsr2h,f,c
  5596   001498  EE10 F003          	lfsr	1,3
  5597   00149C  5005               	movf	fputc@fp^0,w,c
  5598   00149E  26E1               	addwf	fsr1l,f,c
  5599   0014A0  5006               	movf	(fputc@fp+1)^0,w,c
  5600   0014A2  22E2               	addwfc	fsr1h,f,c
  5601   0014A4  50DE               	movf	postinc2,w,c
  5602   0014A6  5CE6               	subwf	postinc1,w,c
  5603   0014A8  50E6               	movf	postinc1,w,c
  5604   0014AA  0A80               	xorlw	128
  5605   0014AC  6E0B               	movwf	(??_fputc+4)^0,c
  5606   0014AE  50DE               	movf	postinc2,w,c
  5607   0014B0  0A80               	xorlw	128
  5608   0014B2  580B               	subwfb	(??_fputc+4)^0,w,c
  5609   0014B4  B0D8               	btfsc	status,0,c
  5610   0014B6  EF5F  F00A         	goto	u1351
  5611   0014BA  EF61  F00A         	goto	u1350
  5612   0014BE                     u1351:
  5613   0014BE  EF84  F00A         	goto	l2027
  5614   0014C2                     u1350:
  5615   0014C2                     l3208:
  5616   0014C2  EE20 F003          	lfsr	2,3
  5617   0014C6  5005               	movf	fputc@fp^0,w,c
  5618   0014C8  26D9               	addwf	fsr2l,f,c
  5619   0014CA  5006               	movf	(fputc@fp+1)^0,w,c
  5620   0014CC  22DA               	addwfc	fsr2h,f,c
  5621   0014CE  CFDE F007          	movff	postinc2,??_fputc
  5622   0014D2  CFDD F008          	movff	postdec2,??_fputc+1
  5623   0014D6  C005  FFD9         	movff	fputc@fp,fsr2l
  5624   0014DA  C006  FFDA         	movff	fputc@fp+1,fsr2h
  5625   0014DE  CFDE F009          	movff	postinc2,??_fputc+2
  5626   0014E2  CFDD F00A          	movff	postdec2,??_fputc+3
  5627   0014E6  5007               	movf	??_fputc^0,w,c
  5628   0014E8  2409               	addwf	(??_fputc+2)^0,w,c
  5629   0014EA  6ED9               	movwf	fsr2l,c
  5630   0014EC  5008               	movf	(??_fputc+1)^0,w,c
  5631   0014EE  200A               	addwfc	(??_fputc+3)^0,w,c
  5632   0014F0  6EDA               	movwf	fsr2h,c
  5633   0014F2  C003  FFDF         	movff	fputc@c,indf2
  5634   0014F6  EE20 F003          	lfsr	2,3
  5635   0014FA  5005               	movf	fputc@fp^0,w,c
  5636   0014FC  26D9               	addwf	fsr2l,f,c
  5637   0014FE  5006               	movf	(fputc@fp+1)^0,w,c
  5638   001500  22DA               	addwfc	fsr2h,f,c
  5639   001502  2ADE               	incf	postinc2,f,c
  5640   001504  0E00               	movlw	0
  5641   001506  22DD               	addwfc	postdec2,f,c
  5642   001508                     l2027:
  5643   001508  0012               	return		;funcret
  5644   00150A                     __end_of_fputc:
  5645                           	callstack 0
  5646                           
  5647 ;; *************** function _putch *****************
  5648 ;; Defined at:
  5649 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  c               1    wreg     unsigned char 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  c               1    0[COMRAM] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used: 1
  5669 ;; Hardware stack levels required when called: 3
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_fputc
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text54
  5678   00227A                     __ptext54:
  5679                           	callstack 0
  5680   00227A                     _putch:
  5681                           	callstack 22
  5682   00227A  0012               	return		;funcret
  5683   00227C                     __end_of_putch:
  5684                           	callstack 0
  5685                           
  5686 ;; *************** function _abs *****************
  5687 ;; Defined at:
  5688 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  a               2    8[COMRAM] int 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  2    8[COMRAM] int 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;Total ram usage:        4 bytes
  5707 ;; Hardware stack levels used: 1
  5708 ;; Hardware stack levels required when called: 3
  5709 ;; This function calls:
  5710 ;;		Nothing
  5711 ;; This function is called by:
  5712 ;;		_dtoa
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text55
  5717   001EF6                     __ptext55:
  5718                           	callstack 0
  5719   001EF6                     _abs:
  5720                           	callstack 22
  5721   001EF6  BE0A               	btfsc	(abs@a+1)^0,7,c
  5722   001EF8  EF88  F00F         	goto	u1510
  5723   001EFC  500A               	movf	(abs@a+1)^0,w,c
  5724   001EFE  E106               	bnz	u1511
  5725   001F00  0409               	decf	abs@a^0,w,c
  5726   001F02  B0D8               	btfsc	status,0,c
  5727   001F04  EF86  F00F         	goto	u1511
  5728   001F08  EF88  F00F         	goto	u1510
  5729   001F0C                     u1511:
  5730   001F0C  EF96  F00F         	goto	l2012
  5731   001F10                     u1510:
  5732   001F10  C009  F00B         	movff	abs@a,??_abs
  5733   001F14  C00A  F00C         	movff	abs@a+1,??_abs+1
  5734   001F18  1E0B               	comf	??_abs^0,f,c
  5735   001F1A  1E0C               	comf	(??_abs+1)^0,f,c
  5736   001F1C  4A0B               	infsnz	??_abs^0,f,c
  5737   001F1E  2A0C               	incf	(??_abs+1)^0,f,c
  5738   001F20  C00B  F009         	movff	??_abs,?_abs
  5739   001F24  C00C  F00A         	movff	??_abs+1,?_abs+1
  5740   001F28  EF9A  F00F         	goto	l2015
  5741   001F2C                     l2012:
  5742   001F2C  C009  F009         	movff	abs@a,?_abs
  5743   001F30  C00A  F00A         	movff	abs@a+1,?_abs+1
  5744   001F34                     l2015:
  5745   001F34  0012               	return		;funcret
  5746   001F36                     __end_of_abs:
  5747                           	callstack 0
  5748                           
  5749 ;; *************** function ___awmod *****************
  5750 ;; Defined at:
  5751 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  dividend        2    2[COMRAM] int 
  5754 ;;  divisor         2    4[COMRAM] int 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  sign            1    7[COMRAM] unsigned char 
  5757 ;;  counter         1    6[COMRAM] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  2    2[COMRAM] int 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5771 ;;Total ram usage:        6 bytes
  5772 ;; Hardware stack levels used: 1
  5773 ;; Hardware stack levels required when called: 3
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_dtoa
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text56
  5782   001744                     __ptext56:
  5783                           	callstack 0
  5784   001744                     ___awmod:
  5785                           	callstack 22
  5786   001744  0E00               	movlw	0
  5787   001746  6E08               	movwf	___awmod@sign^0,c
  5788   001748  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  5789   00174A  EFAB  F00B         	goto	u1430
  5790   00174E  EFA9  F00B         	goto	u1431
  5791   001752                     u1431:
  5792   001752  EFB1  F00B         	goto	l3272
  5793   001756                     u1430:
  5794   001756  6C03               	negf	___awmod@dividend^0,c
  5795   001758  1E04               	comf	(___awmod@dividend+1)^0,f,c
  5796   00175A  B0D8               	btfsc	status,0,c
  5797   00175C  2A04               	incf	(___awmod@dividend+1)^0,f,c
  5798   00175E  0E01               	movlw	1
  5799   001760  6E08               	movwf	___awmod@sign^0,c
  5800   001762                     l3272:
  5801   001762  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  5802   001764  EFB8  F00B         	goto	u1440
  5803   001768  EFB6  F00B         	goto	u1441
  5804   00176C                     u1441:
  5805   00176C  EFBC  F00B         	goto	l3276
  5806   001770                     u1440:
  5807   001770  6C05               	negf	___awmod@divisor^0,c
  5808   001772  1E06               	comf	(___awmod@divisor+1)^0,f,c
  5809   001774  B0D8               	btfsc	status,0,c
  5810   001776  2A06               	incf	(___awmod@divisor+1)^0,f,c
  5811   001778                     l3276:
  5812   001778  5005               	movf	___awmod@divisor^0,w,c
  5813   00177A  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  5814   00177C  B4D8               	btfsc	status,2,c
  5815   00177E  EFC3  F00B         	goto	u1451
  5816   001782  EFC5  F00B         	goto	u1450
  5817   001786                     u1451:
  5818   001786  EFE9  F00B         	goto	l3292
  5819   00178A                     u1450:
  5820   00178A  0E01               	movlw	1
  5821   00178C  6E07               	movwf	___awmod@counter^0,c
  5822   00178E  EFCD  F00B         	goto	l3282
  5823   001792                     l3280:
  5824   001792  90D8               	bcf	status,0,c
  5825   001794  3605               	rlcf	___awmod@divisor^0,f,c
  5826   001796  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  5827   001798  2A07               	incf	___awmod@counter^0,f,c
  5828   00179A                     l3282:
  5829   00179A  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  5830   00179C  EFD2  F00B         	goto	u1461
  5831   0017A0  EFD4  F00B         	goto	u1460
  5832   0017A4                     u1461:
  5833   0017A4  EFC9  F00B         	goto	l3280
  5834   0017A8                     u1460:
  5835   0017A8                     l3284:
  5836   0017A8  5005               	movf	___awmod@divisor^0,w,c
  5837   0017AA  5C03               	subwf	___awmod@dividend^0,w,c
  5838   0017AC  5006               	movf	(___awmod@divisor+1)^0,w,c
  5839   0017AE  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  5840   0017B0  A0D8               	btfss	status,0,c
  5841   0017B2  EFDD  F00B         	goto	u1471
  5842   0017B6  EFDF  F00B         	goto	u1470
  5843   0017BA                     u1471:
  5844   0017BA  EFE3  F00B         	goto	l3288
  5845   0017BE                     u1470:
  5846   0017BE  5005               	movf	___awmod@divisor^0,w,c
  5847   0017C0  5E03               	subwf	___awmod@dividend^0,f,c
  5848   0017C2  5006               	movf	(___awmod@divisor+1)^0,w,c
  5849   0017C4  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  5850   0017C6                     l3288:
  5851   0017C6  90D8               	bcf	status,0,c
  5852   0017C8  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  5853   0017CA  3205               	rrcf	___awmod@divisor^0,f,c
  5854   0017CC  2E07               	decfsz	___awmod@counter^0,f,c
  5855   0017CE  EFD4  F00B         	goto	l3284
  5856   0017D2                     l3292:
  5857   0017D2  5008               	movf	___awmod@sign^0,w,c
  5858   0017D4  B4D8               	btfsc	status,2,c
  5859   0017D6  EFEF  F00B         	goto	u1481
  5860   0017DA  EFF1  F00B         	goto	u1480
  5861   0017DE                     u1481:
  5862   0017DE  EFF5  F00B         	goto	l3296
  5863   0017E2                     u1480:
  5864   0017E2  6C03               	negf	___awmod@dividend^0,c
  5865   0017E4  1E04               	comf	(___awmod@dividend+1)^0,f,c
  5866   0017E6  B0D8               	btfsc	status,0,c
  5867   0017E8  2A04               	incf	(___awmod@dividend+1)^0,f,c
  5868   0017EA                     l3296:
  5869   0017EA  C003  F003         	movff	___awmod@dividend,?___awmod
  5870   0017EE  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  5871   0017F2  0012               	return		;funcret
  5872   0017F4                     __end_of___awmod:
  5873                           	callstack 0
  5874                           
  5875 ;; *************** function ___awdiv *****************
  5876 ;; Defined at:
  5877 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  dividend        2    2[COMRAM] int 
  5880 ;;  divisor         2    4[COMRAM] int 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  quotient        2    8[COMRAM] int 
  5883 ;;  sign            1    7[COMRAM] unsigned char 
  5884 ;;  counter         1    6[COMRAM] unsigned char 
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  2    2[COMRAM] int 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5895 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5897 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5898 ;;Total ram usage:        8 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 3
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_dtoa
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text57
  5909   00150A                     __ptext57:
  5910                           	callstack 0
  5911   00150A                     ___awdiv:
  5912                           	callstack 22
  5913   00150A  0E00               	movlw	0
  5914   00150C  6E08               	movwf	___awdiv@sign^0,c
  5915   00150E  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  5916   001510  EF8E  F00A         	goto	u1370
  5917   001514  EF8C  F00A         	goto	u1371
  5918   001518                     u1371:
  5919   001518  EF94  F00A         	goto	l3228
  5920   00151C                     u1370:
  5921   00151C  6C05               	negf	___awdiv@divisor^0,c
  5922   00151E  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  5923   001520  B0D8               	btfsc	status,0,c
  5924   001522  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  5925   001524  0E01               	movlw	1
  5926   001526  6E08               	movwf	___awdiv@sign^0,c
  5927   001528                     l3228:
  5928   001528  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  5929   00152A  EF9B  F00A         	goto	u1380
  5930   00152E  EF99  F00A         	goto	u1381
  5931   001532                     u1381:
  5932   001532  EFA1  F00A         	goto	l3234
  5933   001536                     u1380:
  5934   001536  6C03               	negf	___awdiv@dividend^0,c
  5935   001538  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  5936   00153A  B0D8               	btfsc	status,0,c
  5937   00153C  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  5938   00153E  0E01               	movlw	1
  5939   001540  1A08               	xorwf	___awdiv@sign^0,f,c
  5940   001542                     l3234:
  5941   001542  0E00               	movlw	0
  5942   001544  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  5943   001546  0E00               	movlw	0
  5944   001548  6E09               	movwf	___awdiv@quotient^0,c
  5945   00154A  5005               	movf	___awdiv@divisor^0,w,c
  5946   00154C  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  5947   00154E  B4D8               	btfsc	status,2,c
  5948   001550  EFAC  F00A         	goto	u1391
  5949   001554  EFAE  F00A         	goto	u1390
  5950   001558                     u1391:
  5951   001558  EFD6  F00A         	goto	l3256
  5952   00155C                     u1390:
  5953   00155C  0E01               	movlw	1
  5954   00155E  6E07               	movwf	___awdiv@counter^0,c
  5955   001560  EFB6  F00A         	goto	l3242
  5956   001564                     l3240:
  5957   001564  90D8               	bcf	status,0,c
  5958   001566  3605               	rlcf	___awdiv@divisor^0,f,c
  5959   001568  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  5960   00156A  2A07               	incf	___awdiv@counter^0,f,c
  5961   00156C                     l3242:
  5962   00156C  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  5963   00156E  EFBB  F00A         	goto	u1401
  5964   001572  EFBD  F00A         	goto	u1400
  5965   001576                     u1401:
  5966   001576  EFB2  F00A         	goto	l3240
  5967   00157A                     u1400:
  5968   00157A                     l3244:
  5969   00157A  90D8               	bcf	status,0,c
  5970   00157C  3609               	rlcf	___awdiv@quotient^0,f,c
  5971   00157E  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  5972   001580  5005               	movf	___awdiv@divisor^0,w,c
  5973   001582  5C03               	subwf	___awdiv@dividend^0,w,c
  5974   001584  5006               	movf	(___awdiv@divisor+1)^0,w,c
  5975   001586  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  5976   001588  A0D8               	btfss	status,0,c
  5977   00158A  EFC9  F00A         	goto	u1411
  5978   00158E  EFCB  F00A         	goto	u1410
  5979   001592                     u1411:
  5980   001592  EFD0  F00A         	goto	l3252
  5981   001596                     u1410:
  5982   001596  5005               	movf	___awdiv@divisor^0,w,c
  5983   001598  5E03               	subwf	___awdiv@dividend^0,f,c
  5984   00159A  5006               	movf	(___awdiv@divisor+1)^0,w,c
  5985   00159C  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  5986   00159E  8009               	bsf	___awdiv@quotient^0,0,c
  5987   0015A0                     l3252:
  5988   0015A0  90D8               	bcf	status,0,c
  5989   0015A2  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  5990   0015A4  3205               	rrcf	___awdiv@divisor^0,f,c
  5991   0015A6  2E07               	decfsz	___awdiv@counter^0,f,c
  5992   0015A8  EFBD  F00A         	goto	l3244
  5993   0015AC                     l3256:
  5994   0015AC  5008               	movf	___awdiv@sign^0,w,c
  5995   0015AE  B4D8               	btfsc	status,2,c
  5996   0015B0  EFDC  F00A         	goto	u1421
  5997   0015B4  EFDE  F00A         	goto	u1420
  5998   0015B8                     u1421:
  5999   0015B8  EFE2  F00A         	goto	l3260
  6000   0015BC                     u1420:
  6001   0015BC  6C09               	negf	___awdiv@quotient^0,c
  6002   0015BE  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  6003   0015C0  B0D8               	btfsc	status,0,c
  6004   0015C2  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  6005   0015C4                     l3260:
  6006   0015C4  C009  F003         	movff	___awdiv@quotient,?___awdiv
  6007   0015C8  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  6008   0015CC  0012               	return		;funcret
  6009   0015CE                     __end_of___awdiv:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function _ADCC_GetSingleConversion *****************
  6013 ;; Defined at:
  6014 ;;		line 118 in file "mcc_generated_files/adc/src/adcc.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  channel         1    wreg     enum E12689
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  channel         1    6[COMRAM] enum E12689
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  2    2[COMRAM] unsigned short 
  6021 ;; Registers used:
  6022 ;;		wreg, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6031 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6032 ;;Total ram usage:        5 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; Hardware stack levels required when called: 3
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_ADC
  6039 ;;		_VSR
  6040 ;;		_PWM
  6041 ;;		_EEPROM
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text58
  6046   001FA0                     __ptext58:
  6047                           	callstack 0
  6048   001FA0                     _ADCC_GetSingleConversion:
  6049                           	callstack 26
  6050                           
  6051                           ;incstack = 0
  6052                           ;ADCC_GetSingleConversion@channel stored from wreg
  6053   001FA0  6E07               	movwf	ADCC_GetSingleConversion@channel^0,c
  6054   001FA2                     
  6055                           ;mcc_generated_files/adc/src/adcc.c: 118: adc_result_t ADCC_GetSingleConversion(adcc_cha
      +                          nnel_t channel);mcc_generated_files/adc/src/adcc.c: 119: {;mcc_generated_files/adc/src/a
      +                          dcc.c: 121:     ADPCH = channel;
  6056   001FA2  C007  FF5A         	movff	ADCC_GetSingleConversion@channel,3930	;volatile
  6057   001FA6                     
  6058                           ;mcc_generated_files/adc/src/adcc.c: 124:     ADCON0bits.ADON = 1;
  6059   001FA6  010F               	movlb	15	; () banked
  6060   001FA8  8F5B               	bsf	91,7,b	;volatile
  6061   001FAA                     
  6062                           ; BSR set to: 15
  6063                           ;mcc_generated_files/adc/src/adcc.c: 127:     ADCON0bits.ADCONT = 0;
  6064   001FAA  9D5B               	bcf	91,6,b	;volatile
  6065   001FAC                     
  6066                           ; BSR set to: 15
  6067                           ;mcc_generated_files/adc/src/adcc.c: 130:     ADCON0bits.ADGO = 1;
  6068   001FAC  815B               	bsf	91,0,b	;volatile
  6069   001FAE                     l406:
  6070                           
  6071                           ; BSR set to: 15
  6072                           ;mcc_generated_files/adc/src/adcc.c: 134:     while (ADCON0bits.ADGO)
  6073   001FAE  B15B               	btfsc	91,0,b	;volatile
  6074   001FB0  EFDC  F00F         	goto	u1691
  6075   001FB4  EFDE  F00F         	goto	u1690
  6076   001FB8                     u1691:
  6077   001FB8  EFD7  F00F         	goto	l406
  6078   001FBC                     u1690:
  6079   001FBC                     
  6080                           ; BSR set to: 15
  6081                           ;mcc_generated_files/adc/src/adcc.c: 140:     return ((adc_result_t)((ADRESH << 8) + ADR
      +                          ESL));
  6082   001FBC  515F               	movf	95,w,b	;volatile
  6083   001FBE  6E06               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  6084   001FC0  6A05               	clrf	??_ADCC_GetSingleConversion^0,c
  6085   001FC2  515E               	movf	94,w,b	;volatile
  6086   001FC4  2405               	addwf	??_ADCC_GetSingleConversion^0,w,c
  6087   001FC6  6E03               	movwf	?_ADCC_GetSingleConversion^0,c
  6088   001FC8  0E00               	movlw	0
  6089   001FCA  2006               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  6090   001FCC  6E04               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  6091   001FCE                     
  6092                           ; BSR set to: 15
  6093   001FCE  0012               	return		;funcret
  6094   001FD0                     __end_of_ADCC_GetSingleConversion:
  6095                           	callstack 0
  6096                           
  6097 ;; *************** function _INTERRUPT_InterruptManager *****************
  6098 ;; Defined at:
  6099 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;		None
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;		None
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  1    wreg      void 
  6106 ;; Registers used:
  6107 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;Total ram usage:        2 bytes
  6118 ;; Hardware stack levels used: 1
  6119 ;; Hardware stack levels required when called: 2
  6120 ;; This function calls:
  6121 ;;		_PIN_MANAGER_IOC
  6122 ;;		_TMR0_OverflowISR
  6123 ;; This function is called by:
  6124 ;;		Interrupt level 2
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	intcode
  6129   000008                     __pintcode:
  6130                           	callstack 0
  6131   000008                     _INTERRUPT_InterruptManager:
  6132                           	callstack 19
  6133                           
  6134                           ; BSR set to: 15
  6135                           ;incstack = 0
  6136   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6137   00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6138   00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6139   000012                     
  6140                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
  6141   000012  010E               	movlb	14	; () banked
  6142   000014  A9BD               	btfss	189,4,b	;volatile
  6143   000016  EF0F  F000         	goto	i2u207_41
  6144   00001A  EF11  F000         	goto	i2u207_40
  6145   00001E                     i2u207_41:
  6146   00001E  EF1C  F000         	goto	i2l675
  6147   000022                     i2u207_40:
  6148   000022                     
  6149                           ; BSR set to: 14
  6150   000022  A9C5               	btfss	197,4,b	;volatile
  6151   000024  EF16  F000         	goto	i2u208_41
  6152   000028  EF18  F000         	goto	i2u208_40
  6153   00002C                     i2u208_41:
  6154   00002C  EF1C  F000         	goto	i2l675
  6155   000030                     i2u208_40:
  6156   000030                     
  6157                           ; BSR set to: 14
  6158                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
  6159   000030  EC41  F011         	call	_PIN_MANAGER_IOC	;wreg free
  6160                           
  6161                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
  6162   000034  EF35  F000         	goto	i2l681
  6163   000038                     i2l675:
  6164                           
  6165                           ; BSR set to: 14
  6166   000038  ACF2               	btfss	242,6,c	;volatile
  6167   00003A  EF21  F000         	goto	i2u209_41
  6168   00003E  EF23  F000         	goto	i2u209_40
  6169   000042                     i2u209_41:
  6170   000042  EF35  F000         	goto	i2l681
  6171   000046                     i2u209_40:
  6172   000046                     
  6173                           ; BSR set to: 14
  6174                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  6175   000046  ABBD               	btfss	189,5,b	;volatile
  6176   000048  EF28  F000         	goto	i2u210_41
  6177   00004C  EF2A  F000         	goto	i2u210_40
  6178   000050                     i2u210_41:
  6179   000050  EF35  F000         	goto	i2l680
  6180   000054                     i2u210_40:
  6181   000054                     
  6182                           ; BSR set to: 14
  6183   000054  ABC5               	btfss	197,5,b	;volatile
  6184   000056  EF2F  F000         	goto	i2u211_41
  6185   00005A  EF31  F000         	goto	i2u211_40
  6186   00005E                     i2u211_41:
  6187   00005E  EF35  F000         	goto	i2l680
  6188   000062                     i2u211_40:
  6189   000062                     
  6190                           ; BSR set to: 14
  6191                           ;mcc_generated_files/system/src/interrupt.c: 90:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 91:             TMR0_OverflowISR();
  6192   000062  EC9B  F00F         	call	_TMR0_OverflowISR	;wreg free
  6193                           
  6194                           ;mcc_generated_files/system/src/interrupt.c: 92:         }
  6195   000066  EF35  F000         	goto	i2l681
  6196   00006A                     i2l680:
  6197   00006A                     i2l681:
  6198   00006A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6199   00006E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6200   000072  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6201   000074  0011               	retfie		f
  6202   000076                     __end_of_INTERRUPT_InterruptManager:
  6203                           	callstack 0
  6204                           
  6205 ;; *************** function _TMR0_OverflowISR *****************
  6206 ;; Defined at:
  6207 ;;		line 106 in file "mcc_generated_files/timer/src/tmr0.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;		None
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6225 ;;Total ram usage:        0 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; Hardware stack levels required when called: 1
  6228 ;; This function calls:
  6229 ;;		NULL
  6230 ;;		_LAB_ISR
  6231 ;;		_TMR0_DefaultOverflowCallback
  6232 ;;		_TMR1_DefaultOverflowCallback
  6233 ;;		_TMR2_DefaultOverflowCallback
  6234 ;; This function is called by:
  6235 ;;		_INTERRUPT_InterruptManager
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text60
  6240   001F36                     __ptext60:
  6241                           	callstack 0
  6242   001F36                     _TMR0_OverflowISR:
  6243                           	callstack 19
  6244   001F36                     
  6245                           ;mcc_generated_files/timer/src/tmr0.c: 109:     PIR0bits.TMR0IF = 0;
  6246   001F36  010E               	movlb	14	; () banked
  6247   001F38  9BC5               	bcf	197,5,b	;volatile
  6248   001F3A                     
  6249                           ; BSR set to: 14
  6250                           ;mcc_generated_files/timer/src/tmr0.c: 110:     if(TMR0_OverflowCallback)
  6251   001F3A  0100               	movlb	0	; () banked
  6252   001F3C  5166               	movf	_TMR0_OverflowCallback& (0+255),w,b
  6253   001F3E  1167               	iorwf	(_TMR0_OverflowCallback+1)& (0+255),w,b
  6254   001F40  1168               	iorwf	(_TMR0_OverflowCallback+2)& (0+255),w,b
  6255   001F42  B4D8               	btfsc	status,2,c
  6256   001F44  EFA6  F00F         	goto	i2u205_41
  6257   001F48  EFA8  F00F         	goto	i2u205_40
  6258   001F4C                     i2u205_41:
  6259   001F4C  EFB5  F00F         	goto	i2l948
  6260   001F50                     i2u205_40:
  6261   001F50                     
  6262                           ; BSR set to: 0
  6263                           ;mcc_generated_files/timer/src/tmr0.c: 111:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          112:         TMR0_OverflowCallback();
  6264   001F50  D802               	call	i2u206_48
  6265   001F52  EFB5  F00F         	goto	i2u206_49
  6266   001F56                     i2u206_48:
  6267   001F56  0005               	push	
  6268   001F58  6EFA               	movwf	pclath,c
  6269   001F5A  5166               	movf	_TMR0_OverflowCallback& (0+255),w,b
  6270   001F5C  6EFD               	movwf	tosl,c
  6271   001F5E  5167               	movf	(_TMR0_OverflowCallback+1)& (0+255),w,b
  6272   001F60  6EFE               	movwf	tosh,c
  6273   001F62  5168               	movf	(_TMR0_OverflowCallback+2)& (0+255),w,b
  6274   001F64  6EFF               	movwf	tosu,c
  6275   001F66  50FA               	movf	pclath,w,c
  6276   001F68  0012               	return		;indir
  6277   001F6A                     i2u206_49:
  6278   001F6A                     i2l948:
  6279   001F6A  0012               	return		;funcret
  6280   001F6C                     __end_of_TMR0_OverflowISR:
  6281                           	callstack 0
  6282                           
  6283 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  6284 ;; Defined at:
  6285 ;;		line 121 in file "mcc_generated_files/timer/src/tmr0.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;		None
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		None
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;Total ram usage:        0 bytes
  6304 ;; Hardware stack levels used: 1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_TMR0_Initialize
  6309 ;;		_TMR0_OverflowISR
  6310 ;;		_TMR1_Tasks
  6311 ;;		_TMR2_Tasks
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text61
  6316   00227C                     __ptext61:
  6317                           	callstack 0
  6318   00227C                     _TMR0_DefaultOverflowCallback:
  6319                           	callstack 19
  6320   00227C  0012               	return		;funcret
  6321   00227E                     __end_of_TMR0_DefaultOverflowCallback:
  6322                           	callstack 0
  6323                           
  6324 ;; *************** function _TMR1_DefaultOverflowCallback *****************
  6325 ;; Defined at:
  6326 ;;		line 163 in file "mcc_generated_files/timer/src/tmr1.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		None
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;Total ram usage:        0 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_TMR1_Initialize
  6350 ;;		_TMR0_OverflowISR
  6351 ;;		_TMR1_Tasks
  6352 ;;		_TMR2_Tasks
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text62
  6357   00227E                     __ptext62:
  6358                           	callstack 0
  6359   00227E                     _TMR1_DefaultOverflowCallback:
  6360                           	callstack 19
  6361   00227E  0012               	return		;funcret
  6362   002280                     __end_of_TMR1_DefaultOverflowCallback:
  6363                           	callstack 0
  6364                           
  6365 ;; *************** function _LAB_ISR *****************
  6366 ;; Defined at:
  6367 ;;		line 87 in file "Labs/Lab08_Interrupts/Interrupt.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6385 ;;Total ram usage:        0 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_Interrupt
  6391 ;;		_TMR0_OverflowISR
  6392 ;;		_TMR1_Tasks
  6393 ;;		_TMR2_Tasks
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text63
  6398   00212E                     __ptext63:
  6399                           	callstack 0
  6400   00212E                     _LAB_ISR:
  6401                           	callstack 19
  6402   00212E                     
  6403                           ;Labs/Lab08_Interrupts/Interrupt.c: 89:     if (rotateReg == 1) {
  6404   00212E  0453               	decf	_rotateReg@Interrupt$F303^0,w,c
  6405   002130  A4D8               	btfss	status,2,c
  6406   002132  EF9D  F010         	goto	i2u171_41
  6407   002136  EF9F  F010         	goto	i2u171_40
  6408   00213A                     i2u171_41:
  6409   00213A  EFA1  F010         	goto	i2l3470
  6410   00213E                     i2u171_40:
  6411   00213E                     
  6412                           ;Labs/Lab08_Interrupts/Interrupt.c: 90:         rotateReg = 16;
  6413   00213E  0E10               	movlw	16
  6414   002140  6E53               	movwf	_rotateReg@Interrupt$F303^0,c
  6415   002142                     i2l3470:
  6416                           
  6417                           ;Labs/Lab08_Interrupts/Interrupt.c: 93:     rotateReg >>= 1;
  6418   002142  90D8               	bcf	status,0,c
  6419   002144  3253               	rrcf	_rotateReg@Interrupt$F303^0,f,c
  6420   002146                     
  6421                           ;Labs/Lab08_Interrupts/Interrupt.c: 96:     LATA = (rotateReg << 4);
  6422   002146  3853               	swapf	_rotateReg@Interrupt$F303^0,w,c
  6423   002148  0BF0               	andlw	240
  6424   00214A  6E82               	movwf	130,c	;volatile
  6425   00214C  0012               	return		;funcret
  6426   00214E                     __end_of_LAB_ISR:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function _TMR2_DefaultOverflowCallback *****************
  6430 ;; Defined at:
  6431 ;;		line 126 in file "mcc_generated_files/timer/src/tmr2.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		None
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_TMR2_Initialize
  6455 ;;		_TMR0_OverflowISR
  6456 ;;		_TMR1_Tasks
  6457 ;;		_TMR2_Tasks
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text64
  6462   002280                     __ptext64:
  6463                           	callstack 0
  6464   002280                     _TMR2_DefaultOverflowCallback:
  6465                           	callstack 19
  6466   002280  0012               	return		;funcret
  6467   002282                     __end_of_TMR2_DefaultOverflowCallback:
  6468                           	callstack 0
  6469                           
  6470 ;; *************** function _PIN_MANAGER_IOC *****************
  6471 ;; Defined at:
  6472 ;;		line 133 in file "mcc_generated_files/system/src/pins.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;		None
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;		None
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  1    wreg      void 
  6479 ;; Registers used:
  6480 ;;		None
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6490 ;;Total ram usage:        0 bytes
  6491 ;; Hardware stack levels used: 1
  6492 ;; This function calls:
  6493 ;;		Nothing
  6494 ;; This function is called by:
  6495 ;;		_INTERRUPT_InterruptManager
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text65
  6500   002282                     __ptext65:
  6501                           	callstack 0
  6502   002282                     _PIN_MANAGER_IOC:
  6503                           	callstack 20
  6504   002282  0012               	return		;funcret
  6505   002284                     __end_of_PIN_MANAGER_IOC:
  6506                           	callstack 0
  6507                           
  6508                           	psect	text66
  6509   000000                     __ptext66:
  6510                           	callstack 0
  6511   000000                     
  6512                           	psect	rparam
  6513   000000                     
  6514                           	psect	temp
  6515   00005E                     btemp:
  6516                           	callstack 0
  6517   00005E                     	ds	1
  6518   000000                     int$flags	set	btemp
  6519   000000                     wtemp8	set	btemp+1
  6520   000000                     ttemp5	set	btemp+1
  6521   000000                     ttemp6	set	btemp+4
  6522   000000                     ttemp7	set	btemp+8
  6523                           
  6524                           	psect	idloc
  6525                           
  6526                           ;Config register IDLOC0 @ 0x200000
  6527                           ;	unspecified, using default values
  6528   200000                     	org	2097152
  6529   200000  FFFF               	dw	65535
  6530                           
  6531                           ;Config register IDLOC1 @ 0x200002
  6532                           ;	unspecified, using default values
  6533   200002                     	org	2097154
  6534   200002  FFFF               	dw	65535
  6535                           
  6536                           ;Config register IDLOC2 @ 0x200004
  6537                           ;	unspecified, using default values
  6538   200004                     	org	2097156
  6539   200004  FFFF               	dw	65535
  6540                           
  6541                           ;Config register IDLOC3 @ 0x200006
  6542                           ;	unspecified, using default values
  6543   200006                     	org	2097158
  6544   200006  FFFF               	dw	65535
  6545                           
  6546                           ;Config register IDLOC4 @ 0x200008
  6547                           ;	unspecified, using default values
  6548   200008                     	org	2097160
  6549   200008  FFFF               	dw	65535
  6550                           
  6551                           ;Config register IDLOC5 @ 0x20000A
  6552                           ;	unspecified, using default values
  6553   20000A                     	org	2097162
  6554   20000A  FFFF               	dw	65535
  6555                           
  6556                           ;Config register IDLOC6 @ 0x20000C
  6557                           ;	unspecified, using default values
  6558   20000C                     	org	2097164
  6559   20000C  FFFF               	dw	65535
  6560                           
  6561                           ;Config register IDLOC7 @ 0x20000E
  6562                           ;	unspecified, using default values
  6563   20000E                     	org	2097166
  6564   20000E  FFFF               	dw	65535
  6565                           
  6566                           ;Config register IDLOC8 @ 0x200010
  6567                           ;	unspecified, using default values
  6568   200010                     	org	2097168
  6569   200010  FFFF               	dw	65535
  6570                           
  6571                           ;Config register IDLOC9 @ 0x200012
  6572                           ;	unspecified, using default values
  6573   200012                     	org	2097170
  6574   200012  FFFF               	dw	65535
  6575                           
  6576                           ;Config register IDLOC10 @ 0x200014
  6577                           ;	unspecified, using default values
  6578   200014                     	org	2097172
  6579   200014  FFFF               	dw	65535
  6580                           
  6581                           ;Config register IDLOC11 @ 0x200016
  6582                           ;	unspecified, using default values
  6583   200016                     	org	2097174
  6584   200016  FFFF               	dw	65535
  6585                           
  6586                           ;Config register IDLOC12 @ 0x200018
  6587                           ;	unspecified, using default values
  6588   200018                     	org	2097176
  6589   200018  FFFF               	dw	65535
  6590                           
  6591                           ;Config register IDLOC13 @ 0x20001A
  6592                           ;	unspecified, using default values
  6593   20001A                     	org	2097178
  6594   20001A  FFFF               	dw	65535
  6595                           
  6596                           ;Config register IDLOC14 @ 0x20001C
  6597                           ;	unspecified, using default values
  6598   20001C                     	org	2097180
  6599   20001C  FFFF               	dw	65535
  6600                           
  6601                           ;Config register IDLOC15 @ 0x20001E
  6602                           ;	unspecified, using default values
  6603   20001E                     	org	2097182
  6604   20001E  FFFF               	dw	65535
  6605                           
  6606                           ;Config register IDLOC16 @ 0x200020
  6607                           ;	unspecified, using default values
  6608   200020                     	org	2097184
  6609   200020  FFFF               	dw	65535
  6610                           
  6611                           ;Config register IDLOC17 @ 0x200022
  6612                           ;	unspecified, using default values
  6613   200022                     	org	2097186
  6614   200022  FFFF               	dw	65535
  6615                           
  6616                           ;Config register IDLOC18 @ 0x200024
  6617                           ;	unspecified, using default values
  6618   200024                     	org	2097188
  6619   200024  FFFF               	dw	65535
  6620                           
  6621                           ;Config register IDLOC19 @ 0x200026
  6622                           ;	unspecified, using default values
  6623   200026                     	org	2097190
  6624   200026  FFFF               	dw	65535
  6625                           
  6626                           ;Config register IDLOC20 @ 0x200028
  6627                           ;	unspecified, using default values
  6628   200028                     	org	2097192
  6629   200028  FFFF               	dw	65535
  6630                           
  6631                           ;Config register IDLOC21 @ 0x20002A
  6632                           ;	unspecified, using default values
  6633   20002A                     	org	2097194
  6634   20002A  FFFF               	dw	65535
  6635                           
  6636                           ;Config register IDLOC22 @ 0x20002C
  6637                           ;	unspecified, using default values
  6638   20002C                     	org	2097196
  6639   20002C  FFFF               	dw	65535
  6640                           
  6641                           ;Config register IDLOC23 @ 0x20002E
  6642                           ;	unspecified, using default values
  6643   20002E                     	org	2097198
  6644   20002E  FFFF               	dw	65535
  6645                           
  6646                           ;Config register IDLOC24 @ 0x200030
  6647                           ;	unspecified, using default values
  6648   200030                     	org	2097200
  6649   200030  FFFF               	dw	65535
  6650                           
  6651                           ;Config register IDLOC25 @ 0x200032
  6652                           ;	unspecified, using default values
  6653   200032                     	org	2097202
  6654   200032  FFFF               	dw	65535
  6655                           
  6656                           ;Config register IDLOC26 @ 0x200034
  6657                           ;	unspecified, using default values
  6658   200034                     	org	2097204
  6659   200034  FFFF               	dw	65535
  6660                           
  6661                           ;Config register IDLOC27 @ 0x200036
  6662                           ;	unspecified, using default values
  6663   200036                     	org	2097206
  6664   200036  FFFF               	dw	65535
  6665                           
  6666                           ;Config register IDLOC28 @ 0x200038
  6667                           ;	unspecified, using default values
  6668   200038                     	org	2097208
  6669   200038  FFFF               	dw	65535
  6670                           
  6671                           ;Config register IDLOC29 @ 0x20003A
  6672                           ;	unspecified, using default values
  6673   20003A                     	org	2097210
  6674   20003A  FFFF               	dw	65535
  6675                           
  6676                           ;Config register IDLOC30 @ 0x20003C
  6677                           ;	unspecified, using default values
  6678   20003C                     	org	2097212
  6679   20003C  FFFF               	dw	65535
  6680                           
  6681                           ;Config register IDLOC31 @ 0x20003E
  6682                           ;	unspecified, using default values
  6683   20003E                     	org	2097214
  6684   20003E  FFFF               	dw	65535
  6685                           
  6686                           ;Config register IDLOC32 @ 0x200040
  6687                           ;	unspecified, using default values
  6688   200040                     	org	2097216
  6689   200040  FFFF               	dw	65535
  6690                           
  6691                           ;Config register IDLOC33 @ 0x200042
  6692                           ;	unspecified, using default values
  6693   200042                     	org	2097218
  6694   200042  FFFF               	dw	65535
  6695                           
  6696                           ;Config register IDLOC34 @ 0x200044
  6697                           ;	unspecified, using default values
  6698   200044                     	org	2097220
  6699   200044  FFFF               	dw	65535
  6700                           
  6701                           ;Config register IDLOC35 @ 0x200046
  6702                           ;	unspecified, using default values
  6703   200046                     	org	2097222
  6704   200046  FFFF               	dw	65535
  6705                           
  6706                           ;Config register IDLOC36 @ 0x200048
  6707                           ;	unspecified, using default values
  6708   200048                     	org	2097224
  6709   200048  FFFF               	dw	65535
  6710                           
  6711                           ;Config register IDLOC37 @ 0x20004A
  6712                           ;	unspecified, using default values
  6713   20004A                     	org	2097226
  6714   20004A  FFFF               	dw	65535
  6715                           
  6716                           ;Config register IDLOC38 @ 0x20004C
  6717                           ;	unspecified, using default values
  6718   20004C                     	org	2097228
  6719   20004C  FFFF               	dw	65535
  6720                           
  6721                           ;Config register IDLOC39 @ 0x20004E
  6722                           ;	unspecified, using default values
  6723   20004E                     	org	2097230
  6724   20004E  FFFF               	dw	65535
  6725                           
  6726                           ;Config register IDLOC40 @ 0x200050
  6727                           ;	unspecified, using default values
  6728   200050                     	org	2097232
  6729   200050  FFFF               	dw	65535
  6730                           
  6731                           ;Config register IDLOC41 @ 0x200052
  6732                           ;	unspecified, using default values
  6733   200052                     	org	2097234
  6734   200052  FFFF               	dw	65535
  6735                           
  6736                           ;Config register IDLOC42 @ 0x200054
  6737                           ;	unspecified, using default values
  6738   200054                     	org	2097236
  6739   200054  FFFF               	dw	65535
  6740                           
  6741                           ;Config register IDLOC43 @ 0x200056
  6742                           ;	unspecified, using default values
  6743   200056                     	org	2097238
  6744   200056  FFFF               	dw	65535
  6745                           
  6746                           ;Config register IDLOC44 @ 0x200058
  6747                           ;	unspecified, using default values
  6748   200058                     	org	2097240
  6749   200058  FFFF               	dw	65535
  6750                           
  6751                           ;Config register IDLOC45 @ 0x20005A
  6752                           ;	unspecified, using default values
  6753   20005A                     	org	2097242
  6754   20005A  FFFF               	dw	65535
  6755                           
  6756                           ;Config register IDLOC46 @ 0x20005C
  6757                           ;	unspecified, using default values
  6758   20005C                     	org	2097244
  6759   20005C  FFFF               	dw	65535
  6760                           
  6761                           ;Config register IDLOC47 @ 0x20005E
  6762                           ;	unspecified, using default values
  6763   20005E                     	org	2097246
  6764   20005E  FFFF               	dw	65535
  6765                           
  6766                           ;Config register IDLOC48 @ 0x200060
  6767                           ;	unspecified, using default values
  6768   200060                     	org	2097248
  6769   200060  FFFF               	dw	65535
  6770                           
  6771                           ;Config register IDLOC49 @ 0x200062
  6772                           ;	unspecified, using default values
  6773   200062                     	org	2097250
  6774   200062  FFFF               	dw	65535
  6775                           
  6776                           ;Config register IDLOC50 @ 0x200064
  6777                           ;	unspecified, using default values
  6778   200064                     	org	2097252
  6779   200064  FFFF               	dw	65535
  6780                           
  6781                           ;Config register IDLOC51 @ 0x200066
  6782                           ;	unspecified, using default values
  6783   200066                     	org	2097254
  6784   200066  FFFF               	dw	65535
  6785                           
  6786                           ;Config register IDLOC52 @ 0x200068
  6787                           ;	unspecified, using default values
  6788   200068                     	org	2097256
  6789   200068  FFFF               	dw	65535
  6790                           
  6791                           ;Config register IDLOC53 @ 0x20006A
  6792                           ;	unspecified, using default values
  6793   20006A                     	org	2097258
  6794   20006A  FFFF               	dw	65535
  6795                           
  6796                           ;Config register IDLOC54 @ 0x20006C
  6797                           ;	unspecified, using default values
  6798   20006C                     	org	2097260
  6799   20006C  FFFF               	dw	65535
  6800                           
  6801                           ;Config register IDLOC55 @ 0x20006E
  6802                           ;	unspecified, using default values
  6803   20006E                     	org	2097262
  6804   20006E  FFFF               	dw	65535
  6805                           
  6806                           ;Config register IDLOC56 @ 0x200070
  6807                           ;	unspecified, using default values
  6808   200070                     	org	2097264
  6809   200070  FFFF               	dw	65535
  6810                           
  6811                           ;Config register IDLOC57 @ 0x200072
  6812                           ;	unspecified, using default values
  6813   200072                     	org	2097266
  6814   200072  FFFF               	dw	65535
  6815                           
  6816                           ;Config register IDLOC58 @ 0x200074
  6817                           ;	unspecified, using default values
  6818   200074                     	org	2097268
  6819   200074  FFFF               	dw	65535
  6820                           
  6821                           ;Config register IDLOC59 @ 0x200076
  6822                           ;	unspecified, using default values
  6823   200076                     	org	2097270
  6824   200076  FFFF               	dw	65535
  6825                           
  6826                           ;Config register IDLOC60 @ 0x200078
  6827                           ;	unspecified, using default values
  6828   200078                     	org	2097272
  6829   200078  FFFF               	dw	65535
  6830                           
  6831                           ;Config register IDLOC61 @ 0x20007A
  6832                           ;	unspecified, using default values
  6833   20007A                     	org	2097274
  6834   20007A  FFFF               	dw	65535
  6835                           
  6836                           ;Config register IDLOC62 @ 0x20007C
  6837                           ;	unspecified, using default values
  6838   20007C                     	org	2097276
  6839   20007C  FFFF               	dw	65535
  6840                           
  6841                           ;Config register IDLOC63 @ 0x20007E
  6842                           ;	unspecified, using default values
  6843   20007E                     	org	2097278
  6844   20007E  FFFF               	dw	65535
  6845                           
  6846                           ;Config register IDLOC64 @ 0x200080
  6847                           ;	unspecified, using default values
  6848   200080                     	org	2097280
  6849   200080  FFFF               	dw	65535
  6850                           
  6851                           ;Config register IDLOC65 @ 0x200082
  6852                           ;	unspecified, using default values
  6853   200082                     	org	2097282
  6854   200082  FFFF               	dw	65535
  6855                           
  6856                           ;Config register IDLOC66 @ 0x200084
  6857                           ;	unspecified, using default values
  6858   200084                     	org	2097284
  6859   200084  FFFF               	dw	65535
  6860                           
  6861                           ;Config register IDLOC67 @ 0x200086
  6862                           ;	unspecified, using default values
  6863   200086                     	org	2097286
  6864   200086  FFFF               	dw	65535
  6865                           
  6866                           ;Config register IDLOC68 @ 0x200088
  6867                           ;	unspecified, using default values
  6868   200088                     	org	2097288
  6869   200088  FFFF               	dw	65535
  6870                           
  6871                           ;Config register IDLOC69 @ 0x20008A
  6872                           ;	unspecified, using default values
  6873   20008A                     	org	2097290
  6874   20008A  FFFF               	dw	65535
  6875                           
  6876                           ;Config register IDLOC70 @ 0x20008C
  6877                           ;	unspecified, using default values
  6878   20008C                     	org	2097292
  6879   20008C  FFFF               	dw	65535
  6880                           
  6881                           ;Config register IDLOC71 @ 0x20008E
  6882                           ;	unspecified, using default values
  6883   20008E                     	org	2097294
  6884   20008E  FFFF               	dw	65535
  6885                           
  6886                           ;Config register IDLOC72 @ 0x200090
  6887                           ;	unspecified, using default values
  6888   200090                     	org	2097296
  6889   200090  FFFF               	dw	65535
  6890                           
  6891                           ;Config register IDLOC73 @ 0x200092
  6892                           ;	unspecified, using default values
  6893   200092                     	org	2097298
  6894   200092  FFFF               	dw	65535
  6895                           
  6896                           ;Config register IDLOC74 @ 0x200094
  6897                           ;	unspecified, using default values
  6898   200094                     	org	2097300
  6899   200094  FFFF               	dw	65535
  6900                           
  6901                           ;Config register IDLOC75 @ 0x200096
  6902                           ;	unspecified, using default values
  6903   200096                     	org	2097302
  6904   200096  FFFF               	dw	65535
  6905                           
  6906                           ;Config register IDLOC76 @ 0x200098
  6907                           ;	unspecified, using default values
  6908   200098                     	org	2097304
  6909   200098  FFFF               	dw	65535
  6910                           
  6911                           ;Config register IDLOC77 @ 0x20009A
  6912                           ;	unspecified, using default values
  6913   20009A                     	org	2097306
  6914   20009A  FFFF               	dw	65535
  6915                           
  6916                           ;Config register IDLOC78 @ 0x20009C
  6917                           ;	unspecified, using default values
  6918   20009C                     	org	2097308
  6919   20009C  FFFF               	dw	65535
  6920                           
  6921                           ;Config register IDLOC79 @ 0x20009E
  6922                           ;	unspecified, using default values
  6923   20009E                     	org	2097310
  6924   20009E  FFFF               	dw	65535
  6925                           
  6926                           ;Config register IDLOC80 @ 0x2000A0
  6927                           ;	unspecified, using default values
  6928   2000A0                     	org	2097312
  6929   2000A0  FFFF               	dw	65535
  6930                           
  6931                           ;Config register IDLOC81 @ 0x2000A2
  6932                           ;	unspecified, using default values
  6933   2000A2                     	org	2097314
  6934   2000A2  FFFF               	dw	65535
  6935                           
  6936                           ;Config register IDLOC82 @ 0x2000A4
  6937                           ;	unspecified, using default values
  6938   2000A4                     	org	2097316
  6939   2000A4  FFFF               	dw	65535
  6940                           
  6941                           ;Config register IDLOC83 @ 0x2000A6
  6942                           ;	unspecified, using default values
  6943   2000A6                     	org	2097318
  6944   2000A6  FFFF               	dw	65535
  6945                           
  6946                           ;Config register IDLOC84 @ 0x2000A8
  6947                           ;	unspecified, using default values
  6948   2000A8                     	org	2097320
  6949   2000A8  FFFF               	dw	65535
  6950                           
  6951                           ;Config register IDLOC85 @ 0x2000AA
  6952                           ;	unspecified, using default values
  6953   2000AA                     	org	2097322
  6954   2000AA  FFFF               	dw	65535
  6955                           
  6956                           ;Config register IDLOC86 @ 0x2000AC
  6957                           ;	unspecified, using default values
  6958   2000AC                     	org	2097324
  6959   2000AC  FFFF               	dw	65535
  6960                           
  6961                           ;Config register IDLOC87 @ 0x2000AE
  6962                           ;	unspecified, using default values
  6963   2000AE                     	org	2097326
  6964   2000AE  FFFF               	dw	65535
  6965                           
  6966                           ;Config register IDLOC88 @ 0x2000B0
  6967                           ;	unspecified, using default values
  6968   2000B0                     	org	2097328
  6969   2000B0  FFFF               	dw	65535
  6970                           
  6971                           ;Config register IDLOC89 @ 0x2000B2
  6972                           ;	unspecified, using default values
  6973   2000B2                     	org	2097330
  6974   2000B2  FFFF               	dw	65535
  6975                           
  6976                           ;Config register IDLOC90 @ 0x2000B4
  6977                           ;	unspecified, using default values
  6978   2000B4                     	org	2097332
  6979   2000B4  FFFF               	dw	65535
  6980                           
  6981                           ;Config register IDLOC91 @ 0x2000B6
  6982                           ;	unspecified, using default values
  6983   2000B6                     	org	2097334
  6984   2000B6  FFFF               	dw	65535
  6985                           
  6986                           ;Config register IDLOC92 @ 0x2000B8
  6987                           ;	unspecified, using default values
  6988   2000B8                     	org	2097336
  6989   2000B8  FFFF               	dw	65535
  6990                           
  6991                           ;Config register IDLOC93 @ 0x2000BA
  6992                           ;	unspecified, using default values
  6993   2000BA                     	org	2097338
  6994   2000BA  FFFF               	dw	65535
  6995                           
  6996                           ;Config register IDLOC94 @ 0x2000BC
  6997                           ;	unspecified, using default values
  6998   2000BC                     	org	2097340
  6999   2000BC  FFFF               	dw	65535
  7000                           
  7001                           ;Config register IDLOC95 @ 0x2000BE
  7002                           ;	unspecified, using default values
  7003   2000BE                     	org	2097342
  7004   2000BE  FFFF               	dw	65535
  7005                           
  7006                           ;Config register IDLOC96 @ 0x2000C0
  7007                           ;	unspecified, using default values
  7008   2000C0                     	org	2097344
  7009   2000C0  FFFF               	dw	65535
  7010                           
  7011                           ;Config register IDLOC97 @ 0x2000C2
  7012                           ;	unspecified, using default values
  7013   2000C2                     	org	2097346
  7014   2000C2  FFFF               	dw	65535
  7015                           
  7016                           ;Config register IDLOC98 @ 0x2000C4
  7017                           ;	unspecified, using default values
  7018   2000C4                     	org	2097348
  7019   2000C4  FFFF               	dw	65535
  7020                           
  7021                           ;Config register IDLOC99 @ 0x2000C6
  7022                           ;	unspecified, using default values
  7023   2000C6                     	org	2097350
  7024   2000C6  FFFF               	dw	65535
  7025                           
  7026                           ;Config register IDLOC100 @ 0x2000C8
  7027                           ;	unspecified, using default values
  7028   2000C8                     	org	2097352
  7029   2000C8  FFFF               	dw	65535
  7030                           
  7031                           ;Config register IDLOC101 @ 0x2000CA
  7032                           ;	unspecified, using default values
  7033   2000CA                     	org	2097354
  7034   2000CA  FFFF               	dw	65535
  7035                           
  7036                           ;Config register IDLOC102 @ 0x2000CC
  7037                           ;	unspecified, using default values
  7038   2000CC                     	org	2097356
  7039   2000CC  FFFF               	dw	65535
  7040                           
  7041                           ;Config register IDLOC103 @ 0x2000CE
  7042                           ;	unspecified, using default values
  7043   2000CE                     	org	2097358
  7044   2000CE  FFFF               	dw	65535
  7045                           
  7046                           ;Config register IDLOC104 @ 0x2000D0
  7047                           ;	unspecified, using default values
  7048   2000D0                     	org	2097360
  7049   2000D0  FFFF               	dw	65535
  7050                           
  7051                           ;Config register IDLOC105 @ 0x2000D2
  7052                           ;	unspecified, using default values
  7053   2000D2                     	org	2097362
  7054   2000D2  FFFF               	dw	65535
  7055                           
  7056                           ;Config register IDLOC106 @ 0x2000D4
  7057                           ;	unspecified, using default values
  7058   2000D4                     	org	2097364
  7059   2000D4  FFFF               	dw	65535
  7060                           
  7061                           ;Config register IDLOC107 @ 0x2000D6
  7062                           ;	unspecified, using default values
  7063   2000D6                     	org	2097366
  7064   2000D6  FFFF               	dw	65535
  7065                           
  7066                           ;Config register IDLOC108 @ 0x2000D8
  7067                           ;	unspecified, using default values
  7068   2000D8                     	org	2097368
  7069   2000D8  FFFF               	dw	65535
  7070                           
  7071                           ;Config register IDLOC109 @ 0x2000DA
  7072                           ;	unspecified, using default values
  7073   2000DA                     	org	2097370
  7074   2000DA  FFFF               	dw	65535
  7075                           
  7076                           ;Config register IDLOC110 @ 0x2000DC
  7077                           ;	unspecified, using default values
  7078   2000DC                     	org	2097372
  7079   2000DC  FFFF               	dw	65535
  7080                           
  7081                           ;Config register IDLOC111 @ 0x2000DE
  7082                           ;	unspecified, using default values
  7083   2000DE                     	org	2097374
  7084   2000DE  FFFF               	dw	65535
  7085                           
  7086                           ;Config register IDLOC112 @ 0x2000E0
  7087                           ;	unspecified, using default values
  7088   2000E0                     	org	2097376
  7089   2000E0  FFFF               	dw	65535
  7090                           
  7091                           ;Config register IDLOC113 @ 0x2000E2
  7092                           ;	unspecified, using default values
  7093   2000E2                     	org	2097378
  7094   2000E2  FFFF               	dw	65535
  7095                           
  7096                           ;Config register IDLOC114 @ 0x2000E4
  7097                           ;	unspecified, using default values
  7098   2000E4                     	org	2097380
  7099   2000E4  FFFF               	dw	65535
  7100                           
  7101                           ;Config register IDLOC115 @ 0x2000E6
  7102                           ;	unspecified, using default values
  7103   2000E6                     	org	2097382
  7104   2000E6  FFFF               	dw	65535
  7105                           
  7106                           ;Config register IDLOC116 @ 0x2000E8
  7107                           ;	unspecified, using default values
  7108   2000E8                     	org	2097384
  7109   2000E8  FFFF               	dw	65535
  7110                           
  7111                           ;Config register IDLOC117 @ 0x2000EA
  7112                           ;	unspecified, using default values
  7113   2000EA                     	org	2097386
  7114   2000EA  FFFF               	dw	65535
  7115                           
  7116                           ;Config register IDLOC118 @ 0x2000EC
  7117                           ;	unspecified, using default values
  7118   2000EC                     	org	2097388
  7119   2000EC  FFFF               	dw	65535
  7120                           
  7121                           ;Config register IDLOC119 @ 0x2000EE
  7122                           ;	unspecified, using default values
  7123   2000EE                     	org	2097390
  7124   2000EE  FFFF               	dw	65535
  7125                           
  7126                           ;Config register IDLOC120 @ 0x2000F0
  7127                           ;	unspecified, using default values
  7128   2000F0                     	org	2097392
  7129   2000F0  FFFF               	dw	65535
  7130                           
  7131                           ;Config register IDLOC121 @ 0x2000F2
  7132                           ;	unspecified, using default values
  7133   2000F2                     	org	2097394
  7134   2000F2  FFFF               	dw	65535
  7135                           
  7136                           ;Config register IDLOC122 @ 0x2000F4
  7137                           ;	unspecified, using default values
  7138   2000F4                     	org	2097396
  7139   2000F4  FFFF               	dw	65535
  7140                           
  7141                           ;Config register IDLOC123 @ 0x2000F6
  7142                           ;	unspecified, using default values
  7143   2000F6                     	org	2097398
  7144   2000F6  FFFF               	dw	65535
  7145                           
  7146                           ;Config register IDLOC124 @ 0x2000F8
  7147                           ;	unspecified, using default values
  7148   2000F8                     	org	2097400
  7149   2000F8  FFFF               	dw	65535
  7150                           
  7151                           ;Config register IDLOC125 @ 0x2000FA
  7152                           ;	unspecified, using default values
  7153   2000FA                     	org	2097402
  7154   2000FA  FFFF               	dw	65535
  7155                           
  7156                           ;Config register IDLOC126 @ 0x2000FC
  7157                           ;	unspecified, using default values
  7158   2000FC                     	org	2097404
  7159   2000FC  FFFF               	dw	65535
  7160                           
  7161                           ;Config register IDLOC127 @ 0x2000FE
  7162                           ;	unspecified, using default values
  7163   2000FE                     	org	2097406
  7164   2000FE  FFFF               	dw	65535
  7165                           
  7166                           	psect	config
  7167                           
  7168                           ;Config register CONFIG1L @ 0x300000
  7169                           ;	External Oscillator mode Selection bits
  7170                           ;	FEXTOSC = OFF, Oscillator not enabled
  7171                           ;	Power-up default value for COSC bits
  7172                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  7173   300000                     	org	3145728
  7174   300000  EC                 	db	236
  7175                           
  7176                           ;Config register CONFIG1H @ 0x300001
  7177                           ;	Clock Out Enable bit
  7178                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7179                           ;	Clock Switch Enable bit
  7180                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7181                           ;	Fail-Safe Clock Monitor Enable bit
  7182                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7183   300001                     	org	3145729
  7184   300001  FF                 	db	255
  7185                           
  7186                           ;Config register CONFIG2L @ 0x300002
  7187                           ;	Master Clear Enable bit
  7188                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  7189                           ;	Power-up Timer Enable bit
  7190                           ;	PWRTE = OFF, Power up timer disabled
  7191                           ;	Low-power BOR enable bit
  7192                           ;	LPBOREN = OFF, Low power BOR is disabled
  7193                           ;	Brown-out Reset Enable bits
  7194                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7195   300002                     	org	3145730
  7196   300002  FF                 	db	255
  7197                           
  7198                           ;Config register CONFIG2H @ 0x300003
  7199                           ;	Brown Out Reset Voltage selection bits
  7200                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  7201                           ;	ZCD Disable bit
  7202                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7203                           ;	PPSLOCK bit One-Way Set Enable bit
  7204                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
  7205                           ;	Stack Full/Underflow Reset Enable bit
  7206                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7207                           ;	Extended Instruction Set Enable bit
  7208                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7209   300003                     	org	3145731
  7210   300003  F7                 	db	247
  7211                           
  7212                           ;Config register CONFIG3L @ 0x300004
  7213                           ;	WDT Period Select bits
  7214                           ;	WDTCPS = WDTCPS_12, Divider ratio 1:131072
  7215                           ;	WDT operating mode
  7216                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
  7217   300004                     	org	3145732
  7218   300004  AC                 	db	172
  7219                           
  7220                           ;Config register CONFIG3H @ 0x300005
  7221                           ;	WDT Window Select bits
  7222                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7223                           ;	WDT input clock selector
  7224                           ;	WDTCCS = SC, Software Control
  7225   300005                     	org	3145733
  7226   300005  FF                 	db	255
  7227                           
  7228                           ;Config register CONFIG4L @ 0x300006
  7229                           ;	Write Protection Block 0
  7230                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7231                           ;	Write Protection Block 1
  7232                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7233                           ;	Write Protection Block 2
  7234                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7235                           ;	Write Protection Block 3
  7236                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7237                           ;	Write Protection Block 4
  7238                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  7239                           ;	Write Protection Block 5
  7240                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  7241                           ;	Write Protection Block 6
  7242                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  7243                           ;	Write Protection Block 7
  7244                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  7245   300006                     	org	3145734
  7246   300006  FF                 	db	255
  7247                           
  7248                           ;Config register CONFIG4H @ 0x300007
  7249                           ;	Configuration Register Write Protection bit
  7250                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  7251                           ;	Boot Block Write Protection bit
  7252                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7253                           ;	Data EEPROM Write Protection bit
  7254                           ;	WRTD = OFF, Data EEPROM not write-protected
  7255                           ;	Scanner Enable bit
  7256                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  7257                           ;	Low Voltage Programming Enable bit
  7258                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7259   300007                     	org	3145735
  7260   300007  FF                 	db	255
  7261                           
  7262                           ;Config register CONFIG5L @ 0x300008
  7263                           ;	UserNVM Program Memory Code Protection bit
  7264                           ;	CP = OFF, UserNVM code protection disabled
  7265                           ;	DataNVM Memory Code Protection bit
  7266                           ;	CPD = OFF, DataNVM code protection disabled
  7267   300008                     	org	3145736
  7268   300008  FF                 	db	255
  7269                           
  7270                           ;Config register CONFIG5H @ 0x300009
  7271                           ;	unspecified, using default values
  7272   300009                     	org	3145737
  7273   300009  FF                 	db	255
  7274                           
  7275                           ;Config register CONFIG6L @ 0x30000A
  7276                           ;	Table Read Protection Block 0
  7277                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7278                           ;	Table Read Protection Block 1
  7279                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7280                           ;	Table Read Protection Block 2
  7281                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7282                           ;	Table Read Protection Block 3
  7283                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7284                           ;	Table Read Protection Block 4
  7285                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  7286                           ;	Table Read Protection Block 5
  7287                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  7288                           ;	Table Read Protection Block 6
  7289                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  7290                           ;	Table Read Protection Block 7
  7291                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  7292   30000A                     	org	3145738
  7293   30000A  FF                 	db	255
  7294                           
  7295                           ;Config register CONFIG6H @ 0x30000B
  7296                           ;	Boot Block Table Read Protection bit
  7297                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7298   30000B                     	org	3145739
  7299   30000B  FF                 	db	255
  7300                           tosu	equ	0xFFF
  7301                           tosh	equ	0xFFE
  7302                           tosl	equ	0xFFD
  7303                           stkptr	equ	0xFFC
  7304                           pclatu	equ	0xFFB
  7305                           pclath	equ	0xFFA
  7306                           pcl	equ	0xFF9
  7307                           tblptru	equ	0xFF8
  7308                           tblptrh	equ	0xFF7
  7309                           tblptrl	equ	0xFF6
  7310                           tablat	equ	0xFF5
  7311                           prodh	equ	0xFF4
  7312                           prodl	equ	0xFF3
  7313                           indf0	equ	0xFEF
  7314                           postinc0	equ	0xFEE
  7315                           postdec0	equ	0xFED
  7316                           preinc0	equ	0xFEC
  7317                           plusw0	equ	0xFEB
  7318                           fsr0h	equ	0xFEA
  7319                           fsr0l	equ	0xFE9
  7320                           wreg	equ	0xFE8
  7321                           indf1	equ	0xFE7
  7322                           postinc1	equ	0xFE6
  7323                           postdec1	equ	0xFE5
  7324                           preinc1	equ	0xFE4
  7325                           plusw1	equ	0xFE3
  7326                           fsr1h	equ	0xFE2
  7327                           fsr1l	equ	0xFE1
  7328                           bsr	equ	0xFE0
  7329                           indf2	equ	0xFDF
  7330                           postinc2	equ	0xFDE
  7331                           postdec2	equ	0xFDD
  7332                           preinc2	equ	0xFDC
  7333                           plusw2	equ	0xFDB
  7334                           fsr2h	equ	0xFDA
  7335                           fsr2l	equ	0xFD9
  7336                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    126
    Data        0
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      93
    BANK0           160      0      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    S967$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), LAB_ISR(), 

    S1696$20$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    S1696$21$0	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2717$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S2717$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2756$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    EUSART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    EUSART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), NULL(), 

    S1696$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1696$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1696$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    EUSART1.OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    S1696$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    EUSART1.FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    S1696$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1696$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1696$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1696$ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    EUSART1.ErrorGet	PTR FTN()unsigned int  size(3) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    S1696$BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.BaudRateGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1696$BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.BaudRateSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1696$BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.BRGCountGet	PTR FTN()unsigned long  size(3) Largest target is 1
		 -> NULL(), 

    S1696$BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.BRGCountSet	PTR FTN(unsigned long ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S1696$AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    EUSART1.AutoBaudEventEnableGet	PTR FTN()_Bool  size(3) Largest target is 1
		 -> NULL(), 

    S1696$AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    EUSART1.AutoBaudQuery	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    S1696$AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    EUSART1.AutoBaudSet	PTR FTN(_Bool ,)void  size(3) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    S1696$TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    EUSART1.TransmitDisable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    S1696$TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    EUSART1.TransmitEnable	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    S1696$IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    EUSART1.IsTxDone	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    S1696$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    EUSART1.IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    S1696$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    EUSART1.IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    S1696$Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    EUSART1.Write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> EUSART1_Write(), 

    S1696$Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    EUSART1.Read	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> EUSART1_Read(), 

    S1696$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    EUSART1.Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    S1696$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    EUSART1.Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Initialize(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), LAB_ISR(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), NULL(), 
		 -> LAB_ISR(), 

    tmr0.Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Tasks(), TMR1_Tasks(), NULL(), 

    tmr0.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR0_OverflowCallbackRegister(), 

    tmr0.PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR2_PeriodCountSet(), TMR1_Write(), 

    tmr0.Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR2_Stop(), TMR1_Stop(), 

    tmr0.Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR2_Start(), TMR1_Start(), 

    tmr0.Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Initialize(), TMR1_Initialize(), TMR0_Initialize(), 

    TMR2_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), LAB_ISR(), 

    TMR2_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), NULL(), 
		 -> LAB_ISR(), 

    tmr2.Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Tasks(), TMR1_Tasks(), NULL(), 

    tmr2.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR0_OverflowCallbackRegister(), 

    tmr2.PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR2_PeriodCountSet(), TMR1_Write(), 

    tmr2.Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR2_Stop(), TMR1_Stop(), 

    tmr2.Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR2_Start(), TMR1_Start(), 

    tmr2.Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Initialize(), TMR1_Initialize(), TMR0_Initialize(), 

    TMR1_GateCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultGateCallback(), 

    TMR1_GateCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR1_DefaultGateCallback(), NULL(), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), LAB_ISR(), 

    TMR1_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), NULL(), 
		 -> LAB_ISR(), 

    S967TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Tasks(), TMR1_Tasks(), NULL(), 

    tmr1.Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Tasks(), TMR1_Tasks(), NULL(), 

    S967TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR0_OverflowCallbackRegister(), 

    tmr1.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR0_OverflowCallbackRegister(), 

    S967TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR2_PeriodCountSet(), TMR1_Write(), 

    tmr1.PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), TMR2_PeriodCountSet(), TMR1_Write(), 

    S967TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR2_Stop(), TMR1_Stop(), 

    tmr1.Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), TMR2_Stop(), TMR1_Stop(), 

    S967TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR2_Start(), TMR1_Start(), 

    tmr1.Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), TMR2_Start(), TMR1_Start(), 

    S967TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Initialize(), TMR1_Initialize(), TMR0_Initialize(), 

    tmr1.Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_Initialize(), TMR1_Initialize(), TMR0_Initialize(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), INT2_DefaultInterruptHandler(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), INT1_DefaultInterruptHandler(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), INT0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_ADC
    _main->_VSR
    _VSR->_printf
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_OverflowCallbackRegister
    _TMR1_Initialize->_TMR1_GateCallbackRegister
    _TMR1_Initialize->_TMR1_OverflowCallbackRegister
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_FramingErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_OverrunErrorCallbackRegister
    _PWM->_printf
    _Interrupt->_TMR0_OverflowCallbackRegister
    _EEPROM->_EEPROM_Write
    _TMR1_Reload->_TMR1_Write
    _ADC->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   18671
                                             73 COMRAM     2     2      0
                                _ADC
                              _Blink
                             _EEPROM
                         _HelloWorld
                          _Interrupt
                                _PWM
                             _Rotate
                  _SYSTEM_Initialize
                        _SleepWakeUp
                             _Timers
                                _VSR
                      _checkButtonS1
                            _nextLab
 ---------------------------------------------------------------------------------
 (1) _nextLab                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS1                                        1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _VSR                                                  3     3      0    5500
                                             70 COMRAM     3     3      0
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Timers                                               0     0      0     164
            _TMR1_HasOverflowOccured
                        _TMR1_Reload
                         _TMR1_Start
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (1) _SleepWakeUp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1002
                    _ADCC_Initialize
                   _CLOCK_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
      _TMR2_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR2_OverflowCallbackRegister                        3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     196
                                              5 COMRAM     2     2      0
          _TMR1_GateCallbackRegister
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR1_OverflowCallbackRegister                        3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _TMR1_GateCallbackRegister                            3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     240
_EUSART1_FramingErrorCallbackRegiste
_EUSART1_OverrunErrorCallbackRegiste
 ---------------------------------------------------------------------------------
 (3) _EUSART1_OverrunErrorCallbackRegister                 3     0      3     120
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_FramingErrorCallbackRegister                 3     0      3     120
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Rotate                                               1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM                                                  1     1      0    5620
                                             70 COMRAM     1     1      0
           _ADCC_GetSingleConversion
                 _PWM3_LoadDutyValue
              _PWM_Output_D5_Disable
               _PWM_Output_D5_Enable
                         _TMR2_Start
                          _TMR2_Stop
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D5_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D5_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     120
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt                                            0     0      0     174
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR0_OverflowCallbackRegister                        3     0      3     174
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _HelloWorld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM                                               1     1      0     547
                                             10 COMRAM     1     1      0
           _ADCC_GetSingleConversion
                        _EEPROM_Read
                       _EEPROM_Write
                   _NVM_UnlockKeySet
 ---------------------------------------------------------------------------------
 (2) _NVM_UnlockKeySet                                     2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         8     4      4     263
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          6     3      3     142
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Blink                                                1     1      0     164
                                              4 COMRAM     1     1      0
            _TMR1_HasOverflowOccured
                        _TMR1_Reload
                         _TMR1_Start
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Reload                                          0     0      0     164
                         _TMR1_Write
 ---------------------------------------------------------------------------------
 (3) _TMR1_Write                                           2     0      2     164
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  3     3      0    5500
                                             70 COMRAM     3     3      0
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    5478
                                             64 COMRAM     6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5196
                                             56 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    4846
                                             42 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3626
                                             29 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             5     3      2      22
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                    _PIN_MANAGER_IOC
                   _TMR0_OverflowISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_OverflowISR                                    0     0      0       0
                                NULL *
                            _LAB_ISR *
       _TMR0_DefaultOverflowCallback *
       _TMR1_DefaultOverflowCallback *
       _TMR2_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _LAB_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _ADCC_GetSingleConversion
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _Blink
     _TMR1_HasOverflowOccured
     _TMR1_Reload
       _TMR1_Write
     _TMR1_Start
     _TMR1_Stop
   _EEPROM
     _ADCC_GetSingleConversion
     _EEPROM_Read
     _EEPROM_Write
     _NVM_UnlockKeySet
   _HelloWorld
   _Interrupt
     _TMR0_OverflowCallbackRegister
   _PWM
     _ADCC_GetSingleConversion
     _PWM3_LoadDutyValue
     _PWM_Output_D5_Disable
     _PWM_Output_D5_Enable
     _TMR2_Start
     _TMR2_Stop
     _printf
   _Rotate
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CLOCK_Initialize
     _EUSART1_Initialize
       _EUSART1_FramingErrorCallbackRegister
       _EUSART1_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
     _TMR1_Initialize
       _TMR1_GateCallbackRegister
       _TMR1_OverflowCallbackRegister
     _TMR2_Initialize
       _TMR2_OverflowCallbackRegister
   _SleepWakeUp
   _Timers
     _TMR1_HasOverflowOccured
     _TMR1_Reload
     _TMR1_Start
     _TMR1_Stop
   _VSR
     _ADCC_GetSingleConversion
     _printf
   _checkButtonS1
   _nextLab

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR0_OverflowISR
     NULL(Fake) *
     _LAB_ISR *
     _TMR0_DefaultOverflowCallback *
     _TMR1_DefaultOverflowCallback *
     _TMR2_DefaultOverflowCallback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR          100      0       0      57        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      46       5       43.8%
BITBIGSFR_1lll      7C      0       0      55        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      5D       1       98.9%
BITBIGSFR_1lhlh     27      0       0      43        0.0%
BITBANK14           1F      0       0      30        0.0%
BANK14              1F      0       0      31        0.0%
BIGRAM_1            1F      0       0      56        0.0%
BITBIGSFR_1hlhh     1C      0       0      34        0.0%
BITBIGSFR_1llhl     14      0       0      54        0.0%
BITBIGSFR_1lhlh      E      0       0      45        0.0%
BITBIGSFR_1lhll      D      0       0      46        0.0%
BITBIGSFR_1hlhl      C      0       0      35        0.0%
BITBIGSFR_1lhlh      C      0       0      44        0.0%
BITBIGSFR_1llhl      C      0       0      53        0.0%
BITBIGSFR_1hlhl      C      0       0      36        0.0%
BITBIGSFR_1hlll      A      0       0      39        0.0%
BITBIGSFR_1lhhh      A      0       0      42        0.0%
BITBIGSFR_1hllh      8      0       0      37        0.0%
BITBIGSFR_1hhh       7      0       0      32        0.0%
BITBIGSFR_1llhh      7      0       0      52        0.0%
BITBIGSFR_1lhll      5      0       0      49        0.0%
BITBIGSFR_1hlll      3      0       0      38        0.0%
BITBIGSFR_1hhl       2      0       0      33        0.0%
BITBIGSFR_1lhll      2      0       0      50        0.0%
BITBIGSFR_1lhhh      1      0       0      41        0.0%
BITBIGSFR_1lhll      1      0       0      47        0.0%
BITBIGSFR_1lhll      1      0       0      48        0.0%
BITBIGSFR_1llhh      1      0       0      51        0.0%
BITBIGSFR_1hlll      1      0       0      40        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3      58        0.0%
DATA                 0      0      A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 01 15:52:37 2023

                   fp__TMR2_OverflowCallbackRegister 0000                       ?_TMR2_OverflowCallbackRegister 0003  
                                                 l22 1EF4                                                   l17 1ECA  
                                                 l19 1EDE                                                   l60 188E  
                                                 l55 1834                                                   l83 1B4E  
                                                 l87 1BA8                                         ___awdiv@sign 0008  
                                                l110 19C0                                                  l113 1A34  
                                                l140 16A0                                                  l141 172E  
                                                l231 1ABC                                                  l224 1A4C  
                                                l147 1742                                                  l316 18A4  
                                                l260 1CC2                                                  l228 1A7C  
                                                l317 190A                                                  l406 1FAE  
                                                l190 2184                                                  l319 191E  
                                                _ADC 19AC                                                  l409 1FCE  
                                                l265 1CF2                                                  l193 21A0  
                                                l266 1CF6                                                  l610 21B8  
                                                l267 1CFE                                                  l187 19AA  
                                                l704 222A                                                  l800 2200  
                                                l633 2050                                                  l289 1CAA  
                                                l394 1C56                                                  l717 221C  
                                                l813 220E                                                  l806 21E4  
                                                l670 1E30                                                  l486 21CE  
                                                l489 1F9E                                                  l594 168A  
                                                l691 2238                                                  l771 1C00  
                                                l774 2278                                                  l951 2246  
                                                l785 20A0                                                  l777 2274  
                                                l929 2078                                                  l865 1FFA  
                                                l874 2270                                                  l788 2254  
                                                l877 226C                                                  l889 21F2  
                                                u430 1EC6                                                  _PR2 0FBB  
                                                u431 1EC2                                                  u440 1EDE  
                                                u520 1B48                                                  u441 1EDA  
                                                u521 1B44                                                  u450 1EF0  
                                                u530 1B66                                                  u451 1EEC  
                                                u531 1B62                                                  u380 21E2  
                                                u540 1B8A                                                  u381 21DC  
                                                u541 1B86                                                  u550 1BA4  
                                                u551 1BA0                                                  u800 1CA6  
                                                u801 1CA2                                                  u386 21E4  
                                                u900 2164                                                  u901 2160  
                                                u780 1C68                                                  u781 1C64  
                                                u790 1C8A                                                  u870 1D62  
                                                u791 1C86                                                  u871 1D5E  
                                                u880 1D70                                                  u881 1D6C  
                                                u890 1D96                                                  u891 1D92  
                                                _PWM 1920                                                  _VSR 168C  
                         ??_INT0_SetInterruptHandler 0006                                      _timer1ReloadVal 0084  
                                                _abs 1EF6                                                  _pad 1ABE  
                                       ___awmod@sign 0008                                      _TMR2_Initialize 1FD0  
                                                tosl 0FFD                                                  wreg 0FE8  
                  __end_of_TMR1_GateCallbackRegister 2210                                      __end_of_LAB_ISR 214E  
                                               ?_ADC 0001                                         _BAUD1CONbits 0F9E  
                                               ?_PWM 0001                                      __end_of_EUSART1 1049  
                                               ?_VSR 0001                                                 l2002 1358  
                                               l1019 1EB4                                                 ?_abs 0009  
                                               l2012 1F2C                                                 l1220 2268  
                                               l2015 1F34                                                 l1223 225E  
                                               l1207 2264                                                 l2008 1D50  
                                               l2027 1508                                                 l2035 1E74  
                                               l1164 1D88                                                 l1172 2168  
                                               l2038 227A                                                 l1094 212C  
                                               l1503 15CC                                                 l3200 1452  
                                               l2320 226E                                                 l2400 1634  
                                               l1168 1D9E                                                 l3202 1464  
                                               l1266 2026                                                 l2330 219E  
                                               l2314 216A                                                 l2410 21A2  
                                               l1098 210A                                                 l2402 163A  
                                               l3220 150A                                                 l1516 17F2  
                                               l3204 146E                                                 l3212 1E32  
                                               l3300 1ABE                                                 l2316 2174  
                                               l2324 226A                                                 l2404 163C  
                                               l1269 1DEA                                                 l3230 1536  
                                               l3222 150E                                                 l3206 148C  
                                               l3214 1E3E                                                 l3310 1B04  
                                               l3302 1ACC                                                 l2326 2186  
                                               l2318 2182                                                 l2510 1B4C  
                                               l2406 163E                                                 l3240 1564  
                                               l3232 153E                                                 l3224 151C  
                                               l3208 14C2                                                 l3216 1E50  
                                               l3312 1B22                                                 l3304 1AD8  
                                               l3320 10A6                                                 l2328 2190  
                                               l2520 1B8A                                                 l2512 1B56  
                                               l3400 222C                                                 l2408 1640  
                                               l3250 159E                                                 l3242 156C  
                                               l3234 1542                                                 l3226 1524  
                                               l3314 1EF6                                                 l3218 1E54  
                                               l3306 1AEC                                                 l3330 10FA  
                                               l3322 10B6                                                 l3410 207A  
                                               l2522 1B8E                                                 l2514 1B66  
                                               l2506 1B38                                                 l3402 221E  
                                               l2274 2266                                                 l2418 2260  
                                               l3260 15C4                                                 l3252 15A0  
                                               l3244 157A                                                 l3236 154A  
                                               l3228 1528                                                 l3316 1F10  
                                               l3308 1B00                                                 l3340 1130  
                                               l3332 1100                                                 l3324 10BE  
                                               l3412 2088                                                 l3420 2098  
                                               l3500 2000                                                 l2516 1B74  
                                               l2524 1B94                                                 l2508 1B48  
                                               l2380 1C50                                                 l3404 2210  
                                               l2700 1D70                                                 l3254 15A6  
                                               l3246 1580                                                 l3238 155C  
                                               l3270 175E                                                 l3350 117C  
                                               l3342 1138                                                 l3334 1110  
                                               l3326 10CE                                                 l3318 1092  
                                               l3422 209C                                                 l3414 208A  
                                               l2286 2276                                                 l2294 2272  
                                               l3502 201A                                                 l2470 1ECE  
                                               l2526 1BA4                                                 l2518 1B78  
                                               l2382 1C54                                                 l3430 20EA  
                                               l2390 15EC                                                 l3406 21F4  
                                               l2702 1D80                                                 l2710 2154  
                                               l3248 1596                                                 l3256 15AC  
                                               l3280 1792                                                 l3272 1762  
                                               l3264 1744                                                 l3360 11EE  
                                               l3344 113E                                                 l3352 1198  
                                               l3336 111C                                                 l3328 10EA  
                                               l3440 1D48                                                 l3600 19D4  
                                               l2288 21D0                                                 l3416 208E  
                                               l3504 201E                                                 l2472 1EE0  
                                               l3432 20FE                                                 l3512 1E76  
                                               l2392 1600                                                 l2384 21BA  
                                               l3520 205E                                                 l3408 2202  
                                               l3424 21E6                                                 l2704 1D96  
                                               l2712 2164                                                 l3450 1FAA  
                                               l3258 15BC                                                 l3290 17CC  
                                               l3282 179A                                                 l3274 1770  
                                               l3266 1748                                                 l3362 11F4  
                                               l3354 11B2                                                 l3346 1170  
                                               l3338 1124                                                 l3370 124E  
                                               l3434 1D00                                                 l3602 19EE  
                                               l3418 2092                                                 l3506 2020  
                                               l2474 1EF0                                                 l2466 1EB6  
                                               l2378 1C02                                                 l3426 210C  
                                               l3514 1E8A                                                 l2394 162E  
                                               l2386 15CE                                                 l3522 206E  
                                               l3530 1BBE                                                 l2650 1C8A  
                                               l2642 1C58                                                 l3610 168C  
                                               l2706 214E                                                 l3452 1FAC  
                                               l3284 17A8                                                 l3292 17D2  
                                               l3276 1778                                                 l3268 1756  
                                               l3364 1204                                                 l3356 11C4  
                                               l3348 1176                                                 l3380 129E  
                                               l3372 125C                                                 l3436 1D0C  
                                               l3460 20AA                                                 l3604 1A1A  
                                               l3444 2248                                                 l3508 2022  
                                               l2468 1EC6                                                 l3700 1CDE  
                                               l3428 2120                                                 l3516 1E9A  
                                               l2396 1630                                                 l2388 15E6  
                                               l3524 2072                                                 l3540 1BFC  
                                               l3532 1BD6                                                 l2652 1C96  
                                               l2644 1C68                                                 l3620 16F4  
                                               l3612 169C                                                 l2708 2152  
                                               l3454 1FBC                                                 l3446 1FA2  
                                               l3294 17E2                                                 l3286 17BE  
                                               l3278 178A                                                 l3198 1440  
                                               l3358 11DE                                                 l3382 12BE  
                                               l3374 126A                                                 l3438 1D28  
                                               l1950 20C6                                                 l3606 1A20  
                                               l3710 18A0                                                 l2398 1632  
                                               l3526 2074                                                 l3518 2052  
                                               l3534 1BE6                                                 l3550 1FF6  
                                               l3542 1FD0                                                 l2654 1CA6  
                                               l2646 1C76                                                 l3630 173E  
                                               l3614 16A8                                                 l3448 1FA6  
                                               l3296 17EA                                                 l3288 17C6  
                                               l3384 1302                                                 l3376 126E  
                                               l3392 132C                                                 l3368 1226  
                                               l3608 1A30                                                 l3480 1DA8  
                                               l3720 18F2                                                 l3712 18A8  
                                               l3704 1CE2                                                 l3464 1F6C  
                                               l3640 1940                                                 l3632 1920  
                                               l3560 1E1A                                                 l3552 1DEC  
                                               l3536 1BF6                                                 l3528 1BAA  
                                               l3544 1FDC                                                 l2648 1C7A  
                                               l3624 16FC                                                 l3616 16B8  
                                               l3378 127E                                                 l3458 20A2  
                                               l3570 180C                                                 l3490 1DD0  
                                               l3482 1DAC                                                 l3474 2256  
                                               l3722 1904                                                 l3714 18B8  
                                               l3706 1CFA                                                 l3650 199E  
                                               l3642 1950                                                 l3634 1930  
                                               l3562 1E1E                                                 l3554 1DF4  
                                               l3538 1BFA                                                 l3546 1FE2  
                                               l3730 2038                                                 l3626 170E  
                                               l3618 16C8                                                 l1972 1AE0  
                                               l3388 131A                                                 l3580 183C  
                                               l3572 1810                                                 l3564 17F4  
                                               l3492 1DD4                                                 l3484 1DC6  
                                               l3476 225A                                                 l3724 191A  
                                               l3716 18D2                                                 l3708 1890  
                                               l3652 19A2                                                 l3644 196E  
                                               l3636 1934                                                 l3556 1E04  
                                               l3548 1FF2                                                 l3740 204C  
                                               l3732 203C                                                 l3660 1A50  
                                               l3628 172A                                                 l1981 10DA  
                                               l3590 1886                                                 l3582 183E  
                                               l3566 1804                                                 l3494 1DDE  
                                               l3486 1DCA                                                 l3478 1DA0  
                                               l3718 18DE                                                 l3398 223A  
                                               l3646 1982                                                 l3638 193C  
                                               l3558 1E08                                                 l3734 2040  
                                               l3726 2028                                                 l3670 1A80  
                                               l3662 1A54                                                 l3654 1A36  
                                               l3830 135E                                                 ?_pad 0013  
                                               l1983 10E2                                                 l1976 1B36  
                                               l1984 1128                                                 l3592 188A  
                                               l3584 1850                                                 l3576 1820  
                                               l3568 1808                                                 l3496 1DE8  
                                               l3488 1DCE                                                 l3648 198E  
                                               l3736 2044                                                 l3728 2034  
                                               l3672 1A84                                                 l3680 1AA4  
                                               l3656 1A46                                                 l3664 1A58  
                                               l2696 1D52                                                 l3840 1382  
                                               l3832 1362                                                 l3594 19AC  
                                               l3586 1872                                                 l3578 1838  
                                               l3498 1FFC                                                 l3690 1CC0  
                                               l3738 2048                                                 l3682 1AB4  
                                               l3674 1A88                                                 l3658 1A4A  
                                               l2698 1D62                                                 l3850 13AA  
                                               l3842 138A                                                 l3834 136A  
                                               l1995 1224                                                 l3596 19BC  
                                               l3588 1876                                                 l3692 1CC6  
                                               l3684 1AB8                                                 l3676 1A9A  
                                               l3668 1A68                                                 l3860 1434  
                                               l3852 13B2                                                 l3844 1392  
                                               l3836 1372                                                 l3828 135A  
                                               l3598 19C4                                                 l3694 1CC8  
                                               l3686 1CAC                                                 l3678 1A9E  
                                               l3846 139A                                                 l3838 137A  
                                               l3696 1CCA                                                 l3688 1CBC  
                                               l3848 13A2                                                 l3856 13BA  
                                               l3698 1CCE                                                 l3858 1424  
                                               l3898 13CE                                                 STR_1 107F  
                                               STR_2 107F                                                 STR_3 107F  
                                               u2000 1CF2                                                 u2001 1CEE  
                                               u2010 18A0                                                 u2011 189C  
                                               u2020 18B8                                                 u2021 18B4  
                                               u1400 157A                                                 u1320 1452  
                                               u2040 191A                                                 u1401 1576  
                                               u1321 144E                                                 u2041 1916  
                                               u1410 1596                                                 u1330 1464  
                                               u1411 1592                                                 u1331 1460  
                                               u2035 18C2                                                 u1420 15BC  
                                               u1340 148C                                                 u1500 1B22  
                                               u2300 1434                                                 u1421 15B8  
                                               u1341 1488                                                 u1501 1B1E  
                                               u2301 1430                                                 _LATA 0F82  
                                               u1430 1756                                                 u1510 1F10  
                                               u1350 14C2                                                 _LATB 0F83  
                                               u1431 1752                                                 u1511 1F0C  
                                               u1351 14BE                                                 _LATC 0F84  
                                               u1440 1770                                                 u1360 1E74  
                                               u1600 11DE                                                 u1520 10A2  
                                               _LATD 0F85                                                 u1441 176C  
                                               u1361 1E70                                                 u1601 11DA  
                                               u1521 109C                                                 _LATE 0F86  
                                               u1370 151C                                                 u1450 178A  
                                               u1610 11EE                                                 u1530 10A4  
                                               u1371 1518                                                 u1451 1786  
                                               u1611 11EA                                                 u1380 1536  
                                               u1460 17A8                                                 u1540 10B6  
                                               u1620 124E                                                 u1381 1532  
                                               u1461 17A4                                                 u1541 10B2  
                                               u1621 124A                                                 u2317 1D76  
                                               u1390 155C                                                 u1470 17BE  
                                               u1550 10CE                                                 u1630 129E  
                                               u1391 1558                                                 u1471 17BA  
                                               u1551 10CA                                                 u1631 129A  
                                               u2327 16F6                                                 u1480 17E2  
                                               u1560 10FA                                                 u1640 12BE  
                                               u1800 19D4                                                 u1481 17DE  
                                               u1561 10F6                                                 u1641 12BA  
                                               u1801 19D0                                                 u1705 1F90  
                                               u2337 1B6C                                                 u1490 1ACC  
                                               u1570 1110                                                 u1650 2088  
                                               u1730 1804                                                 _T2PR 0FBB  
                                               u1491 1AC8                                                 u1571 110C  
                                               u1651 2084                                                 u1731 1800  
                                               u1580 11B2                                                 u1740 1820  
                                               u1900 1930                                                 u1660 2120  
                                               u1581 11AE                                                 u1741 181C  
                                               u1725 1DE6                                                 u1901 192C  
                                               u1661 211C                                                 u1590 11C4  
                                               u1830 1A30                                                 u1750 1834  
                                               u1726 1DE8                                                 u1910 1950  
                                               u1670 20FE                                                 u1591 11C0  
                                               u1831 1A2C                                                 u1815 19DE  
                                               u1751 1830                                                 u1911 194C  
                                               u1671 20FA                                                 u1680 1D48  
                                               u1760 1850                                                 u1840 169C  
                                               u1681 1D44                                                 u1825 1A02  
                                               u1761 184C                                                 u1841 1698  
                                               u1690 1FBC                                                 u1770 1860  
                                               u1930 199E                                                 u1850 16B8  
                                               u1691 1FB8                                                 u1771 185A  
                                               u1931 199A                                                 u1851 16B4  
                                               u1780 1886                                                 u1940 1A46  
                                               u1781 1882                                                 u1925 195A  
                                               u1941 1A42                                                 u1790 19BC  
                                               u1950 1A68                                                 u1870 170E  
                                               u1791 19B8                                                 u1951 1A64  
                                               u1871 170A                                                 u1776 1862  
                                               u1960 1A7C                                                 u1880 172A  
                                               u1961 1A78                                                 u1881 1726  
                                               u1865 16DC                                                 u1970 1A9A  
                                               u1890 173E                                                 u1971 1A96  
                                               u1891 173A                                                 u1980 1AB4  
                                               u1981 1AB0                                                 u1990 1CBC  
                                               u1991 1CB8                              _TMR1_HasOverflowOccured 21D0  
                                               _TMR2 0FBA                                                 _WPUA 0F0B  
                                               _WPUB 0F13                                                 _WPUC 0F1B  
                                               _WPUD 0F20                                                 _WPUE 0F28  
                                      _EUSART1_Write 0000                              __end_of_NVM_StatusClear 226A  
                                               abs@a 0009                                                 _dbuf 0086  
                                               _main 135A                                                 _dtoa 1092  
                                               _tmr0 1049                                                 _tmr1 106D  
                                               _tmr2 105B                                                 _prec 0080  
                                               pad@i 001A                                                 pad@p 0017  
                                               fsr1h 0FE2                                                 fsr2h 0FDA  
                                               indf2 0FDF                                                 fsr1l 0FE1  
                                               pad@w 001C                                                 fsr2l 0FD9  
                                               btemp 005E                                         _unlockKeyLow 0050  
                          ?_INT2_SetInterruptHandler 0003                                                 start 0076  
                                        _switchEvent 005C                                         ___param_bank 0000  
                                              ??_ADC 0047                                     _TMR0_OverflowISR 1F36  
                                              ??_PWM 0047                                                ??_VSR 0047  
                                              ??_abs 000B                                 __end_of_EEPROM_Write 1DEC  
                                              ??_pad 0019                              __end_of_TMR0_Initialize 207A  
                     ??_TMR1_DefaultOverflowCallback 0001                                                _ADACQ 0F57  
                                              _ADCAP 0F58                                                _ADACT 0F51  
                                              ?_main 0001                                                ?_dtoa 001E  
                                              _ADCLK 0F52                                                _ADCNT 0F62  
                                              _ADPCH 0F5A                                                _ADREF 0F53  
                                    __end_of___awdiv 15CE                                                _ADRES 0F5E  
                                              _ADPRE 0F59                                      __end_of___awmod 17F4  
                                              _ADRPT 0F61                                                _T1CLK 0FD1  
                                    ___awdiv@divisor 0005                                                _T1CON 0FCE  
                                              _T2CON 0FBC                                                _IOCAF 0F05  
                                              _T2HLT 0FBD                                                _IOCBF 0F0D  
                                              _IOCCF 0F15                                                _IOCAN 0F06  
                                              _IOCEF 0F22                                                _IOCAP 0F07  
                                              _IOCBN 0F0E                                                _IOCBP 0F0F  
                                              _IOCCN 0F16                                                _IOCCP 0F17  
                                              _IOCEN 0F23                                                _IOCEP 0F24  
                                              _T2TMR 0FBA                                                _T2RST 0FBF  
                                              i2l271 214C                                                i2l803 227E  
                           _rotateReg@Interrupt$F303 0053                                                i2l680 006A  
                                              i2l681 006A                                                i2l675 0038  
                                              i2l597 2282                                                i2l954 227C  
                                              i2l892 2280                                                i2l948 1F6A  
                                    ___awdiv@counter 0007                                                _OSCEN 0ED7  
                                       vfpfcnvrt@fmt 002D                                                _TMR0H 0FD3  
                                              _TMR1H 0FCD                                                _TMR0L 0FD2  
                                              _TMR1L 0FCC                                                _TRISA 0F87  
                                              _TRISB 0F88                                                _TRISC 0F89  
                                              _TRISD 0F8A                                                _TRISE 0F8B  
                                              _Blink 17F4                             __end_of_NVM_UnlockKeySet 2260  
                                         _HelloWorld 1EB6              fp__EUSART1_FramingErrorCallbackRegister 0000  
       __end_of_EUSART1_FramingErrorCallbackRegister 212E               ??_EUSART1_FramingErrorCallbackRegister 0006  
              ?_EUSART1_FramingErrorCallbackRegister 0003                 _EUSART1_FramingErrorCallbackRegister 210C  
                                              _delay 0056                                          ?_TMR1_Start 0001  
                            __end_of_PIN_MANAGER_IOC 2284                                                _flags 004E  
                                        ?_TMR2_Start 0001                                          ?_TMR1_Write 0003  
                                              _fputc 1440                                                _fputs 1E32  
                                              pad@fp 0013                                                _width 007E  
                                    __end_of_nextLab 216A                                                _putch 227A  
                                              dtoa@d 0020                                                dtoa@i 0028  
                                              dtoa@p 0024                                                dtoa@s 002A  
                                              dtoa@w 0026                             _INT1_SetInterruptHandler 221E  
                                      _unlockKeyHigh 004F                              __end_of_PWM3_Initialize 21D0  
                            __end_of_TMR1_Initialize 1C02                                                pclath 0FFA  
                                              pclatu 0FFB                                                tablat 0FF5  
                              _EUSART1_AutoBaudQuery 0000                                                ttemp5 005F  
                                              ttemp6 0062                                                ttemp7 0066  
                                              status 0FD8                                                wtemp8 005F  
                             ??_PWM_Output_D5_Enable 0003                                     EEPROM_Write@data 0006  
                                    __initialization 20C8                           __end_of_EUSART1_Initialize 1EB6  
                                       __end_of_main 1440                                         __end_of_dtoa 1226  
                                       __end_of_tmr0 105B                                         __end_of_tmr1 107F  
                                       __end_of_tmr2 106D                              __end_of_TMR2_Initialize 1FFC  
                        ?_INTERRUPT_InterruptManager 0001                                               ??_main 004A  
                                             ??_dtoa 0022                                            ??_LAB_ISR 0001  
                                      __activetblptr 0003                                               ?_Blink 0001  
EUSART1_OverrunErrorCallbackRegister@callbackHandler 0003  EUSART1_FramingErrorCallbackRegister@callbackHandler 0003  
                          ??_TMR1_HasOverflowOccured 0003                                               _ADACCH 0F6C  
                                             _ADACCL 0F6B                                               _ADCON0 0F5B  
                                             _ADCON1 0F54                                               _ADCON2 0F55  
                                             _ADCON3 0F56                                               _ADERRH 0F6A  
                                             _ADERRL 0F69                                               ?_fputc 0003  
                                             _ADLTHH 0F66                                               _ADLTHL 0F65  
                                             ?_fputs 000C                                               _ADRESH 0F5F  
                                             _ADRESL 0F5E                                               _ADSTAT 0F60  
                                             _ADUTHH 0F68                                     ___awdiv@dividend 0003  
                                             _ADUTHL 0F67                __end_of_TMR1_OverflowCallbackRegister 2202  
                      _TMR1_OverflowCallbackRegister 21F4                                               _ANSELA 0F0C  
                                             ?_putch 0001                                               _ANSELB 0F14  
                                             _ANSELC 0F1C                                               _ANSELD 0F21  
                                             _ANSELE 0F29                                               _T0CON0 0FD4  
                                             _T0CON1 0FD5                                               _EEPROM 1890  
                                             _T1GATE 0FD0                                               _T1GCON 0FCF  
                                             _RC1REG 0F98                                               _RA5PPS 0EE7  
                                             _RC1STA 0F9C                                               _RA6PPS 0EE8  
                                             _RA7PPS 0EE9                                               _ODCONA 0F0A  
                                             _ODCONB 0F12                                               _RC6PPS 0EF8  
                                             _ODCONC 0F1A                                               _ODCOND 0F1F  
                                             _ODCONE 0F27                                               i2l3470 2142  
                                             i2l3472 2146                                               i2l3466 212E  
                                             i2l3468 213E                                               i2l3742 1F36  
                                             i2l3750 0022                                               i2l3744 1F3A  
                                             i2l3752 0030                                               _INLVLA 0F08  
                                             i2l3746 1F50                                               i2l3754 0046  
                                             _INLVLB 0F10                                               _INLVLC 0F18  
                                             i2l3756 0054                                               i2l3748 0012  
                                             _INLVLD 0F1D                                               _INLVLE 0F25  
                                             i2l3758 0062                                               _TABLAT 0FF5  
                                             _OSCFRQ 0ED9                                               _TMR0IE 75ED  
                                             _RX1PPS 0EB0                                               _TMR1IF 7648  
                                             _TX1REG 0F99                                               _TX1STA 0F9D  
                                   ?_NVM_StatusClear 0001                                        ??_SleepWakeUp 0003  
                                             _Timers 1A36                                         vfprintf@cfmt 003F  
                                             _Rotate 1B38                                         ?_TMR1_Reload 0001  
               __end_of_TMR2_DefaultOverflowCallback 2282                         _TMR2_DefaultOverflowCallback 2280  
                                  __end_of_TMR1_Stop 2276                                            ??___awdiv 0007  
                                          ??___awmod 0007                                    __end_of_TMR2_Stop 226E  
                                   ?_TMR0_Initialize 0001                                               clear_0 20CE  
                                             clear_1 20DA                                     ___awdiv@quotient 0009  
                                    ___awmod@divisor 0005                                               isa$std 0001  
                                    ___awmod@counter 0007                                               _printf 20A2  
                                             pad@buf 0015                                               dtoa@fp 001E  
                                  ?_CLOCK_Initialize 0001                                      _ADCC_Initialize 1C02  
                                             fputc@c 0003                         _INT2_DefaultInterruptHandler 0000  
                                             fputs@c 0010                                               fputs@i 0011  
                                             fputs@s 000C                          ??_TMR1_GateCallbackRegister 0006  
                                 ??_CLOCK_Initialize 0003                                            ??_nextLab 0003  
                                       __mediumconst 0000                                          ?_HelloWorld 0001  
                                             tblptrh 0FF7                                               tblptrl 0FF6  
                                             tblptru 0FF8              fp__EUSART1_OverrunErrorCallbackRegister 0000  
       __end_of_EUSART1_OverrunErrorCallbackRegister 210C               ??_EUSART1_OverrunErrorCallbackRegister 0006  
              ?_EUSART1_OverrunErrorCallbackRegister 0003                 _EUSART1_OverrunErrorCallbackRegister 20EA  
                                             putch@c 0001                                     __end_of_vfprintf 1D52  
                          ?_ADCC_GetSingleConversion 0003             INT2_SetInterruptHandler@InterruptHandler 0003  
           INT1_SetInterruptHandler@InterruptHandler 0003             INT0_SetInterruptHandler@InterruptHandler 0003  
                                   ?_PIN_MANAGER_IOC 0001                                     ??_NVM_Initialize 0003  
                                   ?_PWM3_Initialize 0001                                     ?_TMR1_Initialize 0001  
                            ??_PWM_Output_D5_Disable 0003                                    _SYSTEM_Initialize 2028  
                                         __accesstop 0060                              __end_of__initialization 20E0  
                                 ?_SYSTEM_Initialize 0001                                        ___rparam_used 0001  
                                      __end_of_Blink 1890                                       __pcstackCOMRAM 0001  
                                ??_SYSTEM_Initialize 0008                                  __end_of_SleepWakeUp 1CAC  
                                      __end_of_fputc 150A                                        __end_of_fputs 1E76  
                    fp__TMR2_DefaultOverflowCallback 0000                        ?_TMR2_DefaultOverflowCallback 0001  
                                      __end_of_putch 227C                                     ?_TMR2_Initialize 0001  
                              fp__EUSART1_Initialize 0000                                              ??_Blink 0005  
                   __end_of_INT2_SetInterruptHandler 221E                      ??_TMR2_OverflowCallbackRegister 0006  
                                  __end_of_Interrupt 1D00                             __end_of_TMR0_OverflowISR 1F6C  
                                            ??_fputc 0007                            __end_of_SYSTEM_Initialize 2052  
                                            ??_fputs 0010                                              ??_putch 0003  
                                            ?_EEPROM 0001                                         _EEPROM_Write 1DA0  
                                         __pbssBANK0 0060                                _INT0_InterruptHandler 007B  
                              _TMR0_OverflowCallback 0066                     fp__TMR1_OverflowCallbackRegister 0000  
                     ?_TMR1_OverflowCallbackRegister 0003                            _TMR1_GateCallbackRegister 2202  
                                            ?_Timers 0001                                              ?_Rotate 0001  
                            __end_of_ADCC_Initialize 1C58                                              _ADFLTRH 0F6E  
                                            _ADFLTRL 0F6D                                           _ledDisplay 0051  
                                            _ADPREVH 0F5D                                              _ADPREVL 0F5C  
                                   _EUSART1_IsTxDone 0000                                              _ADSTPTH 0F64  
                                            _ADSTPTL 0F63                                              ?_printf 0041  
                                   _EUSART1_ErrorGet 0000                                              _LAB_ISR 212E  
                         ??_INT1_SetInterruptHandler 0006                                              _EUSART1 1001  
                                            _SP1BRGH 0F9B                                              _SP1BRGL 0F9A  
                                            _OSCCON1 0ED3                                              _OSCCON3 0ED5  
                                            _TBLPTRH 0FF7                                              _TBLPTRL 0FF6  
                                            _TBLPTRU 0FF8                                              _NVMADRH 0F7A  
                                            _NVMADRL 0F79                                    ?_NVM_UnlockKeySet 0003  
                                            _NVMADRU 0F7B                                              _NVMDATH 0F7D  
                                            _OSCTUNE 0ED8                                              _PWM3DCH 0FA3  
                                            _NVMDATL 0F7C                                              _PWM3DCL 0FA2  
                                            _NVMCON2 0F81                                              _PWM3CON 0FA4  
                                            _SLRCONA 0F09                                              _SLRCONB 0F11  
                                            _SLRCONC 0F19                                              _SLRCOND 0F1E  
                                            _SLRCONE 0F26                                         ??_TMR1_Start 0003  
                                            _PPSLOCK 0E9B                                         ??_TMR2_Start 0003  
                                       ??_TMR1_Write 0005                                   ??_NVM_UnlockKeySet 0005  
                          ?_INT0_SetInterruptHandler 0003                                 _EUSART1_Deinitialize 0000  
                             _EUSART1_TransmitEnable 0000                                          _SleepWakeUp 1C58  
                                            __Hparam 0000                                              __Lparam 0000  
                                            ___awdiv 150A                                              ___awmod 1744  
                                          ?_vfprintf 0039                                         __psmallconst 1000  
                                 __end_of_TMR1_Start 227A                                   __end_of_TMR2_Start 2272  
                                 __end_of_TMR1_Write 20A2                                              __pcinit 20C8  
                                            __ramtop 1000                                              __ptext0 135A  
                                            __ptext1 214E                                              __ptext2 1D52  
                                            __ptext3 168C                                              __ptext4 1A36  
                                            __ptext5 1C58                                              __ptext6 2028  
                                            __ptext7 1FD0                                              __ptext8 21E6  
                                            __ptext9 1BAA                                            _T1CONbits 0FCE  
                                          _T2CONbits 0FBC                       ??_TMR2_DefaultOverflowCallback 0001  
                                   ___awmod@dividend 0003                                              _nextLab 214E  
                                 _EUSART1_Initialize 1E76                             ??_PIN_MANAGER_Initialize 0003  
                                          _T2HLTbits 0FBD                                           fp__LAB_ISR 0000  
      TMR2_OverflowCallbackRegister@InterruptHandler 0003                                 end_of_initialization 20E0  
                                          _T2RSTbits 0FBF                             _INT2_SetInterruptHandler 2210  
                                ?_EUSART1_Initialize 0001                                        ??_EEPROM_Read 0006  
                                            fputc@fp 0005                          _EUSART1_OverrunErrorHandler 0060  
                                            fputs@fp 000E                                    __end_of_vfpfcnvrt 135A  
                                            postdec2 0FDD                                        _checkButtonS1 1D52  
                                            postinc0 0FEE                                              postinc1 0FE6  
                                            postinc2 0FDE                                     vfpfcnvrt@convarg 0033  
                                   ?_ADCC_Initialize 0001                                           ??_vfprintf 003F  
                   __end_of_ADCC_GetSingleConversion 1FD0                                 ??_EUSART1_Initialize 0006  
                              _INT1_InterruptHandler 0078                                            _TMR0_Stop 0000  
                                          _PORTBbits 0F8D                                            _TMR1_Stop 2272  
                                          _TMR2_Stop 226A                                _TMR1_OverflowCallback 006F  
              __end_of_TMR0_OverflowCallbackRegister 2248                        _TMR0_OverflowCallbackRegister 223A  
                                       ??_HelloWorld 0003         TMR0_OverflowCallbackRegister@CallbackHandler 0003  
           TMR1_GateCallbackRegister@CallbackHandler 0003         TMR1_OverflowCallbackRegister@CallbackHandler 0003  
                                     __end_of_EEPROM 1920                        __end_of_PWM_Output_D5_Disable 21A2  
                                       _EUSART1_Read 0000                 __end_of_TMR0_DefaultOverflowCallback 227E  
                       _TMR0_DefaultOverflowCallback 227C                           __end_of_PWM3_LoadDutyValue 1FA0  
                          NVM_UnlockKeySet@unlockKey 0003                                       ?_checkButtonS1 0001  
                                __end_of_EEPROM_Read 2028                                   __end_of_HelloWorld 1EF6  
                       __end_of_INTERRUPT_Initialize 1E32                                       __end_of_Timers 1ABE  
                                     __end_of_Rotate 1BAA                         _INT0_DefaultInterruptHandler 0000  
                                        vfpfcnvrt@ap 002F                                          vfpfcnvrt@cp 0037  
                                        vfpfcnvrt@fp 002B                                           ?_TMR1_Stop 0001  
                                         ?_TMR2_Stop 0001                             ?_TMR1_HasOverflowOccured 0001  
                                     __end_of_printf 20C8                                   _rotateReg@VSR$F162 0055  
                                start_initialization 20C8                                          __end_of_ADC 1A36  
                                        __end_of_PWM 19AC                                          __end_of_VSR 1744  
                                 fp__TMR0_Initialize 0000                                          __end_of_abs 1F36  
                                        __end_of_pad 1B38                                   TMR1_Write@timerVal 0003  
                                  ?_TMR0_OverflowISR 0001                                             ??_EEPROM 000B  
                                          _Interrupt 1CAC                                   ??_TMR0_OverflowISR 0001  
                                      fp__TMR1_Start 0000                                        fp__TMR2_Start 0000  
                                      fp__TMR1_Write 0000                      fp__TMR0_DefaultOverflowCallback 0000  
                      ?_TMR0_DefaultOverflowCallback 0001                                             ??_Timers 0005  
                                        vfprintf@fmt 003B                                   fp__TMR1_Initialize 0000  
                                           ??_Rotate 0003                             _TMR1_DefaultGateCallback 0000  
                                        _CCPTMRSbits 0FAD                      ??_TMR1_OverflowCallbackRegister 0006  
                                           ??_printf 0045                                             ?_LAB_ISR 0001  
                           _ADCC_GetSingleConversion 1FA0                                          __pbssCOMRAM 004C  
                   __end_of_INT0_SetInterruptHandler 223A                                            _adcResult 0057  
                                 fp__TMR2_Initialize 0000                     fp__TMR0_OverflowCallbackRegister 0000  
                     ?_TMR0_OverflowCallbackRegister 0003                                    _TMR1_GateCallback 006C  
                                         ?_Interrupt 0001                                _adcResult@EEPROM$F389 0052  
                              _INT2_InterruptHandler 0075                                          _EEPROM_Read 1FFC  
                              _TMR2_OverflowCallback 0069                                         ?_SleepWakeUp 0001  
                                    ??_checkButtonS1 0003                               _PIN_MANAGER_Initialize 15CE  
                                          _dtoa$2783 0022                                            _labNumber 005D  
                                          __pintcode 0008                      ADCC_GetSingleConversion@channel 0007  
                                           ?___awdiv 0003                                             ?___awmod 0003  
                                        _flagCounter 0059                      __end_of_TMR1_HasOverflowOccured 21E6  
                       ??_INTERRUPT_InterruptManager 0001                                          ??_TMR1_Stop 0003  
                                        ??_TMR2_Stop 0003                                             _BAUD1CON 0F9E  
                                  ??_NVM_StatusClear 0003                                          __smallconst 1000  
                         ??_INT2_SetInterruptHandler 0006                                             ?_nextLab 0001  
                                  _EUSART1_IsRxReady 0000                                    _EUSART1_IsTxReady 0000  
                                           _T2CLKCON 0FBE                                 _INTERRUPT_Initialize 1DEC  
                                   _CLOCK_Initialize 21A2                                    ??_TMR0_Initialize 0006  
                                           _LATAbits 0F82                            ?_INT1_SetInterruptHandler 0003  
                                           _PIE0bits 0EBD                                             i2u210_40 0054  
                                           i2u210_41 0050                                             i2u211_40 0062  
                                           i2u211_41 005E                                             i2u205_40 1F50  
                                           i2u205_41 1F4C                                             i2u206_48 1F56  
                                           i2u207_40 0022                                             i2u206_49 1F6A  
                                           i2u207_41 001E                                             i2u208_40 0030  
                                           i2u208_41 002C                                             i2u209_40 0046  
                                           i2u209_41 0042                                             i2u171_40 213E  
                                           i2u171_41 213A                                             _PIR0bits 0EC5  
                                           _PIR1bits 0EC6                                             _PIR3bits 0EC8  
                                           _PIR4bits 0EC9                                             _PIR5bits 0ECA  
                                      ??_TMR1_Reload 0005                                    ??_PIN_MANAGER_IOC 0001  
                     ??_TMR0_DefaultOverflowCallback 0001                                            _vfpfcnvrt 1226  
                                  ??_TMR1_Initialize 0006                                    ??_PWM3_Initialize 0003  
                                          _rotateReg 0058                                           _ADCON0bits 0F5B  
                                         _ADCON1bits 0F54                                           _ADCON2bits 0F55  
                                         _ADCON3bits 0F56                         __end_of_PWM_Output_D5_Enable 2186  
                              ?_INTERRUPT_Initialize 0001                             _INT0_SetInterruptHandler 222C  
                                _EUSART1_AutoBaudSet 0000                                          ??_Interrupt 0006  
                                  ??_TMR2_Initialize 0006                              _EUSART1_TransmitDisable 0000  
                                       fp__TMR1_Stop 0000                                         fp__TMR2_Stop 0000  
                                         _ADSTATbits 0F60                                             __Hrparam 0000  
                                         vfprintf@ap 003D                                             __Lrparam 0000  
                                         vfprintf@fp 0039                                           ?_vfpfcnvrt 002B  
                                 _PWM3_LoadDutyValue 1F6C                                  __end_of_TMR1_Reload 2256  
                              _TMR1_InterruptHandler 0072                  _EUSART1_DefaultFramingErrorCallback 0000  
                                         _T0CON0bits 0FD4                                             _labState 005B  
                                           __ptext10 21F4                                             __ptext11 2202  
                                           __ptext20 222C                                             __ptext12 2052  
                                           __ptext21 1E76                                             __ptext13 21BA  
                                         _T1GCONbits 0FCF                                             __ptext30 216A  
                                           __ptext22 20EA                                             __ptext14 15CE  
                                           __ptext31 2186                                             __ptext23 210C  
                                           __ptext15 2260                                             __ptext40 17F4  
                                           __ptext32 1F6C                                             __ptext24 21A2  
                                           __ptext16 2266                                             __ptext41 2272  
                                           __ptext33 1CAC                                             __ptext25 1C02  
                                           __ptext17 1DEC                                             __ptext50 1092  
                                           __ptext42 2276                                             __ptext34 223A  
                                           __ptext26 1B38                                             __ptext18 2210  
                                           __ptext51 1ABE                                             __ptext43 2248  
                                           __ptext35 1EB6                                             __ptext27 1920  
                                           __ptext19 221E                                             __ptext60 1F36  
                                           __ptext52 1E32                                             __ptext44 207A  
                                           __ptext36 1890                                             __ptext28 226A  
                                           __ptext61 227C                                             __ptext53 1440  
                                           __ptext45 21D0                                             __ptext37 2256  
                                           __ptext29 226E                                             __ptext62 227E  
                                           __ptext54 227A                                             __ptext46 19AC  
                                           __ptext38 1DA0                                             __ptext63 212E  
                                           __ptext55 1EF6                                             __ptext47 20A2  
                                           __ptext39 1FFC                                             __ptext64 2280  
                                           __ptext56 1744                                             __ptext48 1D00  
                                           __ptext65 2282                                             __ptext57 150A  
                                           __ptext49 1226                                             __ptext66 0000  
                                           __ptext58 1FA0                                  ?_PWM3_LoadDutyValue 0003  
                                           _btnState 005A                                        ?_EEPROM_Write 0003  
              __end_of_TMR2_OverflowCallbackRegister 21F4                        _TMR2_OverflowCallbackRegister 21E6  
                                 _adcResult@PWM$F208 004C                                     _NVM_UnlockKeySet 2256  
               __end_of_TMR1_DefaultOverflowCallback 2280                         _TMR1_DefaultOverflowCallback 227E  
                              _PWM_Output_D5_Disable 2186                                           _RC1STAbits 0F9C  
                                     _NVM_Initialize 2260                                 ??_PWM3_LoadDutyValue 0005  
                                           isa$xinst 0000                           ??_ADCC_GetSingleConversion 0005  
                                           int$flags 005E                                             _vfprintf 1D00  
                 __end_of_INTERRUPT_InterruptManager 0076                           _INTERRUPT_InterruptManager 0008  
                                          printf@fmt 0041                          _EUSART1_FramingErrorHandler 0063  
                       _INT1_DefaultInterruptHandler 0000                                           _INTCONbits 0FF2  
                                        _NVMCON0bits 0F7F                                          _NVMCON1bits 0F80  
                             ??_INTERRUPT_Initialize 0006                                  _TMR2_PeriodCountSet 0000  
                                     ??_EEPROM_Write 0007                                             intlevel2 0000  
                                       ?_EEPROM_Read 0003                              ?_PIN_MANAGER_Initialize 0001  
                                        _PPSLOCKbits 0E9B                                          _WDTCON0bits 0ECD  
                             __end_of_NVM_Initialize 2266                                 _PWM_Output_D5_Enable 216A  
                                 EEPROM_Read@address 0003                                      _NVM_StatusClear 2266  
                    ??_TMR0_OverflowCallbackRegister 0006                                          _TMR0_Reload 0000  
                    fp__TMR1_DefaultOverflowCallback 0000                        ?_TMR1_DefaultOverflowCallback 0001  
                                        _TMR1_Reload 2248                                             printf@ap 0045  
                        PWM3_LoadDutyValue@dutyValue 0003                                          ??_vfpfcnvrt 0031  
                                 _eusart1RxLastError 0082                             __end_of_CLOCK_Initialize 21BA  
                         ?_TMR1_GateCallbackRegister 0003                                      _TMR0_Initialize 2052  
                   __end_of_INT1_SetInterruptHandler 222C                  _EUSART1_DefaultOverrunErrorCallback 0000  
                                         _TMR1_Tasks 0000                                           _TMR0_Start 0000  
                              _rotateReg@Timers$F236 0054                                           _TMR2_Tasks 0000  
                                         _TMR1_Start 2276                                           _TX1STAbits 0F9D  
                                         _TMR2_Start 226E                                           _TMR1_Write 207A  
                EEPROM_Write@globalInterruptBitValue 000A                       __end_of_PIN_MANAGER_Initialize 168C  
                                  ??_ADCC_Initialize 0003                                      _PIN_MANAGER_IOC 2282  
                             ?_PWM_Output_D5_Disable 0001                                      ?_NVM_Initialize 0001  
                                    _TMR1_Initialize 1BAA                                      _PWM3_Initialize 21BA  
                              ?_PWM_Output_D5_Enable 0001                                  EEPROM_Write@address 0003  
                              __end_of_checkButtonS1 1DA0  
